{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/config/presets/local/common.ts"],"names":[],"mappings":";;;AAAA,4CAAyC;AACzC,wDAAqD;AACrD,mFAA8E;AAE9E,kCAAyE;AAElE,KAAK,UAAU,aAAa,CACjC,IAAY,EACZ,QAAgB,EAChB,SAAkB,EAClB,GAAwB;IAExB,IAAI,GAAkB,CAAC;IACvB,IAAI;QACF,GAAG,GAAG,MAAM,mBAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC;KACnE;IAAC,OAAO,GAAG,EAAE;QACZ,IAAI,GAAG,YAAY,uCAAiB,EAAE;YACpC,MAAM,GAAG,CAAC;SACX;QAED,eAAM,CAAC,KAAK,CAAC,eAAe,QAAQ,iBAAiB,IAAI,EAAE,CAAC,CAAC;QAE7D,MAAM,IAAI,KAAK,CAAC,2BAAoB,CAAC,CAAC;KACvC;IAED,IAAI,CAAC,GAAG,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,2BAAoB,CAAC,CAAC;KACvC;IAED,OAAO,IAAA,kBAAW,EAAC,GAAG,CAAC,CAAC;AAC1B,CAAC;AAxBD,sCAwBC;AAED,SAAgB,qBAAqB,CACnC,IAAY,EACZ,UAAkB,EAClB,UAA8B,EAC9B,QAAgB,EAChB,GAAwB;IAExB,OAAO,IAAA,kBAAW,EAAC;QACjB,IAAI;QACJ,UAAU;QACV,UAAU;QACV,QAAQ;QACR,GAAG;QACH,KAAK,EAAE,aAAa;KACrB,CAAC,CAAC;AACL,CAAC;AAfD,sDAeC","sourcesContent":["import { logger } from '../../../logger';\nimport { platform } from '../../../modules/platform';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport type { Preset } from '../types';\nimport { PRESET_DEP_NOT_FOUND, fetchPreset, parsePreset } from '../util';\n\nexport async function fetchJSONFile(\n  repo: string,\n  fileName: string,\n  _endpoint?: string,\n  tag?: string | undefined\n): Promise<Preset> {\n  let raw: string | null;\n  try {\n    raw = await platform.getRawFile(fileName, repo, tag ?? undefined);\n  } catch (err) {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n\n    logger.debug(`Preset file ${fileName} not found in ${repo}`);\n\n    throw new Error(PRESET_DEP_NOT_FOUND);\n  }\n\n  if (!raw) {\n    throw new Error(PRESET_DEP_NOT_FOUND);\n  }\n\n  return parsePreset(raw);\n}\n\nexport function getPresetFromEndpoint(\n  repo: string,\n  filePreset: string,\n  presetPath: string | undefined,\n  endpoint: string,\n  tag?: string | undefined\n): Promise<Preset | undefined> {\n  return fetchPreset({\n    repo,\n    filePreset,\n    presetPath,\n    endpoint,\n    tag,\n    fetch: fetchJSONFile,\n  });\n}\n"]}