{"version":3,"file":"regex-managers.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/regex-managers.ts"],"names":[],"mappings":";;;AAEA,+EAA+E;AAElE,QAAA,OAAO,GAA2B;IAC7C,kBAAkB,EAAE;QAClB,WAAW,EAAE,6CAA6C;QAC1D,aAAa,EAAE;YACb;gBACE,SAAS,EAAE;oBACT,wCAAwC;oBACxC,yCAAyC;iBAC1C;gBACD,YAAY,EAAE;oBACZ,+QAA+Q;iBAChR;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,WAAW,EACT,iEAAiE;QACnE,aAAa,EAAE;YACb;gBACE,SAAS,EAAE,CAAC,4CAA4C,CAAC;gBACzD,YAAY,EAAE;oBACZ,uPAAuP;iBACxP;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,WAAW,EAAE,uDAAuD;QACpE,aAAa,EAAE;YACb;gBACE,kBAAkB,EAAE,QAAQ;gBAC5B,SAAS,EAAE,CAAC,oBAAoB,CAAC;gBACjC,YAAY,EAAE;oBACZ,6FAA6F;iBAC9F;aACF;SACF;KACF;IACD,cAAc,EAAE;QACd,WAAW,EAAE,kDAAkD;QAC/D,aAAa,EAAE;YACb;gBACE,SAAS,EAAE,CAAC,cAAc,CAAC;gBAC3B,YAAY,EAAE;oBACZ,mJAAmJ;iBACpJ;gBACD,kBAAkB,EAAE,2CAA2C;aAChE;SACF;KACF;CACF,CAAC","sourcesContent":["import type { Preset } from '../types';\n\n/* eslint sort-keys: [\"error\", \"asc\", {caseSensitive: false, natural: true}] */\n\nexport const presets: Record<string, Preset> = {\n  dockerfileVersions: {\n    description: 'Update `_VERSION` variables in Dockerfiles.',\n    regexManagers: [\n      {\n        fileMatch: [\n          '(^|/|\\\\.)([Dd]ocker|[Cc]ontainer)file$',\n          '(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$',\n        ],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\\\s]+?))?\\\\s(?:ENV|ARG) .+?_VERSION[ =]\"?(?<currentValue>.+?)\"?\\\\s',\n        ],\n      },\n    ],\n  },\n  githubActionsVersions: {\n    description:\n      'Update `_VERSION` environment variables in GitHub Action files.',\n    regexManagers: [\n      {\n        fileMatch: ['^.github/(?:workflows|actions)/.+\\\\.ya?ml$'],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>[^\\\\s]+?)(?: (?:lookupName|packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[a-z-0-9]+?))?\\\\s+[A-Za-z0-9_]+?_VERSION\\\\s*:\\\\s*[\"\\']?(?<currentValue>.+?)[\"\\']?\\\\s',\n        ],\n      },\n    ],\n  },\n  helmChartYamlAppVersions: {\n    description: 'Update `appVersion` value in Helm chart `Chart.yaml`.',\n    regexManagers: [\n      {\n        datasourceTemplate: 'docker',\n        fileMatch: ['(^|/)Chart\\\\.yaml$'],\n        matchStrings: [\n          '#\\\\s*renovate: image=(?<depName>.*?)\\\\s+appVersion:\\\\s*[\"\\']?(?<currentValue>[\\\\w+\\\\.\\\\-]*)',\n        ],\n      },\n    ],\n  },\n  tfvarsVersions: {\n    description: 'Update `*_version` variables in `.tfvars` files.',\n    regexManagers: [\n      {\n        fileMatch: ['.+\\\\.tfvars$'],\n        matchStrings: [\n          '#\\\\s*renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\\\s.*?_version\\\\s*=\\\\s*\"(?<currentValue>.*)\"',\n        ],\n        versioningTemplate: '{{#if versioning}}{{{versioning}}}{{/if}}',\n      },\n    ],\n  },\n};\n"]}