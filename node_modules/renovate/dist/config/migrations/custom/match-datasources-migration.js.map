{"version":3,"file":"match-datasources-migration.js","sourceRoot":"","sources":["../../../../lib/config/migrations/custom/match-datasources-migration.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,mEAA+D;AAE/D,MAAa,yBAA0B,SAAQ,sCAAiB;IAC5C,YAAY,GAAG,kBAAkB,CAAC;IAE3C,GAAG,CAAC,KAAc;QACzB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,YAAE,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE;gBAClE,QAAQ,UAAU,EAAE;oBAClB,KAAK,eAAe;wBAClB,OAAO,cAAc,CAAC;oBACxB,KAAK,QAAQ;wBACX,OAAO,gBAAgB,CAAC;oBAC1B,KAAK,MAAM;wBACT,OAAO,cAAc,CAAC;oBACxB;wBACE,OAAO,UAAU,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACxB;IACH,CAAC;CACF;AArBD,8DAqBC","sourcesContent":["import is from '@sindresorhus/is';\nimport { AbstractMigration } from '../base/abstract-migration';\n\nexport class MatchDatasourcesMigration extends AbstractMigration {\n  override readonly propertyName = 'matchDatasources';\n\n  override run(value: unknown): void {\n    if (Array.isArray(value)) {\n      const newValue = value.filter(is.nonEmptyString).map((datasource) => {\n        switch (datasource) {\n          case 'adoptium-java':\n            return 'java-version';\n          case 'dotnet':\n            return 'dotnet-version';\n          case 'node':\n            return 'node-version';\n          default:\n            return datasource;\n        }\n      });\n\n      this.rewrite(newValue);\n    }\n  }\n}\n"]}