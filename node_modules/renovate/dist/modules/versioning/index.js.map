{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/modules/versioning/index.ts"],"names":[],"mappings":";;;;AAAA,wDAAgC;AAChC,qCAAsC;AACtC,wEAAkD;AAGlD,kDAAwB;AAEX,QAAA,iBAAiB,GAAG,aAAa,CAAC;AAExC,MAAM,iBAAiB,GAAG,GAAa,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,aAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AAAnE,QAAA,iBAAiB,qBAAkD;AAChF;;GAEG;AACI,MAAM,cAAc,GAAG,GAG5B,EAAE,CAAC,aAAW,CAAC;AAHJ,QAAA,cAAc,kBAGV;AAEjB,SAAgB,GAAG,CAAC,UAAU,GAAG,EAAE;IACjC,MAAM,GAAG,GAAG,mBAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAE7C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;QAChB,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE;YAC3D,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;SAC1B;QAED,4CAA4C;QAC5C,MAAM,GAAG,CAAC,KAAK,CAAC;KACjB;IAED,OAAO,GAAG,CAAC,IAAI,CAAC;AAClB,CAAC;AAdD,kBAcC","sourcesContent":["import versionings from './api';\nimport { Versioning } from './schema';\nimport * as semverCoerced from './semver-coerced';\nimport type { VersioningApi, VersioningApiConstructor } from './types';\n\nexport * from './types';\n\nexport const defaultVersioning = semverCoerced;\n\nexport const getVersioningList = (): string[] => Array.from(versionings.keys());\n/**\n * Get versioning map. Can be used to dynamically add new versioning type\n */\nexport const getVersionings = (): Map<\n  string,\n  VersioningApi | VersioningApiConstructor\n> => versionings;\n\nexport function get(versioning = ''): VersioningApi {\n  const res = Versioning.safeParse(versioning);\n\n  if (!res.success) {\n    const [issue] = res.error.issues;\n    if (issue && issue.code === 'custom' && issue.params?.error) {\n      throw issue.params.error;\n    }\n\n    // istanbul ignore next: should never happen\n    throw res.error;\n  }\n\n  return res.data;\n}\n"]}