"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBranchPr = exports.findPr = exports.getPr = exports.ensureComment = exports.ensureCommentRemoval = exports.getBranchStatusCheck = exports.getBranchStatus = exports.setBranchStatus = exports.deleteLabel = exports.createPr = exports.addAssignees = exports.addReviewers = exports.mergePr = exports.updatePr = exports.massageMarkdown = exports.ensureIssue = exports.ensureIssueClosing = exports.getPrList = exports.getJsonFile = exports.getRawFile = exports.getIssueList = exports.findIssue = exports.getRepoForceRebase = exports.initRepo = exports.getRepos = exports.initPlatform = exports.id = void 0;
exports.id = 'local';
function initPlatform(params) {
    return Promise.resolve({
        dryRun: 'lookup',
        endpoint: 'local',
        persistRepoData: true,
        requireConfig: 'optional',
    });
}
exports.initPlatform = initPlatform;
function getRepos() {
    return Promise.resolve([]);
}
exports.getRepos = getRepos;
function initRepo() {
    return Promise.resolve({
        defaultBranch: '',
        isFork: false,
        repoFingerprint: '',
    });
}
exports.initRepo = initRepo;
function getRepoForceRebase() {
    return Promise.resolve(false);
}
exports.getRepoForceRebase = getRepoForceRebase;
function findIssue() {
    return Promise.resolve(null);
}
exports.findIssue = findIssue;
function getIssueList() {
    return Promise.resolve([]);
}
exports.getIssueList = getIssueList;
function getRawFile() {
    return Promise.resolve(null);
}
exports.getRawFile = getRawFile;
function getJsonFile() {
    return Promise.resolve(null);
}
exports.getJsonFile = getJsonFile;
function getPrList() {
    return Promise.resolve([]);
}
exports.getPrList = getPrList;
function ensureIssueClosing() {
    return Promise.resolve();
}
exports.ensureIssueClosing = ensureIssueClosing;
function ensureIssue() {
    return Promise.resolve(null);
}
exports.ensureIssue = ensureIssue;
function massageMarkdown(input) {
    return input;
}
exports.massageMarkdown = massageMarkdown;
function updatePr() {
    return Promise.resolve();
}
exports.updatePr = updatePr;
function mergePr() {
    return Promise.resolve(false);
}
exports.mergePr = mergePr;
function addReviewers() {
    return Promise.resolve();
}
exports.addReviewers = addReviewers;
function addAssignees() {
    return Promise.resolve();
}
exports.addAssignees = addAssignees;
function createPr() {
    return Promise.resolve(null);
}
exports.createPr = createPr;
function deleteLabel() {
    return Promise.resolve();
}
exports.deleteLabel = deleteLabel;
function setBranchStatus() {
    return Promise.resolve();
}
exports.setBranchStatus = setBranchStatus;
function getBranchStatus() {
    return Promise.resolve('red');
}
exports.getBranchStatus = getBranchStatus;
function getBranchStatusCheck() {
    return Promise.resolve(null);
}
exports.getBranchStatusCheck = getBranchStatusCheck;
function ensureCommentRemoval() {
    return Promise.resolve();
}
exports.ensureCommentRemoval = ensureCommentRemoval;
function ensureComment() {
    return Promise.resolve(false);
}
exports.ensureComment = ensureComment;
function getPr() {
    return Promise.resolve(null);
}
exports.getPr = getPr;
function findPr() {
    return Promise.resolve(null);
}
exports.findPr = findPr;
function getBranchPr() {
    return Promise.resolve(null);
}
exports.getBranchPr = getBranchPr;
//# sourceMappingURL=index.js.map