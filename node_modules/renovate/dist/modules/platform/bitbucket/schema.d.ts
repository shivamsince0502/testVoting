import { z } from 'zod';
export declare const PagedSourceResultsSchema: z.ZodObject<{
    page: z.ZodOptional<z.ZodNumber>;
    size: z.ZodOptional<z.ZodNumber>;
    next: z.ZodOptional<z.ZodString>;
    pagelen: z.ZodNumber;
    values: z.ZodArray<z.ZodObject<{
        path: z.ZodString;
        type: z.ZodEnum<["commit_directory", "commit_file"]>;
        commit: z.ZodObject<{
            hash: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            hash: string;
        }, {
            hash: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "commit_directory" | "commit_file";
        path: string;
        commit: {
            hash: string;
        };
    }, {
        type: "commit_directory" | "commit_file";
        path: string;
        commit: {
            hash: string;
        };
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    values: {
        type: "commit_directory" | "commit_file";
        path: string;
        commit: {
            hash: string;
        };
    }[];
    pagelen: number;
    page?: number | undefined;
    size?: number | undefined;
    next?: string | undefined;
}, {
    values: {
        type: "commit_directory" | "commit_file";
        path: string;
        commit: {
            hash: string;
        };
    }[];
    pagelen: number;
    page?: number | undefined;
    size?: number | undefined;
    next?: string | undefined;
}>;
