import { z } from 'zod';
export declare const BicepResourceVersionIndex: z.ZodEffects<z.ZodObject<{
    Resources: z.ZodRecord<z.ZodString, z.ZodObject<{
        RelativePath: z.ZodString;
        Index: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        RelativePath: string;
        Index: number;
    }, {
        RelativePath: string;
        Index: number;
    }>>;
    Functions: z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        RelativePath: z.ZodString;
        Index: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        RelativePath: string;
        Index: number;
    }, {
        RelativePath: string;
        Index: number;
    }>, "many">>>;
}, "strip", z.ZodTypeAny, {
    Resources: Record<string, {
        RelativePath: string;
        Index: number;
    }>;
    Functions: Record<string, Record<string, {
        RelativePath: string;
        Index: number;
    }[]>>;
}, {
    Resources: Record<string, {
        RelativePath: string;
        Index: number;
    }>;
    Functions: Record<string, Record<string, {
        RelativePath: string;
        Index: number;
    }[]>>;
}>, {
    [k: string]: string[];
}, {
    Resources: Record<string, {
        RelativePath: string;
        Index: number;
    }>;
    Functions: Record<string, Record<string, {
        RelativePath: string;
        Index: number;
    }[]>>;
}>;
export type BicepResourceVersionIndex = z.infer<typeof BicepResourceVersionIndex>;
