{"version":3,"file":"get.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/npm/get.ts"],"names":[],"mappings":";;;;AAAA,gEAA2B;AAC3B,kEAAkC;AAClC,iCAAiC;AACjC,6BAAwB;AACxB,mDAAsD;AACtD,sEAAkE;AAClE,4CAAyC;AACzC,mFAA8E;AAC9E,kFAA4D;AAG5D,+CAA4C;AAC5C,2CAAiD;AAIjD,MAAM,gBAAgB,GAAG,IAAA,aAAK,EAC5B,0FAA0F,CAC3F,CAAC;AAEF,MAAM,eAAe,GAA2B;IAC9C,SAAS,EAAE,wBAAwB;IACnC,MAAM,EAAE,qBAAqB;IAC7B,MAAM,EAAE,qBAAqB;CAC9B,CAAC;AAOF,MAAM,aAAa,GAAG,OAAC;KACpB,KAAK,CAAC;IACL,OAAC;SACE,MAAM,EAAE;SACR,QAAQ,EAAE;SACV,SAAS,CAAC,CAAC,UAAU,EAAiB,EAAE;QACvC,IAAI,SAAS,GAAkB,IAAI,CAAC;QACpC,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,UAAU,EAAE,MAAM,EAAE;YACtB,MAAM,EAAE,QAAQ,GAAG,QAAQ,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC;YAC7D,SAAS,GAAG,eAAe,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;SACnD;aAAM;YACL,SAAS,GAAG,UAAU,CAAC;SACxB;QACD,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;IACxC,CAAC,CAAC;IACJ,OAAC;SACE,MAAM,CAAC;QACN,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE;QACpC,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE;KAC3C,CAAC;SACD,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE;QAChC,MAAM,GAAG,GAAkB,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;QAEtE,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC;SACrB;QAED,IAAI,SAAS,EAAE;YACb,GAAG,CAAC,eAAe,GAAG,SAAS,CAAC;SACjC;QAED,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;CACL,CAAC;KACD,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;AAE9C,KAAK,UAAU,aAAa,CACjC,IAAU,EACV,WAAmB,EACnB,WAAmB;IAEnB,eAAM,CAAC,KAAK,CAAC,qBAAqB,WAAW,GAAG,CAAC,CAAC;IAElD,MAAM,UAAU,GAAG,IAAA,kBAAY,EAAC,WAAW,EAAE,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IAE9E,iCAAiC;IACjC,MAAM,cAAc,GAAG,qBAAqB,CAAC;IAC7C,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,GAAG,CACzC,cAAc,EACd,UAAU,CACX,CAAC;IACF,IAAI,YAAY,EAAE;QAChB,IAAI,YAAY,CAAC,SAAS,EAAE;YAC1B,MAAM,YAAY,GAAG,gBAAQ,CAAC,OAAO,CACnC,YAAY,CAAC,SAAS,CAAC,YAAY,CACpC,CAAC;YACF,IAAI,YAAY,CAAC,OAAO,IAAI,YAAY,GAAG,gBAAQ,CAAC,KAAK,EAAE,EAAE;gBAC3D,eAAM,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;gBACvD,OAAO,YAAY,CAAC,SAAS,CAAC;gBAC9B,OAAO,YAAY,CAAC;aACrB;YACD,eAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAC/C;aAAM;YACL,eAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;YAC7C,OAAO,YAAY,CAAC;SACrB;KACF;IACD,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,0BAA0B;QACzD,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,EAAE,CAAC;QACtD,CAAC,CAAC,EAAE,CAAC;IACP,MAAM,YAAY,GAAG,gBAAQ,CAAC,KAAK,EAAE;SAClC,IAAI,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;SAC/B,KAAK,EAAG,CAAC;IACZ,IAAI,mBAAmB,GAAG,qBAAY,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAClE,IAAI,CAAC,CAAC,YAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,mBAAmB,GAAG,YAAY,CAAC,EAAE;QAC3E,mBAAmB,GAAG,YAAY,CAAC;KACpC;IAED,MAAM,GAAG,GAAG,kBAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAElC,IAAI;QACF,MAAM,OAAO,GAAgB,EAAE,CAAC;QAChC,IAAI,YAAY,EAAE,SAAS,EAAE,IAAI,EAAE;YACjC,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,EAAE,mBAAmB,CAAC,CAAC;YACnD,OAAO,CAAC,OAAO,GAAG,EAAE,eAAe,EAAE,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACpE;QACD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAc,UAAU,EAAE,OAAO,CAAC,CAAC;QACjE,IAAI,YAAY,EAAE,SAAS,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;YACrD,eAAM,CAAC,KAAK,CAAC,yBAAyB,WAAW,iBAAiB,CAAC,CAAC;YACpE,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY,CAAC;YACnD,MAAM,YAAY,CAAC,GAAG,CACpB,cAAc,EACd,UAAU,EACV,YAAY,EACZ,mBAAmB,CACpB,CAAC;YACF,OAAO,YAAY,CAAC,SAAS,CAAC;YAC9B,OAAO,YAAY,CAAC;SACrB;QACD,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QAC9B,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE;YACtD,kDAAkD;YAClD,eAAM,CAAC,KAAK,CAAC,2CAA2C,WAAW,EAAE,CAAC,CAAC;YACvE,OAAO,IAAI,CAAC;SACb;QAED,MAAM,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC,CAAC;QACnE,GAAG,CAAC,UAAU,KAAK,aAAa,EAAE,UAAU,CAAC;QAC7C,GAAG,CAAC,QAAQ,KAAK,aAAa,EAAE,QAAQ,CAAC;QAEzC,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE3E,iDAAiD;QACjD,MAAM,GAAG,GAAkB;YACzB,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,GAAG,CAAC,WAAW,CAAC;YACtB,WAAW;SACZ,CAAC;QAEF,IAAI,SAAS,EAAE;YACb,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;SAC3B;QAED,IAAI,eAAe,EAAE;YACnB,GAAG,CAAC,eAAe,GAAG,eAAe,CAAC;SACvC;QAED,IAAI,aAAa,EAAE,UAAU,EAAE;YAC7B,GAAG,CAAC,kBAAkB,GAAG,iBAAiB,WAAW,4CAA4C,WAAW,iDAAiD,aAAa,CAAC,UAAU,wLAAwL,CAAC;SAC/W;QACD,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACvD,MAAM,OAAO,GAAY;gBACvB,OAAO;gBACP,MAAM,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO;gBACvC,YAAY,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,YAAY;gBAClD,eAAe,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,eAAe;aACzD,CAAC;YACF,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE;gBACvB,OAAO,CAAC,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9C;YACD,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE;gBACtC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;aAC7B;YACD,MAAM,cAAc,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC;YAC7D,IAAI,YAAE,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACrC,OAAO,CAAC,WAAW,GAAG,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC;aAClD;YACD,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;YACvE,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,EAAE;gBAC1D,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;aACtC;YACD,IACE,MAAM,CAAC,eAAe;gBACtB,MAAM,CAAC,eAAe,KAAK,GAAG,CAAC,eAAe,EAC9C;gBACA,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;aAClD;YACD,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7B,MAAM,YAAY,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,eAAe,CAAC,CAAC;QACpD,IACE,YAAE,CAAC,cAAc,CAAC,YAAY,CAAC;YAC/B,IAAA,aAAK,EAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAClD;YACA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;YACtB,MAAM,SAAS,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;YACzC,MAAM,YAAY,CAAC,GAAG,CACpB,cAAc,EACd,UAAU,EACV,EAAE,GAAG,GAAG,EAAE,SAAS,EAAE,EACrB,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,YAAY,CAC1C,CAAC;SACH;aAAM;YACL,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;SACtB;QACD,OAAO,GAAG,CAAC;KACZ;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,kBAAkB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChD,MAAM,oBAAoB,GAAG,CAAC,WAAW,CAAC,CAAC;QAC3C,IACE,GAAG,CAAC,OAAO,KAAK,8BAAa;YAC7B,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;YAC3C,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EACvC;YACA,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,CAAC,IAAI,KAAK,oBAAoB,EAAE;YACrC,IAAI,YAAY,EAAE;gBAChB,eAAM,CAAC,IAAI,CACT,EAAE,GAAG,EAAE,EACP,oDAAoD,CACrD,CAAC;gBACF,OAAO,YAAY,CAAC,SAAS,CAAC;gBAC9B,OAAO,YAAY,CAAC;aACrB;YACD,qBAAqB;YACrB,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,IAAI,EAAE;gBACzC,GAAG,CAAC,IAAI,GAAG,8BAA8B,CAAC;aAC3C;YACD,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;SAClC;QACD,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,0BAA0B,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AA3KD,sCA2KC","sourcesContent":["import url from 'node:url';\nimport is from '@sindresorhus/is';\nimport { DateTime } from 'luxon';\nimport { z } from 'zod';\nimport { GlobalConfig } from '../../../config/global';\nimport { HOST_DISABLED } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport * as packageCache from '../../../util/cache/package';\nimport type { Http } from '../../../util/http';\nimport type { HttpOptions } from '../../../util/http/types';\nimport { regEx } from '../../../util/regex';\nimport { joinUrlParts } from '../../../util/url';\nimport type { Release, ReleaseResult } from '../types';\nimport type { CachedReleaseResult, NpmResponse } from './types';\n\nconst SHORT_REPO_REGEX = regEx(\n  /^((?<platform>bitbucket|github|gitlab):)?(?<shortRepo>[A-Za-z0-9_.-]+\\/[A-Za-z0-9_.-]+)$/\n);\n\nconst platformMapping: Record<string, string> = {\n  bitbucket: 'https://bitbucket.org/',\n  github: 'https://github.com/',\n  gitlab: 'https://gitlab.com/',\n};\n\ninterface PackageSource {\n  sourceUrl: string | null;\n  sourceDirectory: string | null;\n}\n\nconst PackageSource = z\n  .union([\n    z\n      .string()\n      .nonempty()\n      .transform((repository): PackageSource => {\n        let sourceUrl: string | null = null;\n        const sourceDirectory = null;\n        const shortMatch = repository.match(SHORT_REPO_REGEX);\n        if (shortMatch?.groups) {\n          const { platform = 'github', shortRepo } = shortMatch.groups;\n          sourceUrl = platformMapping[platform] + shortRepo;\n        } else {\n          sourceUrl = repository;\n        }\n        return { sourceUrl, sourceDirectory };\n      }),\n    z\n      .object({\n        url: z.string().nonempty().nullish(),\n        directory: z.string().nonempty().nullish(),\n      })\n      .transform(({ url, directory }) => {\n        const res: PackageSource = { sourceUrl: null, sourceDirectory: null };\n\n        if (url) {\n          res.sourceUrl = url;\n        }\n\n        if (directory) {\n          res.sourceDirectory = directory;\n        }\n\n        return res;\n      }),\n  ])\n  .catch({ sourceUrl: null, sourceDirectory: null });\n\nexport async function getDependency(\n  http: Http,\n  registryUrl: string,\n  packageName: string\n): Promise<ReleaseResult | null> {\n  logger.trace(`npm.getDependency(${packageName})`);\n\n  const packageUrl = joinUrlParts(registryUrl, packageName.replace('/', '%2F'));\n\n  // Now check the persistent cache\n  const cacheNamespace = 'datasource-npm:data';\n  const cachedResult = await packageCache.get<CachedReleaseResult>(\n    cacheNamespace,\n    packageUrl\n  );\n  if (cachedResult) {\n    if (cachedResult.cacheData) {\n      const softExpireAt = DateTime.fromISO(\n        cachedResult.cacheData.softExpireAt\n      );\n      if (softExpireAt.isValid && softExpireAt > DateTime.local()) {\n        logger.trace('Cached result is not expired - reusing');\n        delete cachedResult.cacheData;\n        return cachedResult;\n      }\n      logger.trace('Cached result is soft expired');\n    } else {\n      logger.trace('Reusing legacy cached result');\n      return cachedResult;\n    }\n  }\n  const cacheMinutes = process.env.RENOVATE_CACHE_NPM_MINUTES\n    ? parseInt(process.env.RENOVATE_CACHE_NPM_MINUTES, 10)\n    : 15;\n  const softExpireAt = DateTime.local()\n    .plus({ minutes: cacheMinutes })\n    .toISO()!;\n  let cacheHardTtlMinutes = GlobalConfig.get('cacheHardTtlMinutes');\n  if (!(is.number(cacheHardTtlMinutes) && cacheHardTtlMinutes > cacheMinutes)) {\n    cacheHardTtlMinutes = cacheMinutes;\n  }\n\n  const uri = url.parse(packageUrl);\n\n  try {\n    const options: HttpOptions = {};\n    if (cachedResult?.cacheData?.etag) {\n      logger.trace({ packageName }, 'Using cached etag');\n      options.headers = { 'If-None-Match': cachedResult.cacheData.etag };\n    }\n    const raw = await http.getJson<NpmResponse>(packageUrl, options);\n    if (cachedResult?.cacheData && raw.statusCode === 304) {\n      logger.trace(`Cached npm result for ${packageName} is revalidated`);\n      cachedResult.cacheData.softExpireAt = softExpireAt;\n      await packageCache.set(\n        cacheNamespace,\n        packageUrl,\n        cachedResult,\n        cacheHardTtlMinutes\n      );\n      delete cachedResult.cacheData;\n      return cachedResult;\n    }\n    const etag = raw.headers.etag;\n    const res = raw.body;\n    if (!res.versions || !Object.keys(res.versions).length) {\n      // Registry returned a 200 OK but with no versions\n      logger.debug(`No versions returned for npm dependency ${packageName}`);\n      return null;\n    }\n\n    const latestVersion = res.versions[res['dist-tags']?.latest ?? ''];\n    res.repository ??= latestVersion?.repository;\n    res.homepage ??= latestVersion?.homepage;\n\n    const { sourceUrl, sourceDirectory } = PackageSource.parse(res.repository);\n\n    // Simplify response before caching and returning\n    const dep: ReleaseResult = {\n      homepage: res.homepage,\n      releases: [],\n      tags: res['dist-tags'],\n      registryUrl,\n    };\n\n    if (sourceUrl) {\n      dep.sourceUrl = sourceUrl;\n    }\n\n    if (sourceDirectory) {\n      dep.sourceDirectory = sourceDirectory;\n    }\n\n    if (latestVersion?.deprecated) {\n      dep.deprecationMessage = `On registry \\`${registryUrl}\\`, the \"latest\" version of dependency \\`${packageName}\\` has the following deprecation notice:\\n\\n\\`${latestVersion.deprecated}\\`\\n\\nMarking the latest version of an npm package as deprecated results in the entire package being considered deprecated, so contact the package author you think this is a mistake.`;\n    }\n    dep.releases = Object.keys(res.versions).map((version) => {\n      const release: Release = {\n        version,\n        gitRef: res.versions?.[version].gitHead,\n        dependencies: res.versions?.[version].dependencies,\n        devDependencies: res.versions?.[version].devDependencies,\n      };\n      if (res.time?.[version]) {\n        release.releaseTimestamp = res.time[version];\n      }\n      if (res.versions?.[version].deprecated) {\n        release.isDeprecated = true;\n      }\n      const nodeConstraint = res.versions?.[version].engines?.node;\n      if (is.nonEmptyString(nodeConstraint)) {\n        release.constraints = { node: [nodeConstraint] };\n      }\n      const source = PackageSource.parse(res.versions?.[version].repository);\n      if (source.sourceUrl && source.sourceUrl !== dep.sourceUrl) {\n        release.sourceUrl = source.sourceUrl;\n      }\n      if (\n        source.sourceDirectory &&\n        source.sourceDirectory !== dep.sourceDirectory\n      ) {\n        release.sourceDirectory = source.sourceDirectory;\n      }\n      return release;\n    });\n    logger.trace({ dep }, 'dep');\n    const cacheControl = raw.headers?.['cache-control'];\n    if (\n      is.nonEmptyString(cacheControl) &&\n      regEx(/(^|,)\\s*public\\s*(,|$)/).test(cacheControl)\n    ) {\n      dep.isPrivate = false;\n      const cacheData = { softExpireAt, etag };\n      await packageCache.set(\n        cacheNamespace,\n        packageUrl,\n        { ...dep, cacheData },\n        etag ? cacheHardTtlMinutes : cacheMinutes\n      );\n    } else {\n      dep.isPrivate = true;\n    }\n    return dep;\n  } catch (err) {\n    const ignoredStatusCodes = [401, 402, 403, 404];\n    const ignoredResponseCodes = ['ENOTFOUND'];\n    if (\n      err.message === HOST_DISABLED ||\n      ignoredStatusCodes.includes(err.statusCode) ||\n      ignoredResponseCodes.includes(err.code)\n    ) {\n      return null;\n    }\n    if (uri.host === 'registry.npmjs.org') {\n      if (cachedResult) {\n        logger.warn(\n          { err },\n          'npmjs error, reusing expired cached result instead'\n        );\n        delete cachedResult.cacheData;\n        return cachedResult;\n      }\n      // istanbul ignore if\n      if (err.name === 'ParseError' && err.body) {\n        err.body = 'err.body deleted by Renovate';\n      }\n      throw new ExternalHostError(err);\n    }\n    logger.debug({ err }, 'Unknown npm lookup error');\n    return null;\n  }\n}\n"]}