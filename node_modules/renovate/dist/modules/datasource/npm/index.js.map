{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/npm/index.ts"],"names":[],"mappings":";;;;AAAA,4EAAsD;AACtD,8CAA2C;AAE3C,+BAAsC;AAEtC,iCAAmC;AAA1B,iGAAA,QAAQ,OAAA;AAEjB,MAAa,aAAc,SAAQ,uBAAU;IAC3C,MAAM,CAAU,EAAE,GAAG,KAAK,CAAC;IAET,qBAAqB,GAAG,IAAI,CAAC;IAE7B,gBAAgB,GAAG,OAAO,CAAC;IAE3B,iBAAiB,GAAG,aAAa,CAAC,EAAE,CAAC;IAEvD;QACE,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAChB,WAAW,EACX,WAAW,GACO;QAClB,qBAAqB;QACrB,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAa,EAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QACrE,OAAO,GAAG,CAAC;IACb,CAAC;;AAxBH,sCAyBC","sourcesContent":["import * as npmVersioning from '../../versioning/npm';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, ReleaseResult } from '../types';\nimport { getDependency } from './get';\n\nexport { setNpmrc } from './npmrc';\n\nexport class NpmDatasource extends Datasource {\n  static readonly id = 'npm';\n\n  override readonly customRegistrySupport = true;\n\n  override readonly registryStrategy = 'first';\n\n  override readonly defaultVersioning = npmVersioning.id;\n\n  constructor() {\n    super(NpmDatasource.id);\n  }\n\n  async getReleases({\n    packageName,\n    registryUrl,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    // istanbul ignore if\n    if (!registryUrl) {\n      return null;\n    }\n\n    const res = await getDependency(this.http, registryUrl, packageName);\n    return res;\n  }\n}\n"]}