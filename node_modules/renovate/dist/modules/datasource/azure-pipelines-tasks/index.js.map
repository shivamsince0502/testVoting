{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/azure-pipelines-tasks/index.ts"],"names":[],"mappings":";;;;AAAA,qEAA8D;AAC9D,kDAA0D;AAC1D,8CAA2C;AAG3C,MAAM,cAAc,GAClB,6EAA6E,CAAC;AAChF,MAAM,kBAAkB,GAAG,GAAG,cAAc,qCAAqC,CAAC;AAClF,MAAM,qBAAqB,GAAG,GAAG,cAAc,yCAAyC,CAAC;AAEzF,MAAa,6BAA8B,SAAQ,uBAAU;IAC3D,MAAM,CAAU,EAAE,GAAG,uBAAuB,CAAC;IAE7C;QACE,KAAK,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAEiB,qBAAqB,GAAG,KAAK,CAAC;IAE9B,iBAAiB,GAAG,UAAU,CAAC;IAEjD,KAAK,CAAC,WAAW,CAAC,EAChB,WAAW,GACO;QAClB,MAAM,QAAQ,GACZ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YACpE,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;QAE1E,IAAI,QAAQ,EAAE;YACZ,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YAC1D,OAAO,EAAE,QAAQ,EAAE,CAAC;SACrB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAOK,AAAN,KAAK,CAAC,QAAQ,CAAC,GAAW;QACxB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAA2B,GAAG,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC;IACd,CAAC;;AAlCH,sEAmCC;AAJO;IALL,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,cAAc,6BAA6B,CAAC,EAAE,EAAE;QAC3D,GAAG,EAAE,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG;QACzB,UAAU,EAAE,EAAE,GAAG,EAAE;KACpB,CAAC;6DAID","sourcesContent":["import { cache } from '../../../util/cache/package/decorator';\nimport { id as versioning } from '../../versioning/loose';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, ReleaseResult } from '../types';\n\nconst TASKS_URL_BASE =\n  'https://raw.githubusercontent.com/renovatebot/azure-devops-marketplace/main';\nconst BUILT_IN_TASKS_URL = `${TASKS_URL_BASE}/azure-pipelines-builtin-tasks.json`;\nconst MARKETPLACE_TASKS_URL = `${TASKS_URL_BASE}/azure-pipelines-marketplace-tasks.json`;\n\nexport class AzurePipelinesTasksDatasource extends Datasource {\n  static readonly id = 'azure-pipelines-tasks';\n\n  constructor() {\n    super(AzurePipelinesTasksDatasource.id);\n  }\n\n  override readonly customRegistrySupport = false;\n\n  override readonly defaultVersioning = versioning;\n\n  async getReleases({\n    packageName,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const versions =\n      (await this.getTasks(BUILT_IN_TASKS_URL))[packageName.toLowerCase()] ??\n      (await this.getTasks(MARKETPLACE_TASKS_URL))[packageName.toLowerCase()];\n\n    if (versions) {\n      const releases = versions.map((version) => ({ version }));\n      return { releases };\n    }\n\n    return null;\n  }\n\n  @cache({\n    namespace: `datasource-${AzurePipelinesTasksDatasource.id}`,\n    key: (url: string) => url,\n    ttlMinutes: 24 * 60,\n  })\n  async getTasks(url: string): Promise<Record<string, string[]>> {\n    const { body } = await this.http.getJson<Record<string, string[]>>(url);\n    return body;\n  }\n}\n"]}