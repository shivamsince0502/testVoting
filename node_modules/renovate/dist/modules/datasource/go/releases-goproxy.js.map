{"version":3,"file":"releases-goproxy.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/go/releases-goproxy.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,iCAAiC;AACjC,sDAAsB;AACtB,4CAAyC;AACzC,qEAA8D;AAC9D,6CAA+C;AAC/C,kEAA4C;AAC5C,+CAA0D;AAC1D,iGAA6D;AAC7D,8CAA2C;AAE3C,iCAA0C;AAC1C,qCAAwC;AACxC,uDAAuD;AAGvD,MAAM,aAAa,GAAkC,EAAE,CAAC;AAExD,MAAM,QAAQ,GAAG,IAAA,aAAK,EAAC,iDAAiD,CAAC,CAAC;AAE1E,MAAa,iBAAkB,SAAQ,uBAAU;IAC/C,MAAM,CAAU,EAAE,GAAG,UAAU,CAAC;IAEhC;QACE,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAEQ,MAAM,GAAG,IAAI,oCAAkB,EAAE,CAAC;IAMrC,AAAN,KAAK,CAAC,WAAW,CAAC,MAAyB;QACzC,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;QAC/B,eAAM,CAAC,KAAK,CAAC,uBAAuB,WAAW,GAAG,CAAC,CAAC;QACpD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,iCAAiC,CAAC;QACzE,IAAI,OAAO,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACxC;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAG,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAEjD,IAAI,MAAM,GAAyB,IAAI,CAAC;QAExC,IAAI,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;YAC9B,eAAM,CAAC,KAAK,CAAC,YAAY,WAAW,sBAAsB,CAAC,CAAC;YAC5D,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC/C,OAAO,MAAM,CAAC;SACf;QAED,KAAK,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,SAAS,EAAE;YACzC,IAAI;gBACF,IAAI,GAAG,KAAK,KAAK,EAAE;oBACjB,MAAM;iBACP;qBAAM,IAAI,GAAG,KAAK,QAAQ,EAAE;oBAC3B,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC/C,MAAM;iBACP;gBAED,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;gBAC7D,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACvB,MAAM,GAAG,GAAG,CAAC;oBACb,IAAI;wBACF,MAAM,UAAU,GAAG,MAAM,uBAAgB,CAAC,aAAa,CACrD,WAAW,CACZ,CAAC;wBACF,MAAM,SAAS,GAAG,IAAA,qBAAY,EAAC,UAAU,CAAC,CAAC;wBAC3C,IAAI,SAAS,EAAE;4BACb,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;yBAC9B;qBACF;oBAAC,OAAO,GAAG,EAAE;wBACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,4BAA4B,WAAW,EAAE,CAAC,CAAC;qBAClE;oBACD,MAAM;iBACP;aACF;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,UAAU,GAAG,GAAG,EAAE,QAAQ,EAAE,UAAU,CAAC;gBAC7C,MAAM,WAAW,GACf,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,KAAK,GAAG,IAAI,UAAU,KAAK,GAAG,CAAC;gBACrE,MAAM,GAAG,GAAG,WAAW;oBACrB,CAAC,CAAC,sDAAsD;oBACxD,CAAC,CAAC,0DAA0D,CAAC;gBAC/D,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,EAAE;oBAChB,MAAM;iBACP;aACF;SACF;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;;;;;;;OAYG;IACH,YAAY,CAAC,QAA4B,OAAO,CAAC,GAAG,CAAC,OAAO;QAC1D,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACrB,OAAO,EAAE,CAAC;SACX;QAED,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7B;QAED,MAAM,MAAM,GAAkB,KAAK;aAChC,KAAK,CAAC,IAAA,aAAK,EAAC,kBAAkB,CAAC,CAAC;aAChC,MAAM,CAAC,OAAO,CAAC;aACf,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,yBAAyB;aACzD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1B,GAAG;YACH,QAAQ,EAAE,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACxC,CAAC,CAAC,CAAC;QAEN,aAAa,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QAC9B,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,qCAAqC;IACrC,MAAM,CAAC,KAAK,GAAG,aAAG,CAAC,MAAM,CAAC;QACxB,IAAI,EAAE;YACJ,SAAS,EAAE;gBACT,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,GAAG;aAC1B;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,GAAG;gBACV,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,OAAO;aAC9B;YACD,KAAK,EAAE;gBACL,KAAK,EAAE,GAAG;gBACV,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,MAAM;aAC7B;YACD,kBAAkB,EAAE;gBAClB,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,gBAAgB;gBACtB,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,GAAG;aAC1B;YACD,aAAa,EAAE;gBACb,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,EAAE;aACzB;YACD,IAAI,EAAE;gBACJ,KAAK,EAAE,YAAY;gBACnB,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,KAAK,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;aAC1D;YACD,WAAW,EAAE;gBACX,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACjC;SACF;QACD,cAAc,EAAE;YACd,IAAI,EAAE,WAAW;YACjB,WAAW,EAAE;gBACX,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACjC;YACD,iBAAiB,EAAE;gBACjB,KAAK,EAAE,GAAG;gBACV,GAAG,EAAE,CAAC;aACP;SACF;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,aAAa,GAAkC,EAAE,CAAC;IAEzD,MAAM,CAAC,YAAY,CACjB,QAAiB,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS;QAE/D,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;YAC3C,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1E,MAAM,MAAM,GAAG,cAAc;YAC3B,CAAC,CAAC,IAAA,aAAK,EAAC,OAAO,cAAc,YAAY,CAAC;YAC1C,CAAC,CAAC,IAAI,CAAC;QACT,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACnC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,KAAa;QACtB,OAAO,KAAK,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAAe,EAAE,WAAmB;QACrD,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC;QACjE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,IAAI;aACR,KAAK,CAAC,oBAAY,CAAC;aACnB,MAAM,CAAC,YAAE,CAAC,8BAA8B,CAAC;aACzC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACX,MAAM,CAAC,OAAO,EAAE,gBAAgB,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAA,aAAK,EAAC,KAAK,CAAC,CAAC,CAAC;YAC5D,OAAO,gBAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO;gBAC/C,CAAC,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE;gBAC/B,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,WAAW,CACf,OAAe,EACf,WAAmB,EACnB,OAAe;QAEf,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,OAAO,OAAO,CAAC;QAC5E,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAc,GAAG,CAAC,CAAC;QAEtD,MAAM,MAAM,GAAY;YACtB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;SAC1B,CAAC;QAEF,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACjB,MAAM,CAAC,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;SACzC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,gBAAgB,CACpB,OAAe,EACf,WAAmB;QAEnB,IAAI;YACF,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC;YACjE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAc,GAAG,CAAC,CAAC;YACtD,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SACzB;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,8BAA8B,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,KAAK,CAAC,mBAAmB,CACvB,OAAe,EACf,WAAmB;QAEnB,MAAM,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,oBAAoB,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACnD,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC;QACrD,MAAM,OAAO,GAAG,QAAQ,EAAE,OAAO,IAAI,0BAA0B,CAAC,WAAW,CAAC;QAC5E,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAQ,EAAE,YAAY,IAAI,GAAG,CAAC,CAAC;QAE7D,MAAM,MAAM,GAAkB,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC/C,KAAK,IAAI,KAAK,GAAG,YAAY,GAAI,KAAK,IAAI,CAAC,EAAE;YAC3C,IAAI,GAAG,GAAG,GAAG,OAAO,GAAG,oBAAoB,IAAI,KAAK,EAAE,CAAC;YACvD,IAAI,CAAC,SAAS,IAAI,KAAK,GAAG,CAAC,EAAE;gBAC3B,GAAG,GAAG,OAAO,CAAC;gBACd,KAAK,IAAI,CAAC,CAAC,CAAC,gCAAgC;aAC7C;YAED,IAAI;gBACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAClD,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE;oBACtD,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG,WAAW,CAAC;oBAElD,IAAI,gBAAgB,EAAE;wBACpB,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC;qBACtC;oBAED,IAAI;wBACF,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;qBACtD;oBAAC,OAAO,GAAG,EAAE;wBACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,0BAA0B,OAAO,EAAE,CAAC,CAAC;wBAC3D,OAAO,EAAE,OAAO,EAAE,CAAC;qBACpB;gBACH,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;aACnC;YAAC,OAAO,GAAG,EAAE;gBACZ,IACE,GAAG,YAAY,gBAAS;oBACxB,GAAG,CAAC,QAAQ,EAAE,UAAU,KAAK,GAAG;oBAChC,KAAK,KAAK,YAAY,EACtB;oBACA,MAAM;iBACP;gBAED,MAAM,GAAG,CAAC;aACX;YAED,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAChE,IAAI,aAAa,EAAE;gBACjB,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC;gBACnB,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,aAAa,CAAC;gBACrC,IAAI,0BAAY,CAAC,aAAa,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oBACjE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;iBACpC;aACF;SACF;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,EAAE,WAAW,EAAqB;QACnD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACpC,MAAM,OAAO,GAAG,iBAAiB,CAAC,YAAY,EAAE,CAAC;QACjD,sBAAsB;QACtB,4EAA4E;QAC5E,OAAO,GAAG,WAAW,KAAK,OAAO,KAAK,OAAO,EAAE,QAAQ,EAAE,EAAE,CAAC;IAC9D,CAAC;;AAvSH,8CAwSC;AA3RO;IAJL,IAAA,iBAAK,EAAC;QACL,SAAS,EAAE,cAAc,iBAAiB,CAAC,EAAE,EAAE;QAC/C,GAAG,EAAE,CAAC,MAAyB,EAAE,EAAE,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC;KAC1E,CAAC;oDA2DD","sourcesContent":["import is from '@sindresorhus/is';\nimport { DateTime } from 'luxon';\nimport moo from 'moo';\nimport { logger } from '../../../logger';\nimport { cache } from '../../../util/cache/package/decorator';\nimport { HttpError } from '../../../util/http';\nimport * as p from '../../../util/promises';\nimport { newlineRegex, regEx } from '../../../util/regex';\nimport goVersioning from '../../versioning/go-mod-directive';\nimport { Datasource } from '../datasource';\nimport type { GetReleasesConfig, Release, ReleaseResult } from '../types';\nimport { BaseGoDatasource } from './base';\nimport { getSourceUrl } from './common';\nimport { GoDirectDatasource } from './releases-direct';\nimport type { GoproxyItem, VersionInfo } from './types';\n\nconst parsedGoproxy: Record<string, GoproxyItem[]> = {};\n\nconst modRegex = regEx(/^(?<baseMod>.*?)(?:[./]v(?<majorVersion>\\d+))?$/);\n\nexport class GoProxyDatasource extends Datasource {\n  static readonly id = 'go-proxy';\n\n  constructor() {\n    super(GoProxyDatasource.id);\n  }\n\n  readonly direct = new GoDirectDatasource();\n\n  @cache({\n    namespace: `datasource-${GoProxyDatasource.id}`,\n    key: (config: GetReleasesConfig) => GoProxyDatasource.getCacheKey(config),\n  })\n  async getReleases(config: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const { packageName } = config;\n    logger.trace(`goproxy.getReleases(${packageName})`);\n    const goproxy = process.env.GOPROXY ?? 'https://proxy.golang.org,direct';\n    if (goproxy === 'direct') {\n      return this.direct.getReleases(config);\n    }\n    const proxyList = this.parseGoproxy(goproxy);\n    const noproxy = GoProxyDatasource.parseNoproxy();\n\n    let result: ReleaseResult | null = null;\n\n    if (noproxy?.test(packageName)) {\n      logger.debug(`Fetching ${packageName} via GONOPROXY match`);\n      result = await this.direct.getReleases(config);\n      return result;\n    }\n\n    for (const { url, fallback } of proxyList) {\n      try {\n        if (url === 'off') {\n          break;\n        } else if (url === 'direct') {\n          result = await this.direct.getReleases(config);\n          break;\n        }\n\n        const res = await this.getVersionsWithInfo(url, packageName);\n        if (res.releases.length) {\n          result = res;\n          try {\n            const datasource = await BaseGoDatasource.getDatasource(\n              packageName\n            );\n            const sourceUrl = getSourceUrl(datasource);\n            if (sourceUrl) {\n              result.sourceUrl = sourceUrl;\n            }\n          } catch (err) {\n            logger.trace({ err }, `Can't get datasource for ${packageName}`);\n          }\n          break;\n        }\n      } catch (err) {\n        const statusCode = err?.response?.statusCode;\n        const canFallback =\n          fallback === '|' ? true : statusCode === 404 || statusCode === 410;\n        const msg = canFallback\n          ? 'Goproxy error: trying next URL provided with GOPROXY'\n          : 'Goproxy error: skipping other URLs provided with GOPROXY';\n        logger.debug({ err }, msg);\n        if (!canFallback) {\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Parse `GOPROXY` to the sequence of url + fallback strategy tags.\n   *\n   * @example\n   * parseGoproxy('foo.example.com|bar.example.com,baz.example.com')\n   * // [\n   * //   { url: 'foo.example.com', fallback: '|' },\n   * //   { url: 'bar.example.com', fallback: ',' },\n   * //   { url: 'baz.example.com', fallback: '|' },\n   * // ]\n   *\n   * @see https://golang.org/ref/mod#goproxy-protocol\n   */\n  parseGoproxy(input: string | undefined = process.env.GOPROXY): GoproxyItem[] {\n    if (!is.string(input)) {\n      return [];\n    }\n\n    if (parsedGoproxy[input]) {\n      return parsedGoproxy[input];\n    }\n\n    const result: GoproxyItem[] = input\n      .split(regEx(/([^,|]*(?:,|\\|))/))\n      .filter(Boolean)\n      .map((s) => s.split(/(?=,|\\|)/)) // TODO: #12872 lookahead\n      .map(([url, separator]) => ({\n        url,\n        fallback: separator === ',' ? ',' : '|',\n      }));\n\n    parsedGoproxy[input] = result;\n    return result;\n  }\n  // https://golang.org/pkg/path/#Match\n  static lexer = moo.states({\n    main: {\n      separator: {\n        match: /\\s*?,\\s*?/, // TODO #12870\n        value: (_: string) => '|',\n      },\n      asterisk: {\n        match: '*',\n        value: (_: string) => '[^/]*',\n      },\n      qmark: {\n        match: '?',\n        value: (_: string) => '[^/]',\n      },\n      characterRangeOpen: {\n        match: '[',\n        push: 'characterRange',\n        value: (_: string) => '[',\n      },\n      trailingSlash: {\n        match: /\\/$/,\n        value: (_: string) => '',\n      },\n      char: {\n        match: /[^*?\\\\[\\n]/,\n        value: (s: string) => s.replace(regEx('\\\\.', 'g'), '\\\\.'),\n      },\n      escapedChar: {\n        match: /\\\\./, // TODO #12870\n        value: (s: string) => s.slice(1),\n      },\n    },\n    characterRange: {\n      char: /[^\\\\\\]\\n]/, // TODO #12870\n      escapedChar: {\n        match: /\\\\./, // TODO #12870\n        value: (s: string) => s.slice(1),\n      },\n      characterRangeEnd: {\n        match: ']',\n        pop: 1,\n      },\n    },\n  });\n\n  static parsedNoproxy: Record<string, RegExp | null> = {};\n\n  static parseNoproxy(\n    input: unknown = process.env.GONOPROXY ?? process.env.GOPRIVATE\n  ): RegExp | null {\n    if (!is.string(input)) {\n      return null;\n    }\n    if (this.parsedNoproxy[input] !== undefined) {\n      return this.parsedNoproxy[input];\n    }\n    this.lexer.reset(input);\n    const noproxyPattern = [...this.lexer].map(({ value }) => value).join('');\n    const result = noproxyPattern\n      ? regEx(`^(?:${noproxyPattern})(?:/.*)?$`)\n      : null;\n    this.parsedNoproxy[input] = result;\n    return result;\n  }\n\n  /**\n   * Avoid ambiguity when serving from case-insensitive file systems.\n   *\n   * @see https://golang.org/ref/mod#goproxy-protocol\n   */\n  encodeCase(input: string): string {\n    return input.replace(regEx(/([A-Z])/g), (x) => `!${x.toLowerCase()}`);\n  }\n\n  async listVersions(baseUrl: string, packageName: string): Promise<Release[]> {\n    const url = `${baseUrl}/${this.encodeCase(packageName)}/@v/list`;\n    const { body } = await this.http.get(url);\n    return body\n      .split(newlineRegex)\n      .filter(is.nonEmptyStringAndNotWhitespace)\n      .map((str) => {\n        const [version, releaseTimestamp] = str.split(regEx(/\\s+/));\n        return DateTime.fromISO(releaseTimestamp).isValid\n          ? { version, releaseTimestamp }\n          : { version };\n      });\n  }\n\n  async versionInfo(\n    baseUrl: string,\n    packageName: string,\n    version: string\n  ): Promise<Release> {\n    const url = `${baseUrl}/${this.encodeCase(packageName)}/@v/${version}.info`;\n    const res = await this.http.getJson<VersionInfo>(url);\n\n    const result: Release = {\n      version: res.body.Version,\n    };\n\n    if (res.body.Time) {\n      result.releaseTimestamp = res.body.Time;\n    }\n\n    return result;\n  }\n\n  async getLatestVersion(\n    baseUrl: string,\n    packageName: string\n  ): Promise<string | null> {\n    try {\n      const url = `${baseUrl}/${this.encodeCase(packageName)}/@latest`;\n      const res = await this.http.getJson<VersionInfo>(url);\n      return res.body.Version;\n    } catch (err) {\n      logger.debug({ err }, 'Failed to get latest version');\n      return null;\n    }\n  }\n\n  async getVersionsWithInfo(\n    baseUrl: string,\n    packageName: string\n  ): Promise<ReleaseResult> {\n    const isGopkgin = packageName.startsWith('gopkg.in/');\n    const majorSuffixSeparator = isGopkgin ? '.' : '/';\n    const modParts = packageName.match(modRegex)?.groups;\n    const baseMod = modParts?.baseMod ?? /* istanbul ignore next */ packageName;\n    const packageMajor = parseInt(modParts?.majorVersion ?? '0');\n\n    const result: ReleaseResult = { releases: [] };\n    for (let major = packageMajor; ; major += 1) {\n      let pkg = `${baseMod}${majorSuffixSeparator}v${major}`;\n      if (!isGopkgin && major < 2) {\n        pkg = baseMod;\n        major += 1; // v0 and v1 are the same module\n      }\n\n      try {\n        const res = await this.listVersions(baseUrl, pkg);\n        const releases = await p.map(res, async (versionInfo) => {\n          const { version, releaseTimestamp } = versionInfo;\n\n          if (releaseTimestamp) {\n            return { version, releaseTimestamp };\n          }\n\n          try {\n            return await this.versionInfo(baseUrl, pkg, version);\n          } catch (err) {\n            logger.trace({ err }, `Can't obtain data from ${baseUrl}`);\n            return { version };\n          }\n        });\n        result.releases.push(...releases);\n      } catch (err) {\n        if (\n          err instanceof HttpError &&\n          err.response?.statusCode === 404 &&\n          major !== packageMajor\n        ) {\n          break;\n        }\n\n        throw err;\n      }\n\n      const latestVersion = await this.getLatestVersion(baseUrl, pkg);\n      if (latestVersion) {\n        result.tags ??= {};\n        result.tags.latest ??= latestVersion;\n        if (goVersioning.isGreaterThan(latestVersion, result.tags.latest)) {\n          result.tags.latest = latestVersion;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  static getCacheKey({ packageName }: GetReleasesConfig): string {\n    const goproxy = process.env.GOPROXY;\n    const noproxy = GoProxyDatasource.parseNoproxy();\n    // TODO: types (#7154)\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `${packageName}@@${goproxy}@@${noproxy?.toString()}`;\n  }\n}\n"]}