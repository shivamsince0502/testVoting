import { GithubHttp } from '../../../util/http/github';
import { Datasource } from '../datasource';
import type { DigestConfig, GetReleasesConfig, ReleaseResult } from '../types';
export declare class GithubTagsDatasource extends Datasource {
    static readonly id = "github-tags";
    readonly defaultRegistryUrls: string[];
    readonly registryStrategy = "hunt";
    http: GithubHttp;
    constructor();
    getCommit(registryUrl: string | undefined, githubRepo: string): Promise<string | null>;
    /**
     * github.getDigest
     *
     * The `newValue` supplied here should be a valid tag for the docker image.
     *
     * Returns the latest commit hash for the repository.
     */
    getDigest({ packageName: repo, registryUrl }: Partial<DigestConfig>, newValue?: string): Promise<string | null>;
    getReleases(config: GetReleasesConfig): Promise<ReleaseResult>;
}
