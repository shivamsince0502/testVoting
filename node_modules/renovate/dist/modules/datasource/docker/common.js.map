{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/docker/common.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { parse } from 'auth-header';\nimport hasha from 'hasha';\nimport {\n  HOST_DISABLED,\n  PAGE_NOT_FOUND_ERROR,\n} from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport type { HostRule } from '../../../types';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport * as hostRules from '../../../util/host-rules';\nimport type { Http } from '../../../util/http';\nimport type {\n  HttpOptions,\n  HttpResponse,\n  OutgoingHttpHeaders,\n} from '../../../util/http/types';\nimport { regEx } from '../../../util/regex';\nimport { addSecretForSanitizing } from '../../../util/sanitize';\nimport {\n  ensureTrailingSlash,\n  parseUrl,\n  trimTrailingSlash,\n} from '../../../util/url';\nimport { api as dockerVersioning } from '../../versioning/docker';\nimport { ecrRegex, getECRAuthToken } from './ecr';\nimport type { RegistryRepository } from './types';\n\nexport const dockerDatasourceId = 'docker' as const;\n\nexport const sourceLabels: string[] = [\n  'org.opencontainers.image.source',\n  'org.label-schema.vcs-url',\n];\n\nexport const gitRefLabel = 'org.opencontainers.image.revision';\n\nexport const DOCKER_HUB = 'https://index.docker.io';\n\nexport function isDockerHost(host: string): boolean {\n  const regex = regEx(/(?:^|\\.)docker\\.io$/);\n  return regex.test(host);\n}\n\nexport async function getAuthHeaders(\n  http: Http,\n  registryHost: string,\n  dockerRepository: string,\n  apiCheckUrl = `${registryHost}/v2/`\n): Promise<OutgoingHttpHeaders | null> {\n  try {\n    const options = {\n      throwHttpErrors: false,\n      noAuth: true,\n    };\n    const apiCheckResponse = apiCheckUrl.endsWith('/v2/')\n      ? await http.get(apiCheckUrl, options)\n      : // use json request, as this will be cached for tags, so it returns json\n        // TODO: add cache test\n        await http.getJson(apiCheckUrl, options);\n\n    if (apiCheckResponse.statusCode === 200) {\n      logger.debug(`No registry auth required for ${apiCheckUrl}`);\n      return {};\n    }\n    if (apiCheckResponse.statusCode === 404) {\n      logger.debug(`Page Not Found ${apiCheckUrl}`);\n      // throw error up to be caught and potentially retried with library/ prefix\n      throw new Error(PAGE_NOT_FOUND_ERROR);\n    }\n    if (\n      apiCheckResponse.statusCode !== 401 ||\n      !is.nonEmptyString(apiCheckResponse.headers['www-authenticate'])\n    ) {\n      logger.warn(\n        { apiCheckUrl, res: apiCheckResponse },\n        'Invalid registry response'\n      );\n      return null;\n    }\n\n    const authenticateHeader = parse(\n      apiCheckResponse.headers['www-authenticate']\n    );\n\n    const opts: HostRule & HttpOptions = hostRules.find({\n      hostType: dockerDatasourceId,\n      url: apiCheckUrl,\n    });\n    if (ecrRegex.test(registryHost)) {\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using ecr auth for Docker registry`\n      );\n      const [, region] = ecrRegex.exec(registryHost) ?? [];\n      const auth = await getECRAuthToken(region, opts);\n      if (auth) {\n        opts.headers = { authorization: `Basic ${auth}` };\n      }\n    } else if (opts.username && opts.password) {\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using basic auth for Docker registry`\n      );\n      const auth = Buffer.from(`${opts.username}:${opts.password}`).toString(\n        'base64'\n      );\n      opts.headers = { authorization: `Basic ${auth}` };\n    } else if (opts.token) {\n      const authType = opts.authType ?? 'Bearer';\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using ${authType} token for Docker registry`\n      );\n      opts.headers = { authorization: `${authType} ${opts.token}` };\n    }\n    delete opts.username;\n    delete opts.password;\n    delete opts.token;\n\n    // If realm isn't an url, we should directly use auth header\n    // Can happen when we get a Basic auth or some other auth type\n    // * WWW-Authenticate: Basic realm=\"Artifactory Realm\"\n    // * Www-Authenticate: Basic realm=\"https://123456789.dkr.ecr.eu-central-1.amazonaws.com/\",service=\"ecr.amazonaws.com\"\n    // * www-authenticate: Bearer realm=\"https://ghcr.io/token\",service=\"ghcr.io\",scope=\"repository:user/image:pull\"\n    // * www-authenticate: Bearer realm=\"https://auth.docker.io/token\",service=\"registry.docker.io\"\n    if (\n      authenticateHeader.scheme.toUpperCase() !== 'BEARER' ||\n      !is.string(authenticateHeader.params.realm) ||\n      parseUrl(authenticateHeader.params.realm) === null\n    ) {\n      logger.trace(\n        { registryHost, dockerRepository, authenticateHeader },\n        `Invalid realm, testing direct auth`\n      );\n      return opts.headers ?? null;\n    }\n\n    const authUrl = new URL(`${authenticateHeader.params.realm}`);\n\n    // repo isn't known to server yet, so causing wrong scope `repository:user/image:pull`\n    if (\n      is.string(authenticateHeader.params.scope) &&\n      !apiCheckUrl.endsWith('/v2/')\n    ) {\n      authUrl.searchParams.append('scope', authenticateHeader.params.scope);\n    } else {\n      authUrl.searchParams.append(\n        'scope',\n        `repository:${dockerRepository}:pull`\n      );\n    }\n\n    if (is.string(authenticateHeader.params.service)) {\n      authUrl.searchParams.append('service', authenticateHeader.params.service);\n    }\n\n    logger.trace(\n      { registryHost, dockerRepository, authUrl: authUrl.href },\n      `Obtaining docker registry token`\n    );\n    opts.noAuth = true;\n    const authResponse = (\n      await http.getJson<{ token?: string; access_token?: string }>(\n        authUrl.href,\n        opts\n      )\n    ).body;\n\n    const token = authResponse.token ?? authResponse.access_token;\n    // istanbul ignore if\n    if (!token) {\n      logger.warn('Failed to obtain docker registry token');\n      return null;\n    }\n    // sanitize token\n    addSecretForSanitizing(token);\n    return {\n      authorization: `Bearer ${token}`,\n    };\n  } catch (err) /* istanbul ignore next */ {\n    if (err.host === 'quay.io') {\n      // TODO: debug why quay throws errors (#9604)\n      return null;\n    }\n    if (err.statusCode === 401) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Unauthorized docker lookup'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.statusCode === 403) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Not allowed to access docker registry'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.name === 'RequestError' && isDockerHost(registryHost)) {\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode === 429 && isDockerHost(registryHost)) {\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      throw new ExternalHostError(err);\n    }\n    if (err.message === PAGE_NOT_FOUND_ERROR) {\n      throw err;\n    }\n    if (err.message === HOST_DISABLED) {\n      logger.trace({ registryHost, dockerRepository, err }, 'Host disabled');\n      return null;\n    }\n    logger.warn(\n      { registryHost, dockerRepository, err },\n      'Error obtaining docker token'\n    );\n    return null;\n  }\n}\n\nexport function getRegistryRepository(\n  packageName: string,\n  registryUrl: string\n): RegistryRepository {\n  if (registryUrl !== DOCKER_HUB) {\n    const registryEndingWithSlash = ensureTrailingSlash(\n      registryUrl.replace(regEx(/^https?:\\/\\//), '')\n    );\n    if (packageName.startsWith(registryEndingWithSlash)) {\n      let registryHost = trimTrailingSlash(registryUrl);\n      if (!regEx(/^https?:\\/\\//).test(registryHost)) {\n        registryHost = `https://${registryHost}`;\n      }\n      let dockerRepository = packageName.replace(registryEndingWithSlash, '');\n      const fullUrl = `${registryHost}/${dockerRepository}`;\n      const { origin, pathname } = parseUrl(fullUrl)!;\n      registryHost = origin;\n      dockerRepository = pathname.substring(1);\n      return {\n        registryHost,\n        dockerRepository,\n      };\n    }\n  }\n  let registryHost: string | undefined;\n  const split = packageName.split('/');\n  if (split.length > 1 && (split[0].includes('.') || split[0].includes(':'))) {\n    [registryHost] = split;\n    split.shift();\n  }\n  let dockerRepository = split.join('/');\n  if (!registryHost) {\n    registryHost = registryUrl.replace(\n      'https://docker.io',\n      'https://index.docker.io'\n    );\n  }\n  if (registryHost === 'docker.io') {\n    registryHost = 'index.docker.io';\n  }\n  if (!regEx(/^https?:\\/\\//).exec(registryHost)) {\n    registryHost = `https://${registryHost}`;\n  }\n  const opts = hostRules.find({\n    hostType: dockerDatasourceId,\n    url: registryHost,\n  });\n  if (opts?.insecureRegistry) {\n    registryHost = registryHost.replace('https', 'http');\n  }\n  if (registryHost.endsWith('.docker.io') && !dockerRepository.includes('/')) {\n    dockerRepository = 'library/' + dockerRepository;\n  }\n  return {\n    registryHost,\n    dockerRepository,\n  };\n}\n\nexport function extractDigestFromResponseBody(\n  manifestResponse: HttpResponse\n): string {\n  return 'sha256:' + hasha(manifestResponse.body, { algorithm: 'sha256' });\n}\n\nexport function findLatestStable(tags: string[]): string | null {\n  const versions = tags\n    .filter((v) => dockerVersioning.isValid(v) && dockerVersioning.isStable(v))\n    .sort((a, b) => dockerVersioning.sortVersions(a, b));\n\n  return versions.pop() ?? tags.slice(-1).pop() ?? null;\n}\n"]}