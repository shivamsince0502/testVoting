{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/docker/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { PAGE_NOT_FOUND_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport { cache } from '../../../util/cache/package/decorator';\nimport { HttpError } from '../../../util/http';\nimport type { HttpResponse } from '../../../util/http/types';\nimport { hasKey } from '../../../util/object';\nimport { regEx } from '../../../util/regex';\nimport { isDockerDigest } from '../../../util/string';\nimport {\n  ensurePathPrefix,\n  joinUrlParts,\n  parseLinkHeader,\n} from '../../../util/url';\nimport { id as dockerVersioningId } from '../../versioning/docker';\nimport { isArtifactoryServer } from '../common';\nimport { Datasource } from '../datasource';\nimport type { DigestConfig, GetReleasesConfig, ReleaseResult } from '../types';\nimport {\n  DOCKER_HUB,\n  dockerDatasourceId,\n  extractDigestFromResponseBody,\n  findLatestStable,\n  getAuthHeaders,\n  getRegistryRepository,\n  gitRefLabel,\n  isDockerHost,\n  sourceLabels,\n} from './common';\nimport { ecrPublicRegex, ecrRegex, isECRMaxResultsError } from './ecr';\nimport type {\n  Image,\n  ImageConfig,\n  ImageList,\n  OciImage,\n  OciImageList,\n} from './types';\n\nconst defaultConfig = {\n  commitMessageTopic: '{{{depName}}} Docker tag',\n  commitMessageExtra:\n    'to {{#if isPinDigest}}{{{newDigestShort}}}{{else}}{{#if isMajor}}{{{prettyNewMajor}}}{{else}}{{{prettyNewVersion}}}{{/if}}{{/if}}',\n  digest: {\n    branchTopic: '{{{depNameSanitized}}}-{{{currentValue}}}',\n    commitMessageExtra: 'to {{newDigestShort}}',\n    commitMessageTopic:\n      '{{{depName}}}{{#if currentValue}}:{{{currentValue}}}{{/if}} Docker digest',\n    group: {\n      commitMessageTopic: '{{{groupName}}}',\n      commitMessageExtra: '',\n    },\n  },\n  pin: {\n    commitMessageExtra: '',\n    groupName: 'Docker digests',\n    group: {\n      commitMessageTopic: '{{{groupName}}}',\n      branchTopic: 'digests-pin',\n    },\n  },\n};\n\nexport class DockerDatasource extends Datasource {\n  static readonly id = dockerDatasourceId;\n\n  override readonly defaultVersioning = dockerVersioningId;\n\n  override readonly defaultRegistryUrls = [DOCKER_HUB];\n\n  override readonly defaultConfig = defaultConfig;\n\n  constructor() {\n    super(DockerDatasource.id);\n  }\n\n  // TODO: debug why quay throws errors (#9612)\n  private async getManifestResponse(\n    registryHost: string,\n    dockerRepository: string,\n    tag: string,\n    mode: 'head' | 'get' = 'get'\n  ): Promise<HttpResponse | null> {\n    logger.debug(\n      `getManifestResponse(${registryHost}, ${dockerRepository}, ${tag}, ${mode})`\n    );\n    try {\n      const headers = await getAuthHeaders(\n        this.http,\n        registryHost,\n        dockerRepository\n      );\n      if (!headers) {\n        logger.warn('No docker auth found - returning');\n        return null;\n      }\n      headers.accept = [\n        'application/vnd.docker.distribution.manifest.list.v2+json',\n        'application/vnd.docker.distribution.manifest.v2+json',\n        'application/vnd.oci.image.manifest.v1+json',\n        'application/vnd.oci.image.index.v1+json',\n      ].join(', ');\n      const url = `${registryHost}/v2/${dockerRepository}/manifests/${tag}`;\n      const manifestResponse = await this.http[mode](url, {\n        headers,\n        noAuth: true,\n      });\n      return manifestResponse;\n    } catch (err) /* istanbul ignore next */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      if (err.statusCode === 401) {\n        logger.debug(\n          { registryHost, dockerRepository },\n          'Unauthorized docker lookup'\n        );\n        logger.debug({ err });\n        return null;\n      }\n      if (err.statusCode === 404) {\n        logger.debug(\n          {\n            err,\n            registryHost,\n            dockerRepository,\n            tag,\n          },\n          'Docker Manifest is unknown'\n        );\n        return null;\n      }\n      if (err.statusCode === 429 && isDockerHost(registryHost)) {\n        throw new ExternalHostError(err);\n      }\n      if (err.statusCode >= 500 && err.statusCode < 600) {\n        throw new ExternalHostError(err);\n      }\n      if (err.code === 'ETIMEDOUT') {\n        logger.debug(\n          { registryHost },\n          'Timeout when attempting to connect to docker registry'\n        );\n        logger.debug({ err });\n        return null;\n      }\n      logger.debug(\n        {\n          err,\n          registryHost,\n          dockerRepository,\n          tag,\n        },\n        'Unknown Error looking up docker manifest'\n      );\n      return null;\n    }\n  }\n\n  @cache({\n    namespace: 'datasource-docker-imageconfig',\n    key: (\n      registryHost: string,\n      dockerRepository: string,\n      configDigest: string\n    ) => `${registryHost}:${dockerRepository}@${configDigest}`,\n    ttlMinutes: 1440 * 28,\n  })\n  public async getImageConfig(\n    registryHost: string,\n    dockerRepository: string,\n    configDigest: string\n  ): Promise<HttpResponse<ImageConfig> | undefined> {\n    logger.trace(\n      `getImageConfig(${registryHost}, ${dockerRepository}, ${configDigest})`\n    );\n\n    const headers = await getAuthHeaders(\n      this.http,\n      registryHost,\n      dockerRepository\n    );\n    // istanbul ignore if: Should never happen\n    if (!headers) {\n      logger.warn('No docker auth found - returning');\n      return undefined;\n    }\n    const url = joinUrlParts(\n      registryHost,\n      'v2',\n      dockerRepository,\n      'blobs',\n      configDigest\n    );\n    return await this.http.getJson<ImageConfig>(url, {\n      headers,\n      noAuth: true,\n    });\n  }\n\n  private async getConfigDigest(\n    registry: string,\n    dockerRepository: string,\n    tag: string\n  ): Promise<string | null> {\n    const manifestResponse = await this.getManifestResponse(\n      registry,\n      dockerRepository,\n      tag\n    );\n    // If getting the manifest fails here, then abort\n    // This means that the latest tag doesn't have a manifest, which shouldn't\n    // be possible\n    // istanbul ignore if\n    if (!manifestResponse) {\n      return null;\n    }\n    const manifest = JSON.parse(manifestResponse.body) as\n      | ImageList\n      | Image\n      | OciImageList\n      | OciImage;\n    if (manifest.schemaVersion !== 2) {\n      logger.debug(\n        { registry, dockerRepository, tag },\n        'Manifest schema version is not 2'\n      );\n      return null;\n    }\n\n    if (\n      manifest.mediaType ===\n      'application/vnd.docker.distribution.manifest.list.v2+json'\n    ) {\n      if (manifest.manifests.length) {\n        logger.trace(\n          { registry, dockerRepository, tag },\n          'Found manifest list, using first image'\n        );\n        return this.getConfigDigest(\n          registry,\n          dockerRepository,\n          manifest.manifests[0].digest\n        );\n      } else {\n        logger.debug(\n          { manifest },\n          'Invalid manifest list with no manifests - returning'\n        );\n        return null;\n      }\n    }\n\n    if (\n      manifest.mediaType ===\n        'application/vnd.docker.distribution.manifest.v2+json' &&\n      is.string(manifest.config?.digest)\n    ) {\n      return manifest.config?.digest;\n    }\n\n    // OCI image lists are not required to specify a mediaType\n    if (\n      manifest.mediaType === 'application/vnd.oci.image.index.v1+json' ||\n      (!manifest.mediaType && 'manifests' in manifest)\n    ) {\n      if (manifest.manifests.length) {\n        logger.trace(\n          { registry, dockerRepository, tag },\n          'Found manifest index, using first image'\n        );\n        return this.getConfigDigest(\n          registry,\n          dockerRepository,\n          manifest.manifests[0].digest\n        );\n      } else {\n        logger.debug(\n          { manifest },\n          'Invalid manifest index with no manifests - returning'\n        );\n        return null;\n      }\n    }\n\n    // OCI manifests are not required to specify a mediaType\n    if (\n      (manifest.mediaType === 'application/vnd.oci.image.manifest.v1+json' ||\n        (!manifest.mediaType && 'config' in manifest)) &&\n      is.string(manifest.config?.digest)\n    ) {\n      return manifest.config?.digest;\n    }\n\n    logger.debug({ manifest }, 'Invalid manifest - returning');\n    return null;\n  }\n\n  @cache({\n    namespace: 'datasource-docker-architecture',\n    key: (\n      registryHost: string,\n      dockerRepository: string,\n      currentDigest: string\n    ) => `${registryHost}:${dockerRepository}@${currentDigest}`,\n    ttlMinutes: 1440 * 28,\n  })\n  public async getImageArchitecture(\n    registryHost: string,\n    dockerRepository: string,\n    currentDigest: string\n  ): Promise<string | null | undefined> {\n    try {\n      let manifestResponse: HttpResponse<string> | null;\n\n      try {\n        manifestResponse = await this.getManifestResponse(\n          registryHost,\n          dockerRepository,\n          currentDigest,\n          'head'\n        );\n      } catch (_err) {\n        const err = _err instanceof ExternalHostError ? _err.err : _err;\n\n        if (\n          typeof err.statusCode === 'number' &&\n          err.statusCode >= 500 &&\n          err.statusCode < 600\n        ) {\n          // querying the digest manifest for a non existent image leads to a 500 statusCode\n          return null;\n        }\n\n        /* istanbul ignore next */\n        throw _err;\n      }\n\n      if (\n        manifestResponse?.headers['content-type'] !==\n          'application/vnd.docker.distribution.manifest.v2+json' &&\n        manifestResponse?.headers['content-type'] !==\n          'application/vnd.oci.image.manifest.v1+json'\n      ) {\n        return null;\n      }\n\n      const configDigest = await this.getConfigDigest(\n        registryHost,\n        dockerRepository,\n        currentDigest\n      );\n      if (!configDigest) {\n        return null;\n      }\n\n      const configResponse = await this.getImageConfig(\n        registryHost,\n        dockerRepository,\n        configDigest\n      );\n      if (configResponse) {\n        const architecture = configResponse.body.architecture ?? null;\n        logger.debug(\n          `Current digest ${currentDigest} relates to architecture ${\n            architecture ?? 'null'\n          }`\n        );\n\n        return architecture;\n      }\n    } catch (err) /* istanbul ignore next */ {\n      if (err.statusCode !== 404 || err.message === PAGE_NOT_FOUND_ERROR) {\n        throw err;\n      }\n      logger.debug(\n        { registryHost, dockerRepository, currentDigest, err },\n        'Unknown error getting image architecture'\n      );\n    }\n\n    return undefined;\n  }\n\n  /*\n   * docker.getLabels\n   *\n   * This function will:\n   *  - Return the labels for the requested image\n   */\n  @cache({\n    namespace: 'datasource-docker-labels',\n    key: (registryHost: string, dockerRepository: string, tag: string) =>\n      `${registryHost}:${dockerRepository}:${tag}`,\n    ttlMinutes: 60,\n  })\n  public async getLabels(\n    registryHost: string,\n    dockerRepository: string,\n    tag: string\n  ): Promise<Record<string, string>> {\n    logger.debug(`getLabels(${registryHost}, ${dockerRepository}, ${tag})`);\n    try {\n      let labels: Record<string, string> = {};\n      const configDigest = await this.getConfigDigest(\n        registryHost,\n        dockerRepository,\n        tag\n      );\n      if (!configDigest) {\n        return {};\n      }\n\n      const headers = await getAuthHeaders(\n        this.http,\n        registryHost,\n        dockerRepository\n      );\n      // istanbul ignore if: Should never happen\n      if (!headers) {\n        logger.warn('No docker auth found - returning');\n        return {};\n      }\n      const url = `${registryHost}/v2/${dockerRepository}/blobs/${configDigest}`;\n      const configResponse = await this.http.get(url, {\n        headers,\n        noAuth: true,\n      });\n\n      const body = JSON.parse(configResponse.body);\n      if (body.config) {\n        labels = body.config.Labels;\n      } else {\n        logger.debug(\n          { headers: configResponse.headers, body },\n          `manifest blob response body missing the \"config\" property`\n        );\n      }\n\n      if (labels) {\n        logger.debug(\n          {\n            labels,\n          },\n          'found labels in manifest'\n        );\n      }\n      return labels;\n    } catch (err) /* istanbul ignore next: should be tested in future */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      if (err.statusCode === 400 || err.statusCode === 401) {\n        logger.debug(\n          { registryHost, dockerRepository, err },\n          'Unauthorized docker lookup'\n        );\n      } else if (err.statusCode === 404) {\n        logger.warn(\n          {\n            err,\n            registryHost,\n            dockerRepository,\n            tag,\n          },\n          'Config Manifest is unknown'\n        );\n      } else if (err.statusCode === 429 && isDockerHost(registryHost)) {\n        logger.warn({ err }, 'docker registry failure: too many requests');\n      } else if (err.statusCode >= 500 && err.statusCode < 600) {\n        logger.debug(\n          {\n            err,\n            registryHost,\n            dockerRepository,\n            tag,\n          },\n          'docker registry failure: internal error'\n        );\n      } else if (\n        err.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ||\n        err.code === 'ETIMEDOUT'\n      ) {\n        logger.debug(\n          { registryHost, err },\n          'Error connecting to docker registry'\n        );\n      } else if (registryHost === 'https://quay.io') {\n        // istanbul ignore next\n        logger.debug(\n          'Ignoring quay.io errors until they fully support v2 schema'\n        );\n      } else {\n        logger.info(\n          { registryHost, dockerRepository, tag, err },\n          'Unknown error getting Docker labels'\n        );\n      }\n      return {};\n    }\n  }\n\n  private async getTagsQuayRegistry(\n    registry: string,\n    repository: string\n  ): Promise<string[]> {\n    let tags: string[] = [];\n    const limit = 100;\n\n    const pageUrl = (page: number): string =>\n      `${registry}/api/v1/repository/${repository}/tag/?limit=${limit}&page=${page}&onlyActiveTags=true`;\n\n    let page = 1;\n    let url: string | null = pageUrl(page);\n    while (url && page <= 20) {\n      interface QuayRestDockerTags {\n        tags: {\n          name: string;\n        }[];\n        has_additional: boolean;\n      }\n\n      // typescript issue :-/\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const res = (await this.http.getJson<QuayRestDockerTags>(\n        url\n      )) as HttpResponse<QuayRestDockerTags>;\n      const pageTags = res.body.tags.map((tag) => tag.name);\n      tags = tags.concat(pageTags);\n      page += 1;\n      url = res.body.has_additional ? pageUrl(page) : null;\n    }\n    return tags;\n  }\n\n  private async getDockerApiTags(\n    registryHost: string,\n    dockerRepository: string\n  ): Promise<string[] | null> {\n    let tags: string[] = [];\n    // AWS ECR limits the maximum number of results to 1000\n    // See https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_DescribeRepositories.html#ECR-DescribeRepositories-request-maxResults\n    // See https://docs.aws.amazon.com/AmazonECRPublic/latest/APIReference/API_DescribeRepositories.html#ecrpublic-DescribeRepositories-request-maxResults\n    const limit =\n      ecrRegex.test(registryHost) || ecrPublicRegex.test(registryHost)\n        ? 1000\n        : 10000;\n    let url:\n      | string\n      | null = `${registryHost}/${dockerRepository}/tags/list?n=${limit}`;\n    url = ensurePathPrefix(url, '/v2');\n    const headers = await getAuthHeaders(\n      this.http,\n      registryHost,\n      dockerRepository,\n      url\n    );\n    if (!headers) {\n      logger.debug('Failed to get authHeaders for getTags lookup');\n      return null;\n    }\n    let page = 1;\n    let foundMaxResultsError = false;\n    do {\n      let res: HttpResponse<{ tags: string[] }>;\n      try {\n        res = await this.http.getJson<{ tags: string[] }>(url, {\n          headers,\n          noAuth: true,\n        });\n      } catch (err) {\n        if (\n          !foundMaxResultsError &&\n          err instanceof HttpError &&\n          isECRMaxResultsError(err)\n        ) {\n          const maxResults = 1000;\n          url = `${registryHost}/${dockerRepository}/tags/list?n=${maxResults}`;\n          url = ensurePathPrefix(url, '/v2');\n          foundMaxResultsError = true;\n          continue;\n        }\n        throw err;\n      }\n      tags = tags.concat(res.body.tags);\n      const linkHeader = parseLinkHeader(res.headers.link);\n      if (isArtifactoryServer(res)) {\n        // Artifactory incorrectly returns a next link without the virtual repository name\n        // this is due to a bug in Artifactory https://jfrog.atlassian.net/browse/RTFACT-18971\n        url = linkHeader?.next?.last\n          ? `${url}&last=${linkHeader.next.last}`\n          : null;\n      } else {\n        url = linkHeader?.next ? new URL(linkHeader.next.url, url).href : null;\n      }\n      page += 1;\n    } while (url && page < 20);\n    return tags;\n  }\n\n  @cache({\n    namespace: 'datasource-docker-tags',\n    key: (registryHost: string, dockerRepository: string) =>\n      `${registryHost}:${dockerRepository}`,\n  })\n  public async getTags(\n    registryHost: string,\n    dockerRepository: string\n  ): Promise<string[] | null> {\n    try {\n      const isQuay = regEx(/^https:\\/\\/quay\\.io(?::[1-9][0-9]{0,4})?$/i).test(\n        registryHost\n      );\n      let tags: string[] | null;\n      if (isQuay) {\n        tags = await this.getTagsQuayRegistry(registryHost, dockerRepository);\n      } else {\n        tags = await this.getDockerApiTags(registryHost, dockerRepository);\n      }\n      return tags;\n    } catch (_err) /* istanbul ignore next */ {\n      const err = _err instanceof ExternalHostError ? _err.err : _err;\n\n      if (\n        (err.statusCode === 404 || err.message === PAGE_NOT_FOUND_ERROR) &&\n        !dockerRepository.includes('/')\n      ) {\n        logger.debug(\n          `Retrying Tags for ${registryHost}/${dockerRepository} using library/ prefix`\n        );\n        return this.getTags(registryHost, 'library/' + dockerRepository);\n      }\n      // JFrog Artifactory - Retry handling when resolving Docker Official Images\n      // These follow the format of {{registryHost}}{{jFrogRepository}}/library/{{dockerRepository}}\n      if (\n        (err.statusCode === 404 || err.message === PAGE_NOT_FOUND_ERROR) &&\n        isArtifactoryServer(err.response) &&\n        dockerRepository.split('/').length === 2\n      ) {\n        logger.debug(\n          `JFrog Artifactory: Retrying Tags for ${registryHost}/${dockerRepository} using library/ path between JFrog virtual repository and image`\n        );\n\n        const dockerRepositoryParts = dockerRepository.split('/');\n        const jfrogRepository = dockerRepositoryParts[0];\n        const dockerImage = dockerRepositoryParts[1];\n\n        return this.getTags(\n          registryHost,\n          jfrogRepository + '/library/' + dockerImage\n        );\n      }\n      if (err.statusCode === 429 && isDockerHost(registryHost)) {\n        logger.warn(\n          { registryHost, dockerRepository, err },\n          'docker registry failure: too many requests'\n        );\n        throw new ExternalHostError(err);\n      }\n      if (err.statusCode >= 500 && err.statusCode < 600) {\n        logger.warn(\n          { registryHost, dockerRepository, err },\n          'docker registry failure: internal error'\n        );\n        throw new ExternalHostError(err);\n      }\n      const errorCodes = ['ECONNRESET', 'ETIMEDOUT'];\n      if (errorCodes.includes(err.code)) {\n        logger.warn(\n          { registryHost, dockerRepository, err },\n          'docker registry connection failure'\n        );\n        throw new ExternalHostError(err);\n      }\n      if (isDockerHost(registryHost)) {\n        logger.info({ err }, 'Docker Hub lookup failure');\n      }\n      throw _err;\n    }\n  }\n\n  /**\n   * docker.getDigest\n   *\n   * The `newValue` supplied here should be a valid tag for the docker image.\n   *\n   * This function will:\n   *  - Look up a sha256 digest for a tag on its registry\n   *  - Return the digest as a string\n   */\n  @cache({\n    namespace: 'datasource-docker-digest',\n    key: (\n      { registryUrl, packageName, currentDigest }: DigestConfig,\n      newValue?: string\n    ) => {\n      const newTag = newValue ?? 'latest';\n      const { registryHost, dockerRepository } = getRegistryRepository(\n        packageName,\n        registryUrl!\n      );\n      const digest = currentDigest ? `@${currentDigest}` : '';\n      return `${registryHost}:${dockerRepository}:${newTag}${digest}`;\n    },\n  })\n  override async getDigest(\n    { registryUrl, packageName, currentDigest }: DigestConfig,\n    newValue?: string\n  ): Promise<string | null> {\n    const { registryHost, dockerRepository } = getRegistryRepository(\n      packageName,\n      registryUrl!\n    );\n    logger.debug(\n      // TODO: types (#7154)\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n      `getDigest(${registryHost}, ${dockerRepository}, ${newValue})`\n    );\n    const newTag = newValue ?? 'latest';\n    let digest: string | null = null;\n    try {\n      let architecture: string | null | undefined = null;\n      if (currentDigest && isDockerDigest(currentDigest)) {\n        architecture = await this.getImageArchitecture(\n          registryHost,\n          dockerRepository,\n          currentDigest\n        );\n      }\n\n      let manifestResponse: HttpResponse | null = null;\n      if (!architecture) {\n        manifestResponse = await this.getManifestResponse(\n          registryHost,\n          dockerRepository,\n          newTag,\n          'head'\n        );\n\n        if (\n          manifestResponse &&\n          hasKey('docker-content-digest', manifestResponse.headers)\n        ) {\n          digest =\n            (manifestResponse.headers['docker-content-digest'] as string) ||\n            null;\n        }\n      }\n\n      if (\n        architecture ||\n        (manifestResponse &&\n          !hasKey('docker-content-digest', manifestResponse.headers))\n      ) {\n        logger.debug(\n          { registryHost, dockerRepository },\n          'Architecture-specific digest or missing docker-content-digest header - pulling full manifest'\n        );\n        manifestResponse = await this.getManifestResponse(\n          registryHost,\n          dockerRepository,\n          newTag\n        );\n\n        if (architecture && manifestResponse) {\n          const manifestList = JSON.parse(manifestResponse.body) as\n            | ImageList\n            | Image\n            | OciImageList\n            | OciImage;\n          if (\n            manifestList.schemaVersion === 2 &&\n            (manifestList.mediaType ===\n              'application/vnd.docker.distribution.manifest.list.v2+json' ||\n              manifestList.mediaType ===\n                'application/vnd.oci.image.index.v1+json' ||\n              (!manifestList.mediaType && 'manifests' in manifestList))\n          ) {\n            for (const manifest of manifestList.manifests) {\n              if (manifest.platform['architecture'] === architecture) {\n                digest = manifest.digest;\n                break;\n              }\n            }\n          }\n        }\n\n        if (!digest) {\n          digest = extractDigestFromResponseBody(manifestResponse!);\n        }\n      }\n\n      if (\n        !manifestResponse &&\n        !dockerRepository.includes('/') &&\n        !packageName.includes('/')\n      ) {\n        logger.debug(\n          `Retrying Digest for ${registryHost}/${dockerRepository} using library/ prefix`\n        );\n        return this.getDigest(\n          {\n            registryUrl,\n            packageName: 'library/' + packageName,\n            currentDigest,\n          },\n          newValue\n        );\n      }\n\n      if (manifestResponse) {\n        // TODO: fix types (#7154)\n        logger.debug(`Got docker digest ${digest!}`);\n      }\n    } catch (err) /* istanbul ignore next */ {\n      if (err instanceof ExternalHostError) {\n        throw err;\n      }\n      logger.debug(\n        {\n          err,\n          packageName,\n          newTag,\n        },\n        'Unknown Error looking up docker image digest'\n      );\n    }\n    return digest;\n  }\n\n  /**\n   * docker.getReleases\n   *\n   * A docker image usually looks something like this: somehost.io/owner/repo:8.1.0-alpine\n   * In the above:\n   *  - 'somehost.io' is the registry\n   *  - 'owner/repo' is the package name\n   *  - '8.1.0-alpine' is the tag\n   *\n   * This function will filter only tags that contain a semver version\n   */\n  async getReleases({\n    packageName,\n    registryUrl,\n  }: GetReleasesConfig): Promise<ReleaseResult | null> {\n    const { registryHost, dockerRepository } = getRegistryRepository(\n      packageName,\n      registryUrl!\n    );\n    const tags = await this.getTags(registryHost, dockerRepository);\n    if (!tags) {\n      return null;\n    }\n    const releases = tags.map((version) => ({ version }));\n    const ret: ReleaseResult = {\n      registryUrl: registryHost,\n      releases,\n    };\n\n    const latestTag = tags.includes('latest')\n      ? 'latest'\n      : findLatestStable(tags);\n\n    // istanbul ignore if: needs test\n    if (!latestTag) {\n      return ret;\n    }\n    const labels = await this.getLabels(\n      registryHost,\n      dockerRepository,\n      latestTag\n    );\n    if (labels) {\n      if (is.nonEmptyString(labels[gitRefLabel])) {\n        ret.gitRef = labels[gitRefLabel];\n      }\n      for (const label of sourceLabels) {\n        if (is.nonEmptyString(labels[label])) {\n          ret.sourceUrl = labels[label];\n          break;\n        }\n      }\n    }\n    return ret;\n  }\n}\n"]}