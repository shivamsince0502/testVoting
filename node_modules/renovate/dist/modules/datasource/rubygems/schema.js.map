{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../lib/modules/datasource/rubygems/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { z } from 'zod';\nimport { LooseArray } from '../../../util/schema-utils';\nimport type { Release } from '../types';\n\nexport const MarshalledVersionInfo = LooseArray(\n  z\n    .object({\n      number: z.string(),\n    })\n    .transform(({ number: version }) => ({ version }))\n)\n  .transform((releases) => (releases.length === 0 ? null : { releases }))\n  .nullable()\n  .catch(null);\n\nexport const GemMetadata = z\n  .object({\n    name: z.string(),\n    version: z.string().nullish().catch(null),\n    changelog_uri: z.string().nullish().catch(null),\n    homepage_uri: z.string().nullish().catch(null),\n    source_code_uri: z.string().nullish().catch(null),\n  })\n  .transform(\n    ({\n      name: packageName,\n      version,\n      changelog_uri: changelogUrl,\n      homepage_uri: homepage,\n      source_code_uri: sourceUrl,\n    }) => ({\n      packageName,\n      latestVersion: version,\n      changelogUrl,\n      homepage,\n      sourceUrl,\n    })\n  );\nexport type GemMetadata = z.infer<typeof GemMetadata>;\n\nexport const GemVersions = LooseArray(\n  z\n    .object({\n      number: z.string(),\n      created_at: z.string(),\n      platform: z.string().nullable().catch(null),\n      ruby_version: z.string().nullable().catch(null),\n      rubygems_version: z.string().nullable().catch(null),\n      metadata: z\n        .object({\n          changelog_uri: z.string().optional().catch(undefined),\n          source_code_uri: z.string().optional().catch(undefined),\n        })\n        .catch({}),\n    })\n    .transform(\n      ({\n        number: version,\n        created_at: releaseTimestamp,\n        platform,\n        ruby_version: rubyVersion,\n        rubygems_version: rubygemsVersion,\n        metadata,\n      }): Release => {\n        const result: Release = { version, releaseTimestamp };\n        const constraints: Record<string, string[]> = {};\n\n        if (platform) {\n          constraints.platform = [platform];\n        }\n\n        if (rubyVersion) {\n          constraints.ruby = [rubyVersion];\n        }\n\n        if (rubygemsVersion) {\n          constraints.rubygems = [rubygemsVersion];\n        }\n\n        if (!is.emptyObject(constraints)) {\n          result.constraints = constraints;\n        }\n\n        if (metadata.changelog_uri) {\n          result.changelogUrl = metadata.changelog_uri;\n        }\n\n        if (metadata.source_code_uri) {\n          result.sourceUrl = metadata.source_code_uri;\n        }\n\n        return result;\n      }\n    )\n);\nexport type GemVersions = z.infer<typeof GemVersions>;\n"]}