import { z } from 'zod';
import type { Release } from '../types';
export declare const MarshalledVersionInfo: z.ZodCatch<z.ZodNullable<z.ZodEffects<z.ZodEffects<z.ZodArray<z.ZodAny, "many">, {
    version: string;
}[], any[]>, {
    releases: {
        version: string;
    }[];
} | null, any[]>>>;
export declare const GemMetadata: z.ZodEffects<z.ZodObject<{
    name: z.ZodString;
    version: z.ZodCatch<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    changelog_uri: z.ZodCatch<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    homepage_uri: z.ZodCatch<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
    source_code_uri: z.ZodCatch<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    version?: string | null | undefined;
    changelog_uri?: string | null | undefined;
    homepage_uri?: string | null | undefined;
    source_code_uri?: string | null | undefined;
}, {
    name: string;
    version?: unknown;
    changelog_uri?: unknown;
    homepage_uri?: unknown;
    source_code_uri?: unknown;
}>, {
    packageName: string;
    latestVersion: string | null | undefined;
    changelogUrl: string | null | undefined;
    homepage: string | null | undefined;
    sourceUrl: string | null | undefined;
}, {
    name: string;
    version?: unknown;
    changelog_uri?: unknown;
    homepage_uri?: unknown;
    source_code_uri?: unknown;
}>;
export type GemMetadata = z.infer<typeof GemMetadata>;
export declare const GemVersions: z.ZodEffects<z.ZodArray<z.ZodAny, "many">, Release[], any[]>;
export type GemVersions = z.infer<typeof GemVersions>;
