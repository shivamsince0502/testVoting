{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/flux/extract.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,qCAAkC;AAClC,4CAAyC;AACzC,yCAAiD;AACjD,+CAA4C;AAC5C,oEAA0E;AAC1E,oDAA2D;AAC3D,wDAA8D;AAC9D,wDAA8D;AAC9D,sEAA4E;AAC5E,8DAAoE;AACpE,8DAAoE;AACpE,gDAAuD;AACvD,mDAA+C;AAO/C,qCAA4C;AAU5C,SAAS,YAAY,CACnB,OAAe,EACf,WAAmB;IAEnB,IAAI,IAAA,yBAAgB,EAAC,WAAW,CAAC,EAAE;QACjC,MAAM,YAAY,GAAG,IAAA,aAAK,EACxB,oEAAoE,CACrE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,IAAI,CAAC;SACb;QACD,OAAO;YACL,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;YACxB,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;SAC5B,CAAC;KACH;IAED,MAAM,QAAQ,GAAiB;QAC7B,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,EAAE;KACd,CAAC;IACF,IAAI,SAAyB,CAAC;IAC9B,IAAI;QACF,SAAS,GAAG,IAAA,iBAAO,EAAC,OAAO,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAmB,CAAC;KACtE;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,+BAA+B,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC;KACb;IAED,qHAAqH;IACrH,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;QAChC,QAAQ,QAAQ,EAAE,IAAI,EAAE;YACtB,KAAK,aAAa;gBAChB,IACE,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,yBAAyB,CAAC;oBAC1D,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EACjC;oBACA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBACD,MAAM;YACR,KAAK,gBAAgB;gBACnB,IACE,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,2BAA2B,CAAC;oBAC5D,QAAQ,CAAC,QAAQ,EAAE,IAAI;oBACvB,QAAQ,CAAC,QAAQ,CAAC,SAAS;oBAC3B,QAAQ,CAAC,IAAI,EAAE,GAAG,EAClB;oBACA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBACD,MAAM;YACR,KAAK,eAAe;gBAClB,IACE,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,2BAA2B,CAAC;oBAC5D,QAAQ,CAAC,IAAI,EAAE,GAAG,EAClB;oBACA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBACD,MAAM;YACR,KAAK,eAAe;gBAClB,IACE,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,2BAA2B,CAAC;oBAC5D,QAAQ,CAAC,IAAI,EAAE,GAAG,EAClB;oBACA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBACD,MAAM;SACT;KACF;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,MAAM,cAAc,GAAG,IAAA,aAAK,EAC1B,6EAA6E,CAC9E,CAAC;AACF,MAAM,cAAc,GAAG,IAAA,aAAK,EAC1B,6EAA6E,CAC9E,CAAC;AACF,MAAM,iBAAiB,GAAG,IAAA,aAAK,EAC7B,gFAAgF,CACjF,CAAC;AAEF,SAAS,gCAAgC,CACvC,GAAsB,EACtB,MAAc;IAEd,MAAM,iBAAiB,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;IAC9D,IAAI,iBAAiB,EAAE;QACrB,GAAG,CAAC,UAAU,GAAG,kCAAoB,CAAC,EAAE,CAAC;QACzC,GAAG,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;QAChD,GAAG,CAAC,SAAS,GAAG,sBAAsB,GAAG,CAAC,WAAW,EAAE,CAAC;QACxD,OAAO;KACR;IAED,MAAM,iBAAiB,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;IAC9D,IAAI,iBAAiB,EAAE;QACrB,GAAG,CAAC,UAAU,GAAG,kCAAoB,CAAC,EAAE,CAAC;QACzC,GAAG,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;QAChD,GAAG,CAAC,SAAS,GAAG,sBAAsB,GAAG,CAAC,WAAW,EAAE,CAAC;QACxD,OAAO;KACR;IAED,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC;IACpE,IAAI,oBAAoB,EAAE;QACxB,GAAG,CAAC,UAAU,GAAG,wCAAuB,CAAC,EAAE,CAAC;QAC5C,GAAG,CAAC,WAAW,GAAG,oBAAoB,CAAC,WAAW,CAAC;QACnD,GAAG,CAAC,SAAS,GAAG,yBAAyB,GAAG,CAAC,WAAW,EAAE,CAAC;QAC3D,OAAO;KACR;IAED,GAAG,CAAC,UAAU,GAAG,4BAAiB,CAAC,EAAE,CAAC;IACtC,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC;IACzB,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;QACjC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;KAC9C;AACH,CAAC;AAED,SAAS,qBAAqB,CAC5B,QAA4B;IAE5B,OAAO;QACL;YACE,OAAO,EAAE,cAAc;YACvB,UAAU,EAAE,0CAAwB,CAAC,EAAE;YACvC,YAAY,EAAE,QAAQ,CAAC,OAAO;YAC9B,WAAW,EAAE;gBACX,UAAU,EAAE,QAAQ,CAAC,UAAU;aAChC;SACF;KACF,CAAC;AACJ,CAAC;AAED,SAAS,uBAAuB,CAC9B,QAA8B,EAC9B,gBAAkC;IAElC,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,KAAK,MAAM,QAAQ,IAAI,QAAQ,CAAC,SAAS,EAAE;QACzC,QAAQ,QAAQ,CAAC,IAAI,EAAE;YACrB,KAAK,aAAa,CAAC,CAAC;gBAClB,MAAM,GAAG,GAAsB;oBAC7B,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK;oBACvC,YAAY,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;oBAC9C,UAAU,EAAE,qBAAc,CAAC,EAAE;iBAC9B,CAAC;gBAEF,MAAM,oBAAoB,GAAG,gBAAgB,CAAC,MAAM,CAClD,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI;oBACrD,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;oBAC7D,GAAG,CAAC,QAAQ,CAAC,SAAS;wBACpB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS;4BAC3C,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CACpC,CAAC;gBACF,IAAI,oBAAoB,CAAC,MAAM,EAAE;oBAC/B,GAAG,CAAC,YAAY,GAAG,oBAAoB;yBACpC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;wBACZ,IACE,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK;4BACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAClC;4BACA,8BAA8B;4BAC9B,GAAG,CAAC,UAAU,GAAG,yBAAgB,CAAC,EAAE,CAAC;4BACrC,qCAAqC;4BACrC,GAAG,CAAC,WAAW,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,IACtD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAC3B,EAAE,CAAC;4BACH,OAAO,IAAI,CAAC;yBACb;6BAAM;4BACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;yBACtB;oBACH,CAAC,CAAC;yBACD,MAAM,CAAC,YAAE,CAAC,MAAM,CAAC,CAAC;oBAErB,+CAA+C;oBAC/C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,EAAE;wBAC7B,OAAO,GAAG,CAAC,YAAY,CAAC;qBACzB;iBACF;qBAAM;oBACL,GAAG,CAAC,UAAU,GAAG,kBAAkB,CAAC;iBACrC;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM;aACP;YACD,KAAK,eAAe,CAAC,CAAC;gBACpB,MAAM,GAAG,GAAsB;oBAC7B,OAAO,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI;iBAChC,CAAC;gBAEF,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE;oBAC7B,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;oBACjC,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;oBAC7C,GAAG,CAAC,UAAU,GAAG,4BAAiB,CAAC,EAAE,CAAC;oBACtC,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC;oBACzB,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;oBAC7C,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;wBACjC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;qBAC9C;iBACF;qBAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;oBACjC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;oBACzC,gCAAgC,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC1D;qBAAM;oBACL,GAAG,CAAC,UAAU,GAAG,uBAAuB,CAAC;iBAC1C;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM;aACP;YACD,KAAK,eAAe,CAAC,CAAC;gBACpB,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAC3D,IAAI,GAAG,GAAsB;oBAC3B,OAAO,EAAE,SAAS;iBACnB,CAAC;gBACF,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE;oBAC7B,GAAG,GAAG,IAAA,gBAAM,EAAC,GAAG,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;oBAChE,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;wBAC1B,eAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;qBAC1D;iBACF;qBAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;oBACjC,GAAG,GAAG,IAAA,gBAAM,EAAC,GAAG,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;oBAC7D,GAAG,CAAC,yBAAyB;wBAC3B,2EAA2E,CAAC;oBAC9E,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBAC3C;qBAAM;oBACL,GAAG,CAAC,UAAU,GAAG,uBAAuB,CAAC;iBAC1C;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM;aACP;SACF;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAgB,kBAAkB,CAChC,OAAe,EACf,WAAmB;IAEnB,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACpD,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,IAAI,CAAC;KACb;IACD,MAAM,gBAAgB,GAAqB,EAAE,CAAC;IAC9C,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;QAChC,KAAK,MAAM,QAAQ,IAAI,QAAQ,CAAC,SAAS,EAAE;YACzC,IAAI,QAAQ,CAAC,IAAI,KAAK,gBAAgB,EAAE;gBACtC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjC;SACF;KACF;IACD,IAAI,IAAI,GAA+B,IAAI,CAAC;IAC5C,QAAQ,QAAQ,CAAC,IAAI,EAAE;QACrB,KAAK,QAAQ;YACX,IAAI,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YACvC,MAAM;QACR,KAAK,UAAU,CAAC,CAAC;YACf,IAAI,GAAG,uBAAuB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAC3D,MAAM;SACP;KACF;IACD,OAAO,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC,CAAC;AA3BD,gDA2BC;AAEM,KAAK,UAAU,sBAAsB,CAC1C,OAAsB,EACtB,YAAsB;IAEtB,MAAM,SAAS,GAAmB,EAAE,CAAC;IACrC,MAAM,OAAO,GAAmC,EAAE,CAAC;IAEnD,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;QAC/B,MAAM,OAAO,GAAG,MAAM,IAAA,kBAAa,EAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAClD,aAAa;QACb,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAQ,EAAE,IAAI,CAAC,CAAC;QAC9C,IAAI,QAAQ,EAAE;YACZ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1B;KACF;IAED,MAAM,gBAAgB,GAAqB,EAAE,CAAC;IAC9C,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;QAChC,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;YAChC,KAAK,MAAM,QAAQ,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACzC,IAAI,QAAQ,CAAC,IAAI,KAAK,gBAAgB,EAAE;oBACtC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACjC;aACF;SACF;KACF;IAED,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;QAChC,IAAI,IAAI,GAA+B,IAAI,CAAC;QAC5C,QAAQ,QAAQ,CAAC,IAAI,EAAE;YACrB,KAAK,QAAQ;gBACX,IAAI,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBACvC,MAAM;YACR,KAAK,UAAU,CAAC,CAAC;gBACf,IAAI,GAAG,uBAAuB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;gBAC3D,MAAM;aACP;SACF;QACD,IAAI,IAAI,EAAE,MAAM,EAAE;YAChB,OAAO,CAAC,IAAI,CAAC;gBACX,WAAW,EAAE,QAAQ,CAAC,IAAI;gBAC1B,IAAI;aACL,CAAC,CAAC;SACJ;KACF;IAED,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;AACzC,CAAC;AA/CD,wDA+CC","sourcesContent":["import is from '@sindresorhus/is';\nimport { loadAll } from 'js-yaml';\nimport { logger } from '../../../logger';\nimport { readLocalFile } from '../../../util/fs';\nimport { regEx } from '../../../util/regex';\nimport { BitbucketTagsDatasource } from '../../datasource/bitbucket-tags';\nimport { DockerDatasource } from '../../datasource/docker';\nimport { GitRefsDatasource } from '../../datasource/git-refs';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { GithubReleasesDatasource } from '../../datasource/github-releases';\nimport { GithubTagsDatasource } from '../../datasource/github-tags';\nimport { GitlabTagsDatasource } from '../../datasource/gitlab-tags';\nimport { HelmDatasource } from '../../datasource/helm';\nimport { getDep } from '../dockerfile/extract';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFile,\n  PackageFileContent,\n} from '../types';\nimport { isSystemManifest } from './common';\nimport type {\n  FluxManagerData,\n  FluxManifest,\n  FluxResource,\n  HelmRepository,\n  ResourceFluxManifest,\n  SystemFluxManifest,\n} from './types';\n\nfunction readManifest(\n  content: string,\n  packageFile: string\n): FluxManifest | null {\n  if (isSystemManifest(packageFile)) {\n    const versionMatch = regEx(\n      /#\\s*Flux\\s+Version:\\s*(\\S+)(?:\\s*#\\s*Components:\\s*([A-Za-z,-]+))?/\n    ).exec(content);\n    if (!versionMatch) {\n      return null;\n    }\n    return {\n      kind: 'system',\n      file: packageFile,\n      version: versionMatch[1],\n      components: versionMatch[2],\n    };\n  }\n\n  const manifest: FluxManifest = {\n    kind: 'resource',\n    file: packageFile,\n    resources: [],\n  };\n  let resources: FluxResource[];\n  try {\n    resources = loadAll(content, null, { json: true }) as FluxResource[];\n  } catch (err) {\n    logger.debug({ err, packageFile }, 'Failed to parse Flux manifest');\n    return null;\n  }\n\n  // It's possible there are other non-Flux HelmRelease/HelmRepository CRs out there, so we filter based on apiVersion.\n  for (const resource of resources) {\n    switch (resource?.kind) {\n      case 'HelmRelease':\n        if (\n          resource.apiVersion?.startsWith('helm.toolkit.fluxcd.io/') &&\n          resource.spec?.chart?.spec?.chart\n        ) {\n          manifest.resources.push(resource);\n        }\n        break;\n      case 'HelmRepository':\n        if (\n          resource.apiVersion?.startsWith('source.toolkit.fluxcd.io/') &&\n          resource.metadata?.name &&\n          resource.metadata.namespace &&\n          resource.spec?.url\n        ) {\n          manifest.resources.push(resource);\n        }\n        break;\n      case 'GitRepository':\n        if (\n          resource.apiVersion?.startsWith('source.toolkit.fluxcd.io/') &&\n          resource.spec?.url\n        ) {\n          manifest.resources.push(resource);\n        }\n        break;\n      case 'OCIRepository':\n        if (\n          resource.apiVersion?.startsWith('source.toolkit.fluxcd.io/') &&\n          resource.spec?.url\n        ) {\n          manifest.resources.push(resource);\n        }\n        break;\n    }\n  }\n\n  return manifest;\n}\n\nconst githubUrlRegex = regEx(\n  /^(?:https:\\/\\/|git@)github\\.com[/:](?<packageName>[^/]+\\/[^/]+?)(?:\\.git)?$/\n);\nconst gitlabUrlRegex = regEx(\n  /^(?:https:\\/\\/|git@)gitlab\\.com[/:](?<packageName>[^/]+\\/[^/]+?)(?:\\.git)?$/\n);\nconst bitbucketUrlRegex = regEx(\n  /^(?:https:\\/\\/|git@)bitbucket\\.org[/:](?<packageName>[^/]+\\/[^/]+?)(?:\\.git)?$/\n);\n\nfunction resolveGitRepositoryPerSourceTag(\n  dep: PackageDependency,\n  gitUrl: string\n): void {\n  const githubMatchGroups = githubUrlRegex.exec(gitUrl)?.groups;\n  if (githubMatchGroups) {\n    dep.datasource = GithubTagsDatasource.id;\n    dep.packageName = githubMatchGroups.packageName;\n    dep.sourceUrl = `https://github.com/${dep.packageName}`;\n    return;\n  }\n\n  const gitlabMatchGroups = gitlabUrlRegex.exec(gitUrl)?.groups;\n  if (gitlabMatchGroups) {\n    dep.datasource = GitlabTagsDatasource.id;\n    dep.packageName = gitlabMatchGroups.packageName;\n    dep.sourceUrl = `https://gitlab.com/${dep.packageName}`;\n    return;\n  }\n\n  const bitbucketMatchGroups = bitbucketUrlRegex.exec(gitUrl)?.groups;\n  if (bitbucketMatchGroups) {\n    dep.datasource = BitbucketTagsDatasource.id;\n    dep.packageName = bitbucketMatchGroups.packageName;\n    dep.sourceUrl = `https://bitbucket.org/${dep.packageName}`;\n    return;\n  }\n\n  dep.datasource = GitTagsDatasource.id;\n  dep.packageName = gitUrl;\n  if (gitUrl.startsWith('https://')) {\n    dep.sourceUrl = gitUrl.replace(/\\.git$/, '');\n  }\n}\n\nfunction resolveSystemManifest(\n  manifest: SystemFluxManifest\n): PackageDependency<FluxManagerData>[] {\n  return [\n    {\n      depName: 'fluxcd/flux2',\n      datasource: GithubReleasesDatasource.id,\n      currentValue: manifest.version,\n      managerData: {\n        components: manifest.components,\n      },\n    },\n  ];\n}\n\nfunction resolveResourceManifest(\n  manifest: ResourceFluxManifest,\n  helmRepositories: HelmRepository[]\n): PackageDependency[] {\n  const deps: PackageDependency[] = [];\n  for (const resource of manifest.resources) {\n    switch (resource.kind) {\n      case 'HelmRelease': {\n        const dep: PackageDependency = {\n          depName: resource.spec.chart.spec.chart,\n          currentValue: resource.spec.chart.spec.version,\n          datasource: HelmDatasource.id,\n        };\n\n        const matchingRepositories = helmRepositories.filter(\n          (rep) =>\n            rep.kind === resource.spec.chart.spec.sourceRef?.kind &&\n            rep.metadata.name === resource.spec.chart.spec.sourceRef.name &&\n            rep.metadata.namespace ===\n              (resource.spec.chart.spec.sourceRef.namespace ??\n                resource.metadata?.namespace)\n        );\n        if (matchingRepositories.length) {\n          dep.registryUrls = matchingRepositories\n            .map((repo) => {\n              if (\n                repo.spec.type === 'oci' ||\n                repo.spec.url.startsWith('oci://')\n              ) {\n                // Change datasource to Docker\n                dep.datasource = DockerDatasource.id;\n                // Ensure the URL is a valid OCI path\n                dep.packageName = `${repo.spec.url.replace('oci://', '')}/${\n                  resource.spec.chart.spec.chart\n                }`;\n                return null;\n              } else {\n                return repo.spec.url;\n              }\n            })\n            .filter(is.string);\n\n          // if registryUrls is empty, delete it from dep\n          if (!dep.registryUrls?.length) {\n            delete dep.registryUrls;\n          }\n        } else {\n          dep.skipReason = 'unknown-registry';\n        }\n        deps.push(dep);\n        break;\n      }\n      case 'GitRepository': {\n        const dep: PackageDependency = {\n          depName: resource.metadata.name,\n        };\n\n        if (resource.spec.ref?.commit) {\n          const gitUrl = resource.spec.url;\n          dep.currentDigest = resource.spec.ref.commit;\n          dep.datasource = GitRefsDatasource.id;\n          dep.packageName = gitUrl;\n          dep.replaceString = resource.spec.ref.commit;\n          if (gitUrl.startsWith('https://')) {\n            dep.sourceUrl = gitUrl.replace(/\\.git$/, '');\n          }\n        } else if (resource.spec.ref?.tag) {\n          dep.currentValue = resource.spec.ref.tag;\n          resolveGitRepositoryPerSourceTag(dep, resource.spec.url);\n        } else {\n          dep.skipReason = 'unversioned-reference';\n        }\n        deps.push(dep);\n        break;\n      }\n      case 'OCIRepository': {\n        const container = resource.spec.url?.replace('oci://', '');\n        let dep: PackageDependency = {\n          depName: container,\n        };\n        if (resource.spec.ref?.digest) {\n          dep = getDep(`${container}@${resource.spec.ref.digest}`, false);\n          if (resource.spec.ref?.tag) {\n            logger.debug('A digest and tag was found, ignoring tag');\n          }\n        } else if (resource.spec.ref?.tag) {\n          dep = getDep(`${container}:${resource.spec.ref.tag}`, false);\n          dep.autoReplaceStringTemplate =\n            '{{#if newValue}}{{newValue}}{{/if}}{{#if newDigest}}@{{newDigest}}{{/if}}';\n          dep.replaceString = resource.spec.ref.tag;\n        } else {\n          dep.skipReason = 'unversioned-reference';\n        }\n        deps.push(dep);\n        break;\n      }\n    }\n  }\n  return deps;\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string\n): PackageFileContent<FluxManagerData> | null {\n  const manifest = readManifest(content, packageFile);\n  if (!manifest) {\n    return null;\n  }\n  const helmRepositories: HelmRepository[] = [];\n  if (manifest.kind === 'resource') {\n    for (const resource of manifest.resources) {\n      if (resource.kind === 'HelmRepository') {\n        helmRepositories.push(resource);\n      }\n    }\n  }\n  let deps: PackageDependency[] | null = null;\n  switch (manifest.kind) {\n    case 'system':\n      deps = resolveSystemManifest(manifest);\n      break;\n    case 'resource': {\n      deps = resolveResourceManifest(manifest, helmRepositories);\n      break;\n    }\n  }\n  return deps?.length ? { deps } : null;\n}\n\nexport async function extractAllPackageFiles(\n  _config: ExtractConfig,\n  packageFiles: string[]\n): Promise<PackageFile<FluxManagerData>[] | null> {\n  const manifests: FluxManifest[] = [];\n  const results: PackageFile<FluxManagerData>[] = [];\n\n  for (const file of packageFiles) {\n    const content = await readLocalFile(file, 'utf8');\n    // TODO #7154\n    const manifest = readManifest(content!, file);\n    if (manifest) {\n      manifests.push(manifest);\n    }\n  }\n\n  const helmRepositories: HelmRepository[] = [];\n  for (const manifest of manifests) {\n    if (manifest.kind === 'resource') {\n      for (const resource of manifest.resources) {\n        if (resource.kind === 'HelmRepository') {\n          helmRepositories.push(resource);\n        }\n      }\n    }\n  }\n\n  for (const manifest of manifests) {\n    let deps: PackageDependency[] | null = null;\n    switch (manifest.kind) {\n      case 'system':\n        deps = resolveSystemManifest(manifest);\n        break;\n      case 'resource': {\n        deps = resolveResourceManifest(manifest, helmRepositories);\n        break;\n      }\n    }\n    if (deps?.length) {\n      results.push({\n        packageFile: manifest.file,\n        deps,\n      });\n    }\n  }\n\n  return results.length ? results : null;\n}\n"]}