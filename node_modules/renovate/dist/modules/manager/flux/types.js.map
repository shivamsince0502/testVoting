{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/modules/manager/flux/types.ts"],"names":[],"mappings":"","sourcesContent":["export type FluxManagerData = {\n  components: string;\n};\n\nexport interface KubernetesResource {\n  apiVersion: string;\n  metadata: {\n    name: string;\n    // For Flux, the namespace property is optional, but matching HelmReleases to HelmRepositories would be\n    // much more difficult without it (we'd have to examine the parent Kustomizations to discover the value),\n    // so we require it for renovation.\n    namespace: string;\n  };\n}\n\nexport interface HelmRelease extends KubernetesResource {\n  kind: 'HelmRelease';\n  spec: {\n    chart: {\n      spec: {\n        chart: string;\n        sourceRef: {\n          kind: string;\n          name: string;\n          namespace?: string;\n        };\n        version?: string;\n      };\n    };\n  };\n}\n\nexport type HelmRepositoryType = 'oci' | 'default';\n\nexport interface HelmRepository extends KubernetesResource {\n  kind: 'HelmRepository';\n  spec: {\n    url: string;\n    type: HelmRepositoryType;\n  };\n}\n\nexport interface GitRepository extends KubernetesResource {\n  kind: 'GitRepository';\n  spec: {\n    ref: {\n      tag?: string;\n      commit?: string;\n    };\n    url: string;\n  };\n}\n\nexport interface OciRepository extends KubernetesResource {\n  kind: 'OCIRepository';\n  spec: {\n    ref: {\n      digest?: string;\n      tag?: string;\n    };\n    url: string;\n  };\n}\n\nexport type FluxResource =\n  | HelmRelease\n  | HelmRepository\n  | GitRepository\n  | OciRepository;\n\nexport interface FluxFile {\n  file: string;\n}\n\nexport interface ResourceFluxManifest extends FluxFile {\n  kind: 'resource';\n  resources: FluxResource[];\n}\n\nexport interface SystemFluxManifest extends FluxFile {\n  kind: 'system';\n  version: string;\n  components: string;\n}\n\nexport type FluxManifest = ResourceFluxManifest | SystemFluxManifest;\n"]}