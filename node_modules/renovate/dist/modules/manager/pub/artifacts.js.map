{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pub/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions } from '../../../util/exec/types';\nimport {\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { regEx } from '../../../util/regex';\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\n\nfunction getFlutterConstraint(lockFileContent: string): string | undefined {\n  return regEx(/^\\tflutter: ['\"](?<flutterVersion>.*)['\"]$/m).exec(\n    lockFileContent\n  )?.groups?.flutterVersion;\n}\n\nfunction getDartConstraint(lockFileContent: string): string | undefined {\n  return regEx(/^\\tdart: ['\"](?<dartVersion>.*)['\"]$/m).exec(lockFileContent)\n    ?.groups?.dartVersion;\n}\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`pub.updateArtifacts(${packageFileName})`);\n  const isLockFileMaintenance = config.updateType === 'lockFileMaintenance';\n\n  if (is.emptyArray(updatedDeps) && !isLockFileMaintenance) {\n    logger.debug('No updated pub deps - returning null');\n    return null;\n  }\n\n  const lockFileName = getSiblingFileName(packageFileName, 'pubspec.lock');\n  const oldLockFileContent = await readLocalFile(lockFileName, 'utf8');\n  if (!oldLockFileContent) {\n    logger.debug('No pubspec.lock found');\n    return null;\n  }\n\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n\n    const isFlutter = newPackageFileContent.includes('sdk: flutter');\n    const toolName = isFlutter ? 'flutter' : 'dart';\n    const cmd: string[] = [];\n\n    if (isLockFileMaintenance) {\n      cmd.push(`${toolName} pub upgrade`);\n    } else {\n      cmd.push(\n        `${toolName} pub upgrade ${updatedDeps\n          .map((dep) => dep.depName)\n          .filter(is.string)\n          .map((dep) => quote(dep))\n          .join(' ')}`\n      );\n    }\n\n    const constraint = isFlutter\n      ? config.constraints?.flutter ?? getFlutterConstraint(oldLockFileContent)\n      : config.constraints?.dart ?? getDartConstraint(oldLockFileContent);\n    const execOptions: ExecOptions = {\n      cwdFile: packageFileName,\n      docker: {},\n      toolConstraints: [\n        {\n          toolName,\n          constraint,\n        },\n      ],\n    };\n\n    await exec(cmd, execOptions);\n    const newLockFileContent = await readLocalFile(lockFileName, 'utf8');\n    if (oldLockFileContent === newLockFileContent) {\n      return null;\n    }\n    return [\n      {\n        file: {\n          type: 'addition',\n          path: lockFileName,\n          contents: newLockFileContent,\n        },\n      },\n    ];\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.warn({ lockfile: lockFileName, err }, `Failed to update lock file`);\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}