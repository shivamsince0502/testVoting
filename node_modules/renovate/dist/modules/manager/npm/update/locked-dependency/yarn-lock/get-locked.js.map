{"version":3,"file":"get-locked.js","sourceRoot":"","sources":["../../../../../../../lib/modules/manager/npm/update/locked-dependency/yarn-lock/get-locked.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from '../../../../../../logger';\nimport type { YarnLock, YarnLockEntrySummary } from './types';\n\nexport function parseEntry(depNameConstraint: string): {\n  entryName: string;\n  constraint: string;\n} | null {\n  let entryName: string;\n  let constraint: string;\n  const split = depNameConstraint.split('@');\n  if (split.length === 2) {\n    [entryName, constraint] = split;\n  } else if (split.length === 3) {\n    entryName = '@' + split[1];\n    constraint = split[2];\n  } else {\n    logger.debug({ depNameConstraint }, 'Unexpected depNameConstraint');\n    return null;\n  }\n  return { entryName, constraint };\n}\n\nexport function getYarn1LockedDependencies(\n  yarnLock: YarnLock,\n  depName: string,\n  currentVersion: string\n): YarnLockEntrySummary[] {\n  const res: YarnLockEntrySummary[] = [];\n  try {\n    for (const [depNameConstraint, entry] of Object.entries(yarnLock)) {\n      const parsed = parseEntry(depNameConstraint);\n      // istanbul ignore if\n      if (!parsed) {\n        continue;\n      }\n      const { entryName, constraint } = parsed;\n      if (entryName === depName && entry?.version === currentVersion) {\n        res.push({ entry, depNameConstraint, depName, constraint });\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'getLockedDependencies() error');\n  }\n  return res;\n}\n\nexport function getYarn2LockedDependencies(\n  yarnLock: YarnLock,\n  depName: string,\n  currentVersion: string\n): YarnLockEntrySummary[] {\n  const res: YarnLockEntrySummary[] = [];\n  try {\n    for (const [fullConstraint, entry] of Object.entries(yarnLock)) {\n      if (fullConstraint === '__metadata') {\n        continue;\n      }\n      for (const subConstraint of fullConstraint.split(', ')) {\n        const depNameConstraint = subConstraint;\n        const parsed = parseEntry(depNameConstraint);\n        // istanbul ignore if\n        if (!parsed) {\n          continue;\n        }\n        const { entryName } = parsed;\n        const constraint = parsed.constraint.replace(/^npm:/, '');\n        if (entryName === depName && entry?.version === currentVersion) {\n          res.push({ entry, depNameConstraint, depName, constraint });\n        }\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'getLockedDependencies() error');\n  }\n  return res;\n}\n\n// Finds matching dependencies withing a package lock file of sub-entry\nexport function getLockedDependencies(\n  yarnLock: YarnLock,\n  depName: string,\n  currentVersion: string\n): YarnLockEntrySummary[] {\n  if ('__metadata' in yarnLock) {\n    return getYarn2LockedDependencies(yarnLock, depName, currentVersion);\n  }\n  return getYarn1LockedDependencies(yarnLock, depName, currentVersion);\n}\n"]}