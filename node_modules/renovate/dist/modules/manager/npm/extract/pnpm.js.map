{"version":3,"file":"pnpm.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/npm/extract/pnpm.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,iDAA6C;AAC7C,qCAA+B;AAC/B,0DAA0B;AAC1B,sDAAyD;AACzD,+CAA4C;AAC5C,4CAK6B;AAM7B,SAAS,cAAc,CAAC,GAAQ;IAC9B,OAAO,YAAE,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,iBAAiB,IAAI,GAAG,CAAC;AACzD,CAAC;AAEM,KAAK,UAAU,kBAAkB,CACtC,QAAgB;IAEhB,IAAI;QACF,aAAa;QACb,MAAM,QAAQ,GAAG,IAAA,cAAI,EAAC,CAAC,MAAM,IAAA,kBAAa,EAAC,QAAQ,EAAE,MAAM,CAAC,CAAE,EAAE;YAC9D,IAAI,EAAE,IAAI;SACX,CAAsB,CAAC;QACxB,IACE,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjC,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,YAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EACnD;YACA,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,EACZ,iEAAiE,CAClE,CAAC;YACF,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,QAAQ,CAAC,QAAQ,CAAC;KAC1B;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,qCAAqC,CAAC,CAAC;QACvE,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AAvBD,gDAuBC;AAEM,KAAK,UAAU,iBAAiB,CACrC,WAAmB;IAEnB,iCAAiC;IACjC,MAAM,iBAAiB,GAAG,MAAM,IAAA,6BAAwB,EACtD,WAAW,EACX,qBAAqB,CACtB,CAAC;IACF,IAAI,CAAC,iBAAiB,EAAE;QACtB,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,EACf,6DAA6D,CAC9D,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAED,wDAAwD;IACxD,MAAM,gBAAgB,GAAG,IAAA,uBAAkB,EACzC,iBAAiB,EACjB,gBAAgB,CACjB,CAAC;IACF,IAAI,CAAC,CAAC,MAAM,IAAA,oBAAe,EAAC,gBAAgB,CAAC,CAAC,EAAE;QAC9C,eAAM,CAAC,KAAK,CACV,EAAE,iBAAiB,EAAE,WAAW,EAAE,EAClC,4DAA4D,CAC7D,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAED,OAAO;QACL,YAAY,EAAE,gBAAgB;QAC9B,iBAAiB;KAClB,CAAC;AACJ,CAAC;AAjCD,8CAiCC;AAEM,KAAK,UAAU,oBAAoB,CACxC,YAAoD;IAEpD,eAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC1C,MAAM,gBAAgB,GAAG,IAAI,GAAG,EAA2B,CAAC;IAE5D,KAAK,MAAM,CAAC,IAAI,YAAY,EAAE;QAC5B,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;QACvC,MAAM,EAAE,cAAc,EAAE,GAAG,WAA6B,CAAC;QAEzD,yDAAyD;QACzD,IAAI,cAAc,EAAE;YAClB,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,cAAc,EAAE,EAC/B,uEAAuE,CACxE,CAAC;YACF,SAAS;SACV;QAED,0CAA0C;QAC1C,aAAa;QACb,MAAM,aAAa,GAAG,MAAM,iBAAiB,CAAC,WAAY,CAAC,CAAC;QAC5D,IAAI,aAAa,KAAK,IAAI,EAAE;YAC1B,SAAS;SACV;QACD,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,GAAG,aAAa,CAAC;QAE1D,4CAA4C;QAC5C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;YAC5C,MAAM,OAAO,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;YAC5D,MAAM,QAAQ,GAAG,qBAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,4BAAY,EACjC,eAAK,CAAC,OAAO,CAAC,eAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC,EACtD;gBACE,QAAQ,EAAE,OAAO;gBACjB,0DAA0D;gBAC1D,MAAM,EAAE,CAAC,oBAAoB,EAAE,wBAAwB,CAAC;aACzD,CACF,CAAC;YACF,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CACxC,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,CACpC,CAAC;YACF,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;SACvD;QACD,MAAM,YAAY,GAAG,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE7D,MAAM,oBAAoB,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CACpD,CAAC,CAAC,QAAQ,CAAC,WAAY,CAAC,CACzB,CAAC;QAEF,IAAI,oBAAoB,EAAE;YACxB,CAAC,CAAC,WAAW,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC,WAAW,CAAC,cAAc,GAAG,YAAY,CAAC;SAC7C;aAAM;YACL,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,iBAAiB,EAAE,EAClC,+CAA+C,CAChD,CAAC;SACH;KACF;AACH,CAAC;AA5DD,oDA4DC;AAEM,KAAK,UAAU,WAAW,CAAC,QAAgB;IAChD,IAAI;QACF,MAAM,WAAW,GAAG,MAAM,IAAA,kBAAa,EAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;QAED,MAAM,UAAU,GAAG,IAAA,cAAI,EAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QACD,eAAM,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,EAAE,sBAAsB,CAAC,CAAC;QAErD,qFAAqF;QACrF,MAAM,eAAe,GAAW,YAAE,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC;YACnE,CAAC,CAAC,UAAU,CAAC,eAAe;YAC5B,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAE3C,MAAM,cAAc,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAErD,OAAO;YACL,sBAAsB,EAAE,cAAc;YACtC,eAAe;SAChB,CAAC;KACH;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,0CAA0C,CAAC,CAAC;QAC5E,OAAO,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC;KAC/B;AACH,CAAC;AA5BD,kCA4BC;AAED,SAAS,iBAAiB,CACxB,UAAwB;IAExB,MAAM,cAAc,GAGhB,EAAE,CAAC;IAEP,WAAW;IACX,IAAI,YAAE,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC3C,KAAK,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YACtE,cAAc,CAAC,QAAQ,CAAC,GAAG,2BAA2B,CAAC,OAAO,CAAC,CAAC;SACjE;KACF;IACD,cAAc;SACT;QACH,cAAc,CAAC,GAAG,CAAC,GAAG,2BAA2B,CAAC,UAAU,CAAC,CAAC;KAC/D;IAED,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS,2BAA2B,CAClC,GAAwD;IAExD,MAAM,eAAe,GAAG;QACtB,cAAc;QACd,iBAAiB;QACjB,sBAAsB;KACd,CAAC;IAEX,MAAM,GAAG,GAA2C,EAAE,CAAC;IACvD,KAAK,MAAM,OAAO,IAAI,eAAe,EAAE;QACrC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAClB,KAAK,MAAM,CAAC,OAAO,EAAE,cAAc,CAAC,IAAI,MAAM,CAAC,OAAO,CACpD,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CACnB,EAAE;YACD,IAAI,OAAe,CAAC;YACpB,IAAI,YAAE,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;gBAC7B,OAAO,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;aACrC;iBAAM;gBACL,OAAO,GAAG,cAAc,CAAC;aAC1B;YAED,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAChD,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC;SACpC;KACF;IAED,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport { findPackages } from 'find-packages';\nimport { load } from 'js-yaml';\nimport upath from 'upath';\nimport { GlobalConfig } from '../../../../config/global';\nimport { logger } from '../../../../logger';\nimport {\n  findLocalSiblingOrParent,\n  getSiblingFileName,\n  localPathExists,\n  readLocalFile,\n} from '../../../../util/fs';\nimport type { PackageFile } from '../../types';\nimport type { PnpmDependencySchema, PnpmLockFile } from '../post-update/types';\nimport type { NpmManagerData } from '../types';\nimport type { LockFile, PnpmWorkspaceFile } from './types';\n\nfunction isPnpmLockfile(obj: any): obj is PnpmLockFile {\n  return is.plainObject(obj) && 'lockfileVersion' in obj;\n}\n\nexport async function extractPnpmFilters(\n  fileName: string\n): Promise<string[] | undefined> {\n  try {\n    // TODO #7154\n    const contents = load((await readLocalFile(fileName, 'utf8'))!, {\n      json: true,\n    }) as PnpmWorkspaceFile;\n    if (\n      !Array.isArray(contents.packages) ||\n      !contents.packages.every((item) => is.string(item))\n    ) {\n      logger.trace(\n        { fileName },\n        'Failed to find required \"packages\" array in pnpm-workspace.yaml'\n      );\n      return undefined;\n    }\n    return contents.packages;\n  } catch (err) {\n    logger.trace({ fileName, err }, 'Failed to parse pnpm-workspace.yaml');\n    return undefined;\n  }\n}\n\nexport async function findPnpmWorkspace(\n  packageFile: string\n): Promise<{ lockFilePath: string; workspaceYamlPath: string } | null> {\n  // search for pnpm-workspace.yaml\n  const workspaceYamlPath = await findLocalSiblingOrParent(\n    packageFile,\n    'pnpm-workspace.yaml'\n  );\n  if (!workspaceYamlPath) {\n    logger.trace(\n      { packageFile },\n      'Failed to locate pnpm-workspace.yaml in a parent directory.'\n    );\n    return null;\n  }\n\n  // search for pnpm-lock.yaml next to pnpm-workspace.yaml\n  const pnpmLockfilePath = getSiblingFileName(\n    workspaceYamlPath,\n    'pnpm-lock.yaml'\n  );\n  if (!(await localPathExists(pnpmLockfilePath))) {\n    logger.trace(\n      { workspaceYamlPath, packageFile },\n      'Failed to find a pnpm-lock.yaml sibling for the workspace.'\n    );\n    return null;\n  }\n\n  return {\n    lockFilePath: pnpmLockfilePath,\n    workspaceYamlPath,\n  };\n}\n\nexport async function detectPnpmWorkspaces(\n  packageFiles: Partial<PackageFile<NpmManagerData>>[]\n): Promise<void> {\n  logger.debug(`Detecting pnpm Workspaces`);\n  const packagePathCache = new Map<string, string[] | null>();\n\n  for (const p of packageFiles) {\n    const { packageFile, managerData } = p;\n    const { pnpmShrinkwrap } = managerData as NpmManagerData;\n\n    // check if pnpmShrinkwrap-file has already been provided\n    if (pnpmShrinkwrap) {\n      logger.trace(\n        { packageFile, pnpmShrinkwrap },\n        'Found an existing pnpm shrinkwrap file; skipping pnpm monorepo check.'\n      );\n      continue;\n    }\n\n    // search for corresponding pnpm workspace\n    // TODO #7154\n    const pnpmWorkspace = await findPnpmWorkspace(packageFile!);\n    if (pnpmWorkspace === null) {\n      continue;\n    }\n    const { workspaceYamlPath, lockFilePath } = pnpmWorkspace;\n\n    // check if package matches workspace filter\n    if (!packagePathCache.has(workspaceYamlPath)) {\n      const filters = await extractPnpmFilters(workspaceYamlPath);\n      const localDir = GlobalConfig.get('localDir');\n      const packages = await findPackages(\n        upath.dirname(upath.join(localDir, workspaceYamlPath)),\n        {\n          patterns: filters,\n          // Match the ignores used in @pnpm/find-workspace-packages\n          ignore: ['**/node_modules/**', '**/bower_components/**'],\n        }\n      );\n      const packagePaths = packages.map((pkg) =>\n        upath.join(pkg.dir, 'package.json')\n      );\n      packagePathCache.set(workspaceYamlPath, packagePaths);\n    }\n    const packagePaths = packagePathCache.get(workspaceYamlPath);\n\n    const isPackageInWorkspace = packagePaths?.some((p) =>\n      p.endsWith(packageFile!)\n    );\n\n    if (isPackageInWorkspace) {\n      p.managerData ??= {};\n      p.managerData.pnpmShrinkwrap = lockFilePath;\n    } else {\n      logger.trace(\n        { packageFile, workspaceYamlPath },\n        `Didn't find the package in the pnpm workspace`\n      );\n    }\n  }\n}\n\nexport async function getPnpmLock(filePath: string): Promise<LockFile> {\n  try {\n    const pnpmLockRaw = await readLocalFile(filePath, 'utf8');\n    if (!pnpmLockRaw) {\n      throw new Error('Unable to read pnpm-lock.yaml');\n    }\n\n    const lockParsed = load(pnpmLockRaw);\n    if (!isPnpmLockfile(lockParsed)) {\n      throw new Error('Invalid or empty lockfile');\n    }\n    logger.trace({ lockParsed }, 'pnpm lockfile parsed');\n\n    // field lockfileVersion is type string in lockfileVersion = 6 and type number in < 6\n    const lockfileVersion: number = is.number(lockParsed.lockfileVersion)\n      ? lockParsed.lockfileVersion\n      : parseFloat(lockParsed.lockfileVersion);\n\n    const lockedVersions = getLockedVersions(lockParsed);\n\n    return {\n      lockedVersionsWithPath: lockedVersions,\n      lockfileVersion,\n    };\n  } catch (err) {\n    logger.debug({ filePath, err }, 'Warning: Exception parsing pnpm lockfile');\n    return { lockedVersions: {} };\n  }\n}\n\nfunction getLockedVersions(\n  lockParsed: PnpmLockFile\n): Record<string, Record<string, Record<string, string>>> {\n  const lockedVersions: Record<\n    string,\n    Record<string, Record<string, string>>\n  > = {};\n\n  // monorepo\n  if (is.nonEmptyObject(lockParsed.importers)) {\n    for (const [importer, imports] of Object.entries(lockParsed.importers)) {\n      lockedVersions[importer] = getLockedDependencyVersions(imports);\n    }\n  }\n  // normal repo\n  else {\n    lockedVersions['.'] = getLockedDependencyVersions(lockParsed);\n  }\n\n  return lockedVersions;\n}\n\nfunction getLockedDependencyVersions(\n  obj: PnpmLockFile | Record<string, PnpmDependencySchema>\n): Record<string, Record<string, string>> {\n  const dependencyTypes = [\n    'dependencies',\n    'devDependencies',\n    'optionalDependencies',\n  ] as const;\n\n  const res: Record<string, Record<string, string>> = {};\n  for (const depType of dependencyTypes) {\n    res[depType] = {};\n    for (const [pkgName, versionCarrier] of Object.entries(\n      obj[depType] ?? {}\n    )) {\n      let version: string;\n      if (is.object(versionCarrier)) {\n        version = versionCarrier['version'];\n      } else {\n        version = versionCarrier;\n      }\n\n      const pkgVersion = version.split('(')[0].trim();\n      res[depType][pkgName] = pkgVersion;\n    }\n  }\n\n  return res;\n}\n"]}