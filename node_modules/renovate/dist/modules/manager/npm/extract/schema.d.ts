import { z } from 'zod';
export declare const PackageLockV3Schema: z.ZodObject<{
    lockfileVersion: z.ZodLiteral<3>;
    packages: z.ZodEffects<z.ZodRecord<z.ZodString, z.ZodAny>, Record<string, {
        version: string;
    }>, Record<string, any>>;
}, "strip", z.ZodTypeAny, {
    packages: Record<string, {
        version: string;
    }>;
    lockfileVersion: 3;
}, {
    packages: Record<string, any>;
    lockfileVersion: 3;
}>;
export declare const PackageLockPreV3Schema: z.ZodEffects<z.ZodObject<{
    lockfileVersion: z.ZodUnion<[z.ZodLiteral<2>, z.ZodLiteral<1>]>;
    dependencies: z.ZodEffects<z.ZodRecord<z.ZodString, z.ZodAny>, Record<string, {
        version: string;
    }>, Record<string, any>>;
}, "strip", z.ZodTypeAny, {
    dependencies: Record<string, {
        version: string;
    }>;
    lockfileVersion: 2 | 1;
}, {
    dependencies: Record<string, any>;
    lockfileVersion: 2 | 1;
}>, {
    lockfileVersion: 2 | 1;
    packages: Record<string, {
        version: string;
    }>;
}, {
    dependencies: Record<string, any>;
    lockfileVersion: 2 | 1;
}>;
export declare const PackageLock: z.ZodEffects<z.ZodPipeline<z.ZodEffects<z.ZodString, string | number | boolean | import("type-fest").JsonObject | import("type-fest").JsonValue[] | readonly import("type-fest").JsonValue[] | null, string>, z.ZodUnion<[z.ZodObject<{
    lockfileVersion: z.ZodLiteral<3>;
    packages: z.ZodEffects<z.ZodRecord<z.ZodString, z.ZodAny>, Record<string, {
        version: string;
    }>, Record<string, any>>;
}, "strip", z.ZodTypeAny, {
    packages: Record<string, {
        version: string;
    }>;
    lockfileVersion: 3;
}, {
    packages: Record<string, any>;
    lockfileVersion: 3;
}>, z.ZodEffects<z.ZodObject<{
    lockfileVersion: z.ZodUnion<[z.ZodLiteral<2>, z.ZodLiteral<1>]>;
    dependencies: z.ZodEffects<z.ZodRecord<z.ZodString, z.ZodAny>, Record<string, {
        version: string;
    }>, Record<string, any>>;
}, "strip", z.ZodTypeAny, {
    dependencies: Record<string, {
        version: string;
    }>;
    lockfileVersion: 2 | 1;
}, {
    dependencies: Record<string, any>;
    lockfileVersion: 2 | 1;
}>, {
    lockfileVersion: 2 | 1;
    packages: Record<string, {
        version: string;
    }>;
}, {
    dependencies: Record<string, any>;
    lockfileVersion: 2 | 1;
}>]>>, {
    lockedVersions: Record<string, string>;
    lockfileVersion: 2 | 1 | 3;
}, string>;
