{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/azure-pipelines/extract.ts"],"names":[],"mappings":";;;AAAA,qCAA+B;AAC/B,mDAAsD;AACtD,4CAAyC;AACzC,+CAAkD;AAClD,+CAA4C;AAC5C,2CAAiD;AACjD,kFAAuF;AACvF,wDAA8D;AAC9D,mDAA+C;AAI/C,MAAM,uBAAuB,GAAG,IAAA,aAAK,EAAC,iCAAiC,CAAC,CAAC;AAEzE,SAAgB,iBAAiB,CAC/B,UAAsB;IAEtB,IAAI,aAAa,GAAG,IAAI,CAAC;IAEzB,IAAI,UAAU,CAAC,IAAI,KAAK,QAAQ,EAAE;QAChC,aAAa,GAAG,sBAAsB,UAAU,CAAC,IAAI,MAAM,CAAC;KAC7D;SAAM,IAAI,UAAU,CAAC,IAAI,KAAK,KAAK,EAAE;QACpC,kDAAkD;QAClD,kGAAkG;QAClG,oDAAoD;QACpD,wFAAwF;QACxF,8FAA8F;QAC9F,kCAAkC;QAClC,mIAAmI;QACnI,MAAM,QAAQ,GAAG,qBAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,qBAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,EAAE;YACpC,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACjC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3D,aAAa,GAAG,IAAA,kBAAY,EAC1B,QAAQ,EACR,kBAAkB,CAAC,WAAW,CAAC,EAC/B,MAAM,EACN,kBAAkB,CAAC,QAAQ,CAAC,CAC7B,CAAC;aACH;iBAAM;gBACL,eAAM,CAAC,KAAK,CACV,0EAA0E,CAC3E,CAAC;aACH;SACF;KACF;IAED,IAAI,aAAa,KAAK,IAAI,EAAE;QAC1B,OAAO,IAAI,CAAC;KACb;IAED,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,YAAY,CAAC,EAAE;QAC7C,OAAO,IAAI,CAAC;KACb;IAED,OAAO;QACL,yBAAyB,EAAE,wBAAwB;QACnD,YAAY,EAAE,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;QACtD,UAAU,EAAE,4BAAiB,CAAC,EAAE;QAChC,OAAO,EAAE,UAAU,CAAC,IAAI;QACxB,OAAO,EAAE,SAAS;QAClB,WAAW,EAAE,aAAa;QAC1B,aAAa,EAAE,UAAU,CAAC,GAAG;KAC9B,CAAC;AACJ,CAAC;AAnDD,8CAmDC;AAED,SAAgB,gBAAgB,CAC9B,SAAoB;IAEpB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;QACpB,OAAO,IAAI,CAAC;KACb;IAED,MAAM,GAAG,GAAG,IAAA,gBAAM,EAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpC,eAAM,CAAC,KAAK,CACV;QACE,OAAO,EAAE,GAAG,CAAC,OAAO;QACpB,YAAY,EAAE,GAAG,CAAC,YAAY;QAC9B,aAAa,EAAE,GAAG,CAAC,aAAa;KACjC,EACD,8BAA8B,CAC/B,CAAC;IACF,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;IAEvB,OAAO,GAAG,CAAC;AACb,CAAC;AAnBD,4CAmBC;AAED,SAAgB,0BAA0B,CACxC,IAAY;IAEZ,MAAM,KAAK,GAAG,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,IAAI,KAAK,EAAE,MAAM,EAAE;QACjB,OAAO;YACL,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI;YAC1B,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO;YAClC,UAAU,EAAE,qDAA6B,CAAC,EAAE;SAC7C,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAZD,gEAYC;AAED,SAAgB,mBAAmB,CACjC,OAAe,EACf,WAAmB;IAEnB,IAAI,GAAG,GAA0B,IAAI,CAAC;IACtC,IAAI;QACF,GAAG,GAAG,IAAA,cAAI,EAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAmB,CAAC;KACvD;IAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;QACvC,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE,uCAAuC,CAAC,CAAC;QAC5E,OAAO,IAAI,CAAC;KACb;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAbD,kDAaC;AAED,SAAgB,kBAAkB,CAChC,OAAe,EACf,WAAmB;IAEnB,eAAM,CAAC,KAAK,CAAC,qCAAqC,WAAW,GAAG,CAAC,CAAC;IAClE,MAAM,IAAI,GAAwB,EAAE,CAAC;IAErC,MAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACtD,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,IAAI,CAAC;KACb;IAED,KAAK,MAAM,UAAU,IAAI,IAAA,mBAAW,EAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE;QACjE,MAAM,GAAG,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChB;KACF;IAED,KAAK,MAAM,SAAS,IAAI,IAAA,mBAAW,EAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;QAC9D,MAAM,GAAG,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChB;KACF;IAED,KAAK,MAAM,EAAE,IAAI,EAAE,IAAI,IAAA,mBAAW,EAAC,GAAG,CAAC,MAAM,CAAC,EAAE;QAC9C,KAAK,MAAM,EAAE,KAAK,EAAE,IAAI,IAAA,mBAAW,EAAC,IAAI,CAAC,EAAE;YACzC,KAAK,MAAM,IAAI,IAAI,IAAA,mBAAW,EAAC,KAAK,CAAC,EAAE;gBACrC,MAAM,IAAI,GAAG,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnD,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;aACF;SACF;KACF;IAED,KAAK,MAAM,EAAE,KAAK,EAAE,IAAI,IAAA,mBAAW,EAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QAC7C,KAAK,MAAM,IAAI,IAAI,IAAA,mBAAW,EAAC,KAAK,CAAC,EAAE;YACrC,MAAM,IAAI,GAAG,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB;SACF;KACF;IAED,KAAK,MAAM,IAAI,IAAI,IAAA,mBAAW,EAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACzC,MAAM,IAAI,GAAG,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjB;KACF;IAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC;KACb;IACD,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC;AAzDD,gDAyDC","sourcesContent":["import { load } from 'js-yaml';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { regEx } from '../../../util/regex';\nimport { joinUrlParts } from '../../../util/url';\nimport { AzurePipelinesTasksDatasource } from '../../datasource/azure-pipelines-tasks';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { getDep } from '../dockerfile/extract';\nimport type { PackageDependency, PackageFileContent } from '../types';\nimport type { AzurePipelines, Container, Repository } from './types';\n\nconst AzurePipelinesTaskRegex = regEx(/^(?<name>[^@]+)@(?<version>.*)$/);\n\nexport function extractRepository(\n  repository: Repository\n): PackageDependency | null {\n  let repositoryUrl = null;\n\n  if (repository.type === 'github') {\n    repositoryUrl = `https://github.com/${repository.name}.git`;\n  } else if (repository.type === 'git') {\n    // \"git\" type indicates an AzureDevOps repository.\n    // The repository URL is only deducible if we are running on AzureDevOps (so can use the endpoint)\n    // and the name is of the form `Project/Repository`.\n    // The name could just be the repository name, in which case AzureDevOps defaults to the\n    // same project, which is not currently accessible here. It could be deduced later by exposing\n    // the repository URL to managers.\n    // https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/resources-repositories-repository?view=azure-pipelines#types\n    const platform = GlobalConfig.get('platform');\n    const endpoint = GlobalConfig.get('endpoint');\n    if (platform === 'azure' && endpoint) {\n      if (repository.name.includes('/')) {\n        const [projectName, repoName] = repository.name.split('/');\n        repositoryUrl = joinUrlParts(\n          endpoint,\n          encodeURIComponent(projectName),\n          '_git',\n          encodeURIComponent(repoName)\n        );\n      } else {\n        logger.debug(\n          'Renovate cannot update repositories that do not include the project name'\n        );\n      }\n    }\n  }\n\n  if (repositoryUrl === null) {\n    return null;\n  }\n\n  if (!repository.ref?.startsWith('refs/tags/')) {\n    return null;\n  }\n\n  return {\n    autoReplaceStringTemplate: 'refs/tags/{{newValue}}',\n    currentValue: repository.ref.replace('refs/tags/', ''),\n    datasource: GitTagsDatasource.id,\n    depName: repository.name,\n    depType: 'gitTags',\n    packageName: repositoryUrl,\n    replaceString: repository.ref,\n  };\n}\n\nexport function extractContainer(\n  container: Container\n): PackageDependency | null {\n  if (!container.image) {\n    return null;\n  }\n\n  const dep = getDep(container.image);\n  logger.debug(\n    {\n      depName: dep.depName,\n      currentValue: dep.currentValue,\n      currentDigest: dep.currentDigest,\n    },\n    'Azure pipelines docker image'\n  );\n  dep.depType = 'docker';\n\n  return dep;\n}\n\nexport function extractAzurePipelinesTasks(\n  task: string\n): PackageDependency | null {\n  const match = AzurePipelinesTaskRegex.exec(task);\n  if (match?.groups) {\n    return {\n      depName: match.groups.name,\n      currentValue: match.groups.version,\n      datasource: AzurePipelinesTasksDatasource.id,\n    };\n  }\n  return null;\n}\n\nexport function parseAzurePipelines(\n  content: string,\n  packageFile: string\n): AzurePipelines | null {\n  let pkg: AzurePipelines | null = null;\n  try {\n    pkg = load(content, { json: true }) as AzurePipelines;\n  } catch (err) /* istanbul ignore next */ {\n    logger.debug({ packageFile, err }, 'Error parsing azure-pipelines content');\n    return null;\n  }\n\n  return pkg;\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string\n): PackageFileContent | null {\n  logger.trace(`azurePipelines.extractPackageFile(${packageFile})`);\n  const deps: PackageDependency[] = [];\n\n  const pkg = parseAzurePipelines(content, packageFile);\n  if (!pkg) {\n    return null;\n  }\n\n  for (const repository of coerceArray(pkg.resources?.repositories)) {\n    const dep = extractRepository(repository);\n    if (dep) {\n      deps.push(dep);\n    }\n  }\n\n  for (const container of coerceArray(pkg.resources?.containers)) {\n    const dep = extractContainer(container);\n    if (dep) {\n      deps.push(dep);\n    }\n  }\n\n  for (const { jobs } of coerceArray(pkg.stages)) {\n    for (const { steps } of coerceArray(jobs)) {\n      for (const step of coerceArray(steps)) {\n        const task = extractAzurePipelinesTasks(step.task);\n        if (task) {\n          deps.push(task);\n        }\n      }\n    }\n  }\n\n  for (const { steps } of coerceArray(pkg.jobs)) {\n    for (const step of coerceArray(steps)) {\n      const task = extractAzurePipelinesTasks(step.task);\n      if (task) {\n        deps.push(task);\n      }\n    }\n  }\n\n  for (const step of coerceArray(pkg.steps)) {\n    const task = extractAzurePipelinesTasks(step.task);\n    if (task) {\n      deps.push(task);\n    }\n  }\n\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}