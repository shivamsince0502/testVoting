"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateHelmEnvs = exports.generateLoginCmd = void 0;
const tslib_1 = require("tslib");
const shlex_1 = require("shlex");
const upath_1 = tslib_1.__importDefault(require("upath"));
const fs_1 = require("../../../util/fs");
function generateLoginCmd(repositoryRule, loginCMD) {
    const { username, password } = repositoryRule.hostRule;
    if (username && password) {
        return `${loginCMD} --username ${(0, shlex_1.quote)(username)} --password ${(0, shlex_1.quote)(password)} ${repositoryRule.repository}`;
    }
    return null;
}
exports.generateLoginCmd = generateLoginCmd;
function generateHelmEnvs() {
    return {
        HELM_EXPERIMENTAL_OCI: '1',
        // set cache and config files to a path in privateCacheDir to prevent file and credential leakage
        HELM_REGISTRY_CONFIG: `${upath_1.default.join((0, fs_1.privateCacheDir)(), 'registry.json')}`,
        HELM_REPOSITORY_CONFIG: `${upath_1.default.join((0, fs_1.privateCacheDir)(), 'repositories.yaml')}`,
        HELM_REPOSITORY_CACHE: `${upath_1.default.join((0, fs_1.privateCacheDir)(), 'repositories')}`,
    };
}
exports.generateHelmEnvs = generateHelmEnvs;
//# sourceMappingURL=common.js.map