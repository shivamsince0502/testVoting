{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../lib/modules/manager/helmv3/common.ts"],"names":[],"mappings":";;;;AAAA,iCAA8B;AAC9B,0DAA0B;AAG1B,yCAAmD;AAGnD,SAAgB,gBAAgB,CAC9B,cAA8B,EAC9B,QAAgB;IAEhB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAC,QAAQ,CAAC;IACvD,IAAI,QAAQ,IAAI,QAAQ,EAAE;QACxB,OAAO,GAAG,QAAQ,eAAe,IAAA,aAAK,EAAC,QAAQ,CAAC,eAAe,IAAA,aAAK,EAClE,QAAQ,CACT,IAAI,cAAc,CAAC,UAAU,EAAE,CAAC;KAClC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAXD,4CAWC;AAED,SAAgB,gBAAgB;IAC9B,OAAO;QACL,qBAAqB,EAAE,GAAG;QAC1B,iGAAiG;QACjG,oBAAoB,EAAE,GAAG,eAAK,CAAC,IAAI,CAAC,IAAA,oBAAe,GAAE,EAAE,eAAe,CAAC,EAAE;QACzE,sBAAsB,EAAE,GAAG,eAAK,CAAC,IAAI,CACnC,IAAA,oBAAe,GAAE,EACjB,mBAAmB,CACpB,EAAE;QACH,qBAAqB,EAAE,GAAG,eAAK,CAAC,IAAI,CAAC,IAAA,oBAAe,GAAE,EAAE,cAAc,CAAC,EAAE;KAC1E,CAAC;AACJ,CAAC;AAXD,4CAWC","sourcesContent":["import { quote } from 'shlex';\nimport upath from 'upath';\n\nimport type { ExtraEnv } from '../../../util/exec/types';\nimport { privateCacheDir } from '../../../util/fs';\nimport type { RepositoryRule } from './types';\n\nexport function generateLoginCmd(\n  repositoryRule: RepositoryRule,\n  loginCMD: string\n): string | null {\n  const { username, password } = repositoryRule.hostRule;\n  if (username && password) {\n    return `${loginCMD} --username ${quote(username)} --password ${quote(\n      password\n    )} ${repositoryRule.repository}`;\n  }\n  return null;\n}\n\nexport function generateHelmEnvs(): ExtraEnv {\n  return {\n    HELM_EXPERIMENTAL_OCI: '1',\n    // set cache and config files to a path in privateCacheDir to prevent file and credential leakage\n    HELM_REGISTRY_CONFIG: `${upath.join(privateCacheDir(), 'registry.json')}`,\n    HELM_REPOSITORY_CONFIG: `${upath.join(\n      privateCacheDir(),\n      'repositories.yaml'\n    )}`,\n    HELM_REPOSITORY_CACHE: `${upath.join(privateCacheDir(), 'repositories')}`,\n  };\n}\n"]}