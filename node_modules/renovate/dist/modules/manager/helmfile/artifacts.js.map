{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/helmfile/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { coerceArray } from '../../../util/array';\nimport { exec } from '../../../util/exec';\nimport type { ToolConstraint } from '../../../util/exec/types';\nimport {\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { getFile } from '../../../util/git';\nimport { regEx } from '../../../util/regex';\nimport { generateHelmEnvs } from '../helmv3/common';\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\nimport {\n  generateRegistryLoginCmd,\n  isOCIRegistry,\n  parseDoc,\n  parseLock,\n} from './utils';\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.trace(`helmfile.updateArtifacts(${packageFileName})`);\n\n  const isLockFileMaintenance = config.updateType === 'lockFileMaintenance';\n  if (\n    !isLockFileMaintenance &&\n    (updatedDeps === undefined || updatedDeps.length < 1)\n  ) {\n    logger.debug('No updated helmfile deps - returning null');\n    return null;\n  }\n\n  const lockFileName = getSiblingFileName(packageFileName, 'helmfile.lock');\n  const existingLockFileContent = await getFile(lockFileName);\n\n  if (is.falsy(existingLockFileContent)) {\n    logger.debug('No helmfile.lock found');\n    return null;\n  }\n\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n\n    const toolConstraints: ToolConstraint[] = [\n      {\n        toolName: 'helm',\n        constraint: config.constraints?.helm,\n      },\n      {\n        toolName: 'helmfile',\n        constraint:\n          config.constraints?.helmfile ??\n          parseLock(existingLockFileContent).version,\n      },\n    ];\n    const needKustomize = updatedDeps.some(\n      (dep) => dep.managerData?.needKustomize\n    );\n    if (needKustomize) {\n      toolConstraints.push({\n        toolName: 'kustomize',\n        constraint: config.constraints?.kustomize,\n      });\n    }\n\n    const cmd: string[] = [];\n    const doc = parseDoc(newPackageFileContent);\n\n    for (const value of coerceArray(doc.repositories).filter(isOCIRegistry)) {\n      const loginCmd = generateRegistryLoginCmd(\n        value.name,\n        `https://${value.url}`,\n        // this extracts the hostname from url like format ghcr.ip/helm-charts\n        value.url.replace(regEx(/\\/.*/), '')\n      );\n\n      if (loginCmd) {\n        cmd.push(loginCmd);\n      }\n    }\n\n    cmd.push(`helmfile deps -f ${quote(packageFileName)}`);\n    await exec(cmd, {\n      docker: {},\n      extraEnv: generateHelmEnvs(),\n      toolConstraints,\n    });\n\n    const newHelmLockContent = await readLocalFile(lockFileName, 'utf8');\n    if (existingLockFileContent === newHelmLockContent) {\n      logger.debug('helmfile.lock is unchanged');\n      return null;\n    }\n\n    return [\n      {\n        file: {\n          type: 'addition',\n          path: lockFileName,\n          contents: newHelmLockContent,\n        },\n      },\n    ];\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug({ err }, 'Failed to update Helmfile lock file');\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}