{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/modules/manager/composer/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: types (#7154)\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { quote } from 'shlex';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport type { HostRuleSearchResult } from '../../../types';\nimport type { ToolConstraint } from '../../../util/exec/types';\nimport { api, id as composerVersioningId } from '../../versioning/composer';\nimport type { UpdateArtifactsConfig } from '../types';\nimport type { Lockfile, PackageFile } from './schema';\n\nexport { composerVersioningId };\n\nconst depRequireInstall = new Set(['symfony/flex']);\n\nexport function getComposerArguments(\n  config: UpdateArtifactsConfig,\n  toolConstraint: ToolConstraint\n): string {\n  let args = '';\n\n  if (config.composerIgnorePlatformReqs) {\n    if (config.composerIgnorePlatformReqs.length === 0) {\n      // TODO: toolConstraint.constraint can be null or undefined? (#7154)\n      const major = api.getMajor(toolConstraint.constraint!);\n      const minor = api.getMinor(toolConstraint.constraint!);\n      args += api.matches(`${major}.${minor}`, '^2.2')\n        ? \" --ignore-platform-req='ext-*' --ignore-platform-req='lib-*'\"\n        : ' --ignore-platform-reqs';\n    } else {\n      config.composerIgnorePlatformReqs.forEach((req) => {\n        args += ' --ignore-platform-req ' + quote(req);\n      });\n    }\n  }\n\n  args += ' --no-ansi --no-interaction';\n  if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n    args += ' --no-scripts --no-autoloader';\n  }\n\n  if (!GlobalConfig.get('allowPlugins') || config.ignorePlugins) {\n    args += ' --no-plugins';\n  }\n\n  return args;\n}\n\nexport function getPhpConstraint(\n  constraints: Record<string, string>\n): string | null {\n  const { php } = constraints;\n\n  if (php) {\n    logger.debug('Using php constraint from config');\n    return php;\n  }\n\n  return null;\n}\n\nexport function requireComposerDependencyInstallation({\n  packages,\n  packagesDev,\n}: Lockfile): boolean {\n  return (\n    packages.some((p) => depRequireInstall.has(p.name)) === true ||\n    packagesDev.some((p) => depRequireInstall.has(p.name)) === true\n  );\n}\n\nexport function extractConstraints(\n  { config, require, requireDev }: PackageFile,\n  { pluginApiVersion }: Lockfile\n): Record<string, string> {\n  const res: Record<string, string> = { composer: '1.*' };\n\n  // extract php\n  const phpVersion = config?.platform.php;\n  if (phpVersion) {\n    const major = api.getMajor(phpVersion);\n    const minor = api.getMinor(phpVersion) ?? 0;\n    const patch = api.getPatch(phpVersion) ?? 0;\n    res.php = `<=${major}.${minor}.${patch}`;\n  } else if (require.php) {\n    res.php = require.php;\n  }\n\n  // extract direct composer dependency\n  if (require['composer/composer']) {\n    res.composer = require['composer/composer'];\n  } else if (requireDev['composer/composer']) {\n    res.composer = requireDev['composer/composer'];\n  }\n  // composer platform package\n  else if (require['composer']) {\n    res.composer = require['composer'];\n  } else if (requireDev['composer']) {\n    res.composer = requireDev['composer'];\n  }\n  // check last used composer version\n  else if (pluginApiVersion) {\n    const major = api.getMajor(pluginApiVersion);\n    const minor = api.getMinor(pluginApiVersion);\n    res.composer = `^${major}.${minor}`;\n  }\n  // check composer api dependency\n  else if (require['composer-runtime-api']) {\n    const major = api.getMajor(require['composer-runtime-api']);\n    const minor = api.getMinor(require['composer-runtime-api']);\n    res.composer = `^${major}.${minor}`;\n  }\n  return res;\n}\n\nexport function findGithubToken(\n  searchResult: HostRuleSearchResult\n): string | undefined {\n  return searchResult?.token?.replace('x-access-token:', '');\n}\n\nexport function isGithubPersonalAccessToken(token: string): boolean {\n  return token.startsWith('ghp_');\n}\n\nexport function isGithubServerToServerToken(token: string): boolean {\n  return token.startsWith('ghs_');\n}\n\nexport function isGithubFineGrainedPersonalAccessToken(token: string): boolean {\n  return token.startsWith('github_pat_');\n}\n\nexport function takePersonalAccessTokenIfPossible(\n  githubToken: string | undefined,\n  gitTagsGithubToken: string | undefined\n): string | undefined {\n  if (gitTagsGithubToken && isGithubPersonalAccessToken(gitTagsGithubToken)) {\n    logger.debug('Using GitHub Personal Access Token (git-tags)');\n    return gitTagsGithubToken;\n  }\n\n  if (githubToken && isGithubPersonalAccessToken(githubToken)) {\n    logger.debug('Using GitHub Personal Access Token');\n    return githubToken;\n  }\n\n  if (\n    gitTagsGithubToken &&\n    isGithubFineGrainedPersonalAccessToken(gitTagsGithubToken)\n  ) {\n    logger.debug('Using GitHub Fine-grained Personal Access Token (git-tags)');\n    return gitTagsGithubToken;\n  }\n\n  if (githubToken && isGithubFineGrainedPersonalAccessToken(githubToken)) {\n    logger.debug('Using GitHub Fine-grained Personal Access Token');\n    return githubToken;\n  }\n\n  if (gitTagsGithubToken) {\n    if (isGithubServerToServerToken(gitTagsGithubToken)) {\n      logger.debug('Using GitHub Server-to-Server token (git-tags)');\n    } else {\n      logger.debug('Using unknown GitHub token type (git-tags)');\n    }\n    return gitTagsGithubToken;\n  }\n\n  if (githubToken) {\n    if (isGithubServerToServerToken(githubToken)) {\n      logger.debug('Using GitHub Server-to-Server token');\n    } else {\n      logger.debug('Using unknown GitHub token type');\n    }\n  }\n\n  return githubToken;\n}\n\nexport function isArtifactAuthEnabled(rule: HostRuleSearchResult): boolean {\n  return !rule.artifactAuth || rule.artifactAuth.includes('composer');\n}\n"]}