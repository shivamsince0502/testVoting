{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/composer/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport { z } from 'zod';\nimport {\n  SYSTEM_INSUFFICIENT_DISK_SPACE,\n  TEMPORARY_ERROR,\n} from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions, ToolConstraint } from '../../../util/exec/types';\nimport {\n  ensureCacheDir,\n  ensureLocalDir,\n  getSiblingFileName,\n  localPathExists,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { getRepoStatus } from '../../../util/git';\nimport * as hostRules from '../../../util/host-rules';\nimport { regEx } from '../../../util/regex';\nimport { Json } from '../../../util/schema-utils';\nimport { GitTagsDatasource } from '../../datasource/git-tags';\nimport { PackagistDatasource } from '../../datasource/packagist';\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\nimport { Lockfile, PackageFile } from './schema';\nimport type { AuthJson } from './types';\nimport {\n  extractConstraints,\n  findGithubToken,\n  getComposerArguments,\n  getPhpConstraint,\n  isArtifactAuthEnabled,\n  requireComposerDependencyInstallation,\n  takePersonalAccessTokenIfPossible,\n} from './utils';\n\nfunction getAuthJson(): string | null {\n  const authJson: AuthJson = {};\n\n  const githubHostRule = hostRules.find({\n    hostType: 'github',\n    url: 'https://api.github.com/',\n  });\n\n  const gitTagsHostRule = hostRules.find({\n    hostType: GitTagsDatasource.id,\n    url: 'https://github.com',\n  });\n\n  const selectedGithubToken = takePersonalAccessTokenIfPossible(\n    isArtifactAuthEnabled(githubHostRule)\n      ? findGithubToken(githubHostRule)\n      : undefined,\n    isArtifactAuthEnabled(gitTagsHostRule)\n      ? findGithubToken(gitTagsHostRule)\n      : undefined\n  );\n\n  if (selectedGithubToken) {\n    authJson['github-oauth'] = {\n      'github.com': selectedGithubToken,\n    };\n  }\n\n  for (const gitlabHostRule of hostRules.findAll({ hostType: 'gitlab' })) {\n    if (!isArtifactAuthEnabled(gitlabHostRule)) {\n      continue;\n    }\n\n    if (gitlabHostRule?.token) {\n      const host = gitlabHostRule.resolvedHost ?? 'gitlab.com';\n      authJson['gitlab-token'] = authJson['gitlab-token'] ?? {};\n      authJson['gitlab-token'][host] = gitlabHostRule.token;\n      // https://getcomposer.org/doc/articles/authentication-for-private-packages.md#gitlab-token\n      authJson['gitlab-domains'] = [\n        host,\n        ...(authJson['gitlab-domains'] ?? []),\n      ];\n    }\n  }\n\n  for (const packagistHostRule of hostRules.findAll({\n    hostType: PackagistDatasource.id,\n  })) {\n    if (!isArtifactAuthEnabled(packagistHostRule)) {\n      continue;\n    }\n\n    const { resolvedHost, username, password, token } = packagistHostRule;\n    if (resolvedHost && username && password) {\n      authJson['http-basic'] = authJson['http-basic'] ?? {};\n      authJson['http-basic'][resolvedHost] = { username, password };\n    } else if (resolvedHost && token) {\n      authJson.bearer = authJson.bearer ?? {};\n      authJson.bearer[resolvedHost] = token;\n    }\n  }\n\n  return is.emptyObject(authJson) ? null : JSON.stringify(authJson);\n}\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`composer.updateArtifacts(${packageFileName})`);\n\n  const file = Json.pipe(PackageFile).parse(newPackageFileContent);\n\n  const lockFileName = packageFileName.replace(regEx(/\\.json$/), '.lock');\n  const lockfile = await z\n    .string()\n    .transform((f) => readLocalFile(f, 'utf8'))\n    .pipe(Json)\n    .pipe(Lockfile)\n    .nullable()\n    .catch(null)\n    .parseAsync(lockFileName);\n  if (!lockfile) {\n    logger.debug('Composer: unable to read lockfile');\n    return null;\n  }\n\n  const vendorDir = getSiblingFileName(packageFileName, 'vendor');\n  const commitVendorFiles = await localPathExists(vendorDir);\n  await ensureLocalDir(vendorDir);\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n\n    const constraints = {\n      ...extractConstraints(file, lockfile),\n      ...config.constraints,\n    };\n\n    const composerToolConstraint: ToolConstraint = {\n      toolName: 'composer',\n      constraint: constraints.composer,\n    };\n\n    const phpToolConstraint: ToolConstraint = {\n      toolName: 'php',\n      constraint: getPhpConstraint(constraints),\n    };\n\n    const execOptions: ExecOptions = {\n      cwdFile: packageFileName,\n      extraEnv: {\n        COMPOSER_CACHE_DIR: await ensureCacheDir('composer'),\n        COMPOSER_AUTH: getAuthJson(),\n      },\n      toolConstraints: [phpToolConstraint, composerToolConstraint],\n      docker: {},\n    };\n\n    const commands: string[] = [];\n\n    // Determine whether install is required before update\n    if (requireComposerDependencyInstallation(lockfile)) {\n      const preCmd = 'composer';\n      const preArgs =\n        'install' + getComposerArguments(config, composerToolConstraint);\n      logger.trace({ preCmd, preArgs }, 'composer pre-update command');\n      commands.push('git stash -- composer.json');\n      commands.push(`${preCmd} ${preArgs}`);\n      commands.push('git stash pop || true');\n    }\n\n    const cmd = 'composer';\n    let args: string;\n    if (config.isLockFileMaintenance) {\n      args = 'update';\n    } else {\n      args =\n        (\n          'update ' +\n          updatedDeps\n            .map((dep) => dep.depName)\n            .filter(is.string)\n            .map((dep) => quote(dep))\n            .join(' ')\n        ).trim() + ' --with-dependencies';\n    }\n    args += getComposerArguments(config, composerToolConstraint);\n    logger.trace({ cmd, args }, 'composer command');\n    commands.push(`${cmd} ${args}`);\n\n    await exec(commands, execOptions);\n    const status = await getRepoStatus();\n    if (!status.modified.includes(lockFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated composer.lock');\n    const res: UpdateArtifactsResult[] = [\n      {\n        file: {\n          type: 'addition',\n          path: lockFileName,\n          contents: await readLocalFile(lockFileName),\n        },\n      },\n    ];\n\n    if (!commitVendorFiles) {\n      return res;\n    }\n\n    logger.debug(`Committing vendor files in ${vendorDir}`);\n    for (const f of [...status.modified, ...status.not_added]) {\n      if (f.startsWith(vendorDir)) {\n        res.push({\n          file: {\n            type: 'addition',\n            path: f,\n            contents: await readLocalFile(f),\n          },\n        });\n      }\n    }\n    for (const f of status.deleted) {\n      res.push({\n        file: {\n          type: 'deletion',\n          path: f,\n        },\n      });\n    }\n\n    return res;\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    if (\n      err.message?.includes(\n        'Your requirements could not be resolved to an installable set of packages.'\n      )\n    ) {\n      logger.info('Composer requirements cannot be resolved');\n    } else if (err.message?.includes('write error (disk full?)')) {\n      throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n    } else {\n      logger.debug({ err }, 'Failed to generate composer.lock');\n    }\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}