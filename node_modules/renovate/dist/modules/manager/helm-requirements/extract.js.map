{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/helm-requirements/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { load } from 'js-yaml';\nimport { logger } from '../../../logger';\nimport { HelmDatasource } from '../../datasource/helm';\nimport type {\n  ExtractConfig,\n  PackageDependency,\n  PackageFileContent,\n} from '../types';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: ExtractConfig\n): PackageFileContent | null {\n  let deps = [];\n  // TODO: fix type\n  let doc: any;\n  try {\n    doc = load(content, { json: true }); // TODO #9610\n  } catch (err) {\n    logger.debug({ packageFile }, `Failed to parse helm requirements.yaml`);\n    return null;\n  }\n  if (!(doc && is.array(doc.dependencies))) {\n    logger.debug({ packageFile }, `requirements.yaml has no dependencies`);\n    return null;\n  }\n  deps = doc.dependencies.map((dep: Record<string, any>) => {\n    let currentValue: string | undefined; // Remove when #9610 has been implemented\n    switch (typeof dep.version) {\n      case 'number':\n        currentValue = String(dep.version);\n        break;\n      case 'string':\n        currentValue = dep.version;\n    }\n\n    const res: PackageDependency = {\n      depName: dep.name,\n      currentValue,\n    };\n\n    if (!res.depName) {\n      res.skipReason = 'invalid-name';\n      return res;\n    }\n\n    if (!res.currentValue) {\n      res.skipReason = 'invalid-version';\n      return res;\n    }\n\n    if (!dep.repository) {\n      res.skipReason = 'no-repository';\n      return res;\n    }\n\n    res.registryUrls = [dep.repository];\n    if (dep.repository.startsWith('@') || dep.repository.startsWith('alias:')) {\n      const repoWithPrefixRemoved = dep.repository.slice(\n        dep.repository[0] === '@' ? 1 : 6\n      );\n      const alias = config.registryAliases?.[repoWithPrefixRemoved];\n      if (alias) {\n        res.registryUrls = [alias];\n        return res;\n      }\n\n      res.skipReason = 'placeholder-url';\n    } else {\n      try {\n        const url = new URL(dep.repository);\n        if (url.protocol === 'file:') {\n          res.skipReason = 'local-dependency';\n        }\n      } catch (err) {\n        logger.debug(\n          { err, packageFile, url: dep.repository },\n          'Error parsing url'\n        );\n        res.skipReason = 'invalid-url';\n      }\n    }\n    return res;\n  });\n  const res = {\n    deps,\n    datasource: HelmDatasource.id,\n  };\n  return res;\n}\n"]}