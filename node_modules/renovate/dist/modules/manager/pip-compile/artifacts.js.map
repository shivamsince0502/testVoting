{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pip-compile/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { quote, split } from 'shlex';\nimport upath from 'upath';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions } from '../../../util/exec/types';\nimport {\n  deleteLocalFile,\n  ensureCacheDir,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { getRepoStatus } from '../../../util/git';\nimport { regEx } from '../../../util/regex';\nimport type {\n  UpdateArtifact,\n  UpdateArtifactsConfig,\n  UpdateArtifactsResult,\n} from '../types';\n\nfunction getPythonConstraint(\n  config: UpdateArtifactsConfig\n): string | undefined | null {\n  const { constraints = {} } = config;\n  const { python } = constraints;\n\n  if (python) {\n    logger.debug('Using python constraint from config');\n    return python;\n  }\n\n  return undefined;\n}\n\nfunction getPipToolsConstraint(config: UpdateArtifactsConfig): string {\n  const { constraints = {} } = config;\n  const { pipTools } = constraints;\n\n  if (is.string(pipTools)) {\n    logger.debug('Using pipTools constraint from config');\n    return pipTools;\n  }\n\n  return '';\n}\n\nconst constraintLineRegex = regEx(\n  /^(#.*?\\r?\\n)+# {4}pip-compile(?<arguments>.*?)\\r?\\n/\n);\nconst allowedPipArguments = [\n  '--allow-unsafe',\n  '--generate-hashes',\n  '--no-emit-index-url',\n  '--strip-extras',\n];\n\nexport function constructPipCompileCmd(\n  content: string,\n  inputFileName: string,\n  outputFileName: string\n): string {\n  const headers = constraintLineRegex.exec(content);\n  const args = ['pip-compile'];\n  if (headers?.groups) {\n    logger.debug(`Found pip-compile header: ${headers[0]}`);\n    for (const argument of split(headers.groups.arguments)) {\n      if (allowedPipArguments.includes(argument)) {\n        args.push(argument);\n      } else if (argument.startsWith('--output-file=')) {\n        const file = upath.parse(outputFileName).base;\n        if (argument !== `--output-file=${file}`) {\n          // we don't trust the user-supplied output-file argument; use our value here\n          logger.warn(\n            { argument },\n            'pip-compile was previously executed with an unexpected `--output-file` filename'\n          );\n        }\n        args.push(`--output-file=${file}`);\n      } else if (argument.startsWith('--resolver=')) {\n        const value = extractResolver(argument);\n        if (value) {\n          args.push(`--resolver=${value}`);\n        }\n      } else if (argument.startsWith('--')) {\n        logger.trace(\n          { argument },\n          'pip-compile argument is not (yet) supported'\n        );\n      } else {\n        // ignore position argument (.in file)\n      }\n    }\n  }\n  args.push(upath.parse(inputFileName).base);\n\n  return args.map((argument) => quote(argument)).join(' ');\n}\n\nexport async function updateArtifacts({\n  packageFileName: inputFileName,\n  newPackageFileContent: newInputContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  const outputFileName = inputFileName.replace(regEx(/(\\.in)?$/), '.txt');\n  logger.debug(\n    `pipCompile.updateArtifacts(${inputFileName}->${outputFileName})`\n  );\n  const existingOutput = await readLocalFile(outputFileName, 'utf8');\n  if (!existingOutput) {\n    logger.debug('No pip-compile output file found');\n    return null;\n  }\n  try {\n    await writeLocalFile(inputFileName, newInputContent);\n    if (config.isLockFileMaintenance) {\n      await deleteLocalFile(outputFileName);\n    }\n    const cmd = constructPipCompileCmd(\n      existingOutput,\n      inputFileName,\n      outputFileName\n    );\n    const constraint = getPythonConstraint(config);\n    const pipToolsConstraint = getPipToolsConstraint(config);\n    const execOptions: ExecOptions = {\n      cwdFile: inputFileName,\n      docker: {},\n      toolConstraints: [\n        {\n          toolName: 'python',\n          constraint,\n        },\n        {\n          toolName: 'pip-tools',\n          constraint: pipToolsConstraint,\n        },\n      ],\n      extraEnv: {\n        PIP_CACHE_DIR: await ensureCacheDir('pip'),\n      },\n    };\n    logger.trace({ cmd }, 'pip-compile command');\n    await exec(cmd, execOptions);\n    const status = await getRepoStatus();\n    if (!status?.modified.includes(outputFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated pip-compile result');\n    return [\n      {\n        file: {\n          type: 'addition',\n          path: outputFileName,\n          contents: await readLocalFile(outputFileName, 'utf8'),\n        },\n      },\n    ];\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug({ err }, 'Failed to pip-compile');\n    return [\n      {\n        artifactError: {\n          lockFile: outputFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n\nexport function extractResolver(argument: string): string | null {\n  const value = argument.replace('--resolver=', '');\n  if (['backtracking', 'legacy'].includes(value)) {\n    return value;\n  }\n\n  logger.warn(\n    { argument },\n    'pip-compile was previously executed with an unexpected `--resolver` value'\n  );\n  return null;\n}\n"]}