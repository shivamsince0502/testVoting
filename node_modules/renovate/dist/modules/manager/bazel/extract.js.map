{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../../lib/modules/manager/bazel/extract.ts"],"names":[],"mappings":";;;AACA,qCAAiC;AACjC,mCAAkD;AAGlD,SAAgB,kBAAkB,CAChC,OAAe,EACf,WAAmB;IAEnB,MAAM,IAAI,GAAwB,EAAE,CAAC;IAErC,MAAM,SAAS,GAA4B,IAAA,cAAK,EAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACvE,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,IAAI,CAAC;KACb;IAED,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE;QAClD,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAChC,KAAK,MAAM,GAAG,IAAI,IAAA,+BAAuB,EAAC,QAAQ,CAAC,EAAE;YACnD,GAAG,CAAC,WAAW,GAAG,EAAE,GAAG,EAAE,CAAC;YAE1B,+CAA+C;YAC/C,gDAAgD;YAChD,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,IACE,aAAa,CAAC,UAAU,CAAC,gBAAgB,CAAC;gBAC1C,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC;gBACpC,aAAa,CAAC,UAAU,CAAC,gBAAgB,CAAC;gBAC1C,aAAa,CAAC,UAAU,CAAC,eAAe,CAAC,EACzC;gBACA,IAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,aAAa,EAAE;oBACzC,GAAG,CAAC,aAAa,GAAG,aAAa,CAAC;iBACnC;aACF;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChB;KACF;IAED,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACvC,CAAC;AAnCD,gDAmCC","sourcesContent":["import type { PackageDependency, PackageFileContent } from '../types';\nimport { parse } from './parser';\nimport { extractDepsFromFragment } from './rules';\nimport type { RecordFragment } from './types';\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string\n): PackageFileContent | null {\n  const deps: PackageDependency[] = [];\n\n  const fragments: RecordFragment[] | null = parse(content, packageFile);\n  if (!fragments) {\n    return null;\n  }\n\n  for (let idx = 0; idx < fragments.length; idx += 1) {\n    const fragment = fragments[idx];\n    for (const dep of extractDepsFromFragment(fragment)) {\n      dep.managerData = { idx };\n\n      // Selectively provide `replaceString` in order\n      // to auto-replace functionality work correctly.\n      const replaceString = fragment.value;\n      if (\n        replaceString.startsWith('container_pull') ||\n        replaceString.startsWith('oci_pull') ||\n        replaceString.startsWith('git_repository') ||\n        replaceString.startsWith('go_repository')\n      ) {\n        if (dep.currentValue && dep.currentDigest) {\n          dep.replaceString = replaceString;\n        }\n      }\n\n      deps.push(dep);\n    }\n  }\n\n  return deps.length ? { deps } : null;\n}\n"]}