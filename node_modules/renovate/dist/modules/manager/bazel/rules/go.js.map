{"version":3,"file":"go.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/bazel/rules/go.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AACxB,kDAA+C;AAC/C,+CAAsD;AAGzC,QAAA,OAAO,GAAG,CAAC,eAAe,CAAU,CAAC;AAErC,QAAA,QAAQ,GAAG,OAAC;KACtB,MAAM,CAAC;IACN,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,eAAO,CAAC;IACrB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC1B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE;IACtB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC;KACD,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC;KAC9C,SAAS,CACR,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,EAAuB,EAAE;IACvE,MAAM,GAAG,GAAsB;QAC7B,UAAU,EAAE,iBAAY,CAAC,EAAE;QAC3B,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,UAAU;KACxB,CAAC;IAEF,IAAI,GAAG,EAAE;QACP,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC;KACxB;IAED,IAAI,MAAM,EAAE;QACV,GAAG,CAAC,aAAa,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,GAAG,EAAE;YACR,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B;KACF;IAED,IAAI,MAAM,EAAE;QACV,MAAM,WAAW,GAAG,IAAA,aAAK,EACvB,6DAA6D,CAC9D,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACf,IAAI,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;YAC1D,GAAG,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SAClD;aAAM;YACL,GAAG,CAAC,UAAU,GAAG,oBAAoB,CAAC;SACvC;KACF;IAED,OAAO,CAAC,GAAG,CAAC,CAAC;AACf,CAAC,CACF,CAAC","sourcesContent":["import { z } from 'zod';\nimport { regEx } from '../../../../util/regex';\nimport { GoDatasource } from '../../../datasource/go';\nimport type { PackageDependency } from '../../types';\n\nexport const goRules = ['go_repository'] as const;\n\nexport const GoTarget = z\n  .object({\n    rule: z.enum(goRules),\n    name: z.string(),\n    tag: z.string().optional(),\n    commit: z.string().optional(),\n    importpath: z.string(),\n    remote: z.string().optional(),\n  })\n  .refine(({ tag, commit }) => !!tag || !!commit)\n  .transform(\n    ({ rule, name, tag, commit, importpath, remote }): PackageDependency[] => {\n      const dep: PackageDependency = {\n        datasource: GoDatasource.id,\n        depType: rule,\n        depName: name,\n        packageName: importpath,\n      };\n\n      if (tag) {\n        dep.currentValue = tag;\n      }\n\n      if (commit) {\n        dep.currentDigest = commit;\n        if (!tag) {\n          dep.digestOneAndOnly = true;\n        }\n      }\n\n      if (remote) {\n        const remoteMatch = regEx(\n          /https:\\/\\/github\\.com(?:.*\\/)(([a-zA-Z]+)([-])?([a-zA-Z]+))/\n        ).exec(remote);\n        if (remoteMatch && remoteMatch[0].length === remote.length) {\n          dep.packageName = remote.replace('https://', '');\n        } else {\n          dep.skipReason = 'unsupported-remote';\n        }\n      }\n\n      return [dep];\n    }\n  );\n"]}