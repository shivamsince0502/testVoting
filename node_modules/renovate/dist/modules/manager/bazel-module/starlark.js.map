{"version":3,"file":"starlark.js","sourceRoot":"","sources":["../../../../lib/modules/manager/bazel-module/starlark.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,MAAM,aAAa,GAAiC,IAAI,GAAG,CAAkB;IAC3E,CAAC,MAAM,EAAE,IAAI,CAAC;IACd,CAAC,OAAO,EAAE,KAAK,CAAC;CACjB,CAAC,CAAC;AAEU,QAAA,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;AAEpE,SAAgB,SAAS,CAAC,KAAa;IACrC,MAAM,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxC,IAAI,YAAE,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACtB,OAAO,MAAM,CAAC;KACf;IACD,MAAM,IAAI,KAAK,CAAC,oCAAoC,KAAK,EAAE,CAAC,CAAC;AAC/D,CAAC;AAND,8BAMC","sourcesContent":["import is from '@sindresorhus/is';\n\nconst stringMapping: ReadonlyMap<string, boolean> = new Map<string, boolean>([\n  ['True', true],\n  ['False', false],\n]);\n\nexport const booleanStringValues = Array.from(stringMapping.keys());\n\nexport function asBoolean(value: string): boolean {\n  const result = stringMapping.get(value);\n  if (is.boolean(result)) {\n    return result;\n  }\n  throw new Error(`Invalid Starlark boolean string: ${value}`);\n}\n"]}