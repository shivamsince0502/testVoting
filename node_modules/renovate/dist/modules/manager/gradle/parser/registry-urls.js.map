{"version":3,"file":"registry-urls.js","sourceRoot":"","sources":["../../../../../lib/modules/manager/gradle/parser/registry-urls.ts"],"names":[],"mappings":"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","sourcesContent":["import { query as q } from 'good-enough-parser';\nimport { regEx } from '../../../../util/regex';\nimport type { Ctx } from '../types';\nimport { qApplyFrom } from './apply-from';\nimport { qAssignments } from './assignments';\nimport {\n  REGISTRY_URLS,\n  cleanupTempVars,\n  qValueMatcher,\n  storeInTokenMap,\n  storeVarToken,\n} from './common';\nimport {\n  handleCustomRegistryUrl,\n  handlePredefinedRegistryUrl,\n} from './handlers';\nimport { qPlugins } from './plugins';\n\n// uri(\"https://foo.bar/baz\")\n// \"https://foo.bar/baz\"\nconst qUri = q\n  .alt(\n    q.sym<Ctx>('uri').tree({\n      maxDepth: 1,\n      search: qValueMatcher,\n    }),\n    qValueMatcher\n  )\n  .handler((ctx) => storeInTokenMap(ctx, 'registryUrl'));\n\n// mavenCentral()\n// mavenCentral { ... }\nconst qPredefinedRegistries = q\n  .sym(regEx(`^(?:${Object.keys(REGISTRY_URLS).join('|')})$`), storeVarToken)\n  .alt(\n    q.tree({\n      type: 'wrapped-tree',\n      startsWith: '(',\n      endsWith: ')',\n      search: q.begin<Ctx>().end(),\n    }),\n    q.tree({\n      type: 'wrapped-tree',\n      startsWith: '{',\n      endsWith: '}',\n    })\n  )\n  .handler((ctx) => storeInTokenMap(ctx, 'registryUrl'))\n  .handler(handlePredefinedRegistryUrl)\n  .handler(cleanupTempVars);\n\n// maven(url = uri(\"https://foo.bar/baz\"))\n// maven { name = some; url = \"https://foo.bar/${name}\" }\nconst qCustomRegistryUrl = q\n  .sym<Ctx>('maven')\n  .alt(\n    q.tree<Ctx>({\n      type: 'wrapped-tree',\n      maxDepth: 1,\n      startsWith: '(',\n      endsWith: ')',\n      search: q.begin<Ctx>().opt(q.sym<Ctx>('url').op('=')).join(qUri).end(),\n    }),\n    q.tree({\n      type: 'wrapped-tree',\n      maxDepth: 1,\n      startsWith: '{',\n      endsWith: '}',\n      search: q.alt(\n        q\n          .sym<Ctx>('name')\n          .opt(q.op('='))\n          .join(qValueMatcher)\n          .handler((ctx) => storeInTokenMap(ctx, 'name')),\n        q.sym<Ctx>('url').opt(q.op('=')).join(qUri),\n        q.sym<Ctx>('setUrl').tree({\n          maxDepth: 1,\n          startsWith: '(',\n          endsWith: ')',\n          search: q.begin<Ctx>().join(qUri).end(),\n        })\n      ),\n    })\n  )\n  .handler(handleCustomRegistryUrl)\n  .handler(cleanupTempVars);\n\nconst qPluginManagement = q.sym<Ctx>('pluginManagement', storeVarToken).tree({\n  type: 'wrapped-tree',\n  startsWith: '{',\n  endsWith: '}',\n  preHandler: (ctx) => {\n    ctx.tmpTokenStore.registryScope = ctx.varTokens;\n    ctx.varTokens = [];\n    return ctx;\n  },\n  search: q\n    .handler<Ctx>((ctx) => {\n      if (ctx.tmpTokenStore.registryScope) {\n        ctx.tokenMap.registryScope = ctx.tmpTokenStore.registryScope;\n      }\n      return ctx;\n    })\n    .alt(\n      qAssignments,\n      qApplyFrom,\n      qPlugins,\n      qPredefinedRegistries,\n      qCustomRegistryUrl\n    ),\n  postHandler: (ctx) => {\n    delete ctx.tmpTokenStore.registryScope;\n    return ctx;\n  },\n});\n\nexport const qRegistryUrls = q.alt<Ctx>(\n  q.sym<Ctx>('publishing').tree(),\n  qPluginManagement,\n  qPredefinedRegistries,\n  qCustomRegistryUrl\n);\n"]}