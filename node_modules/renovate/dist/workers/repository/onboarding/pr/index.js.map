{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/onboarding/pr/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { GlobalConfig } from '../../../../config/global';\nimport type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport type { PackageFile } from '../../../../modules/manager/types';\nimport { platform } from '../../../../modules/platform';\nimport { ensureComment } from '../../../../modules/platform/comment';\nimport { hashBody } from '../../../../modules/platform/pr-body';\nimport { scm } from '../../../../modules/platform/scm';\nimport { emojify } from '../../../../util/emoji';\nimport { getFile } from '../../../../util/git';\nimport { toSha256 } from '../../../../util/hasha';\nimport * as template from '../../../../util/template';\nimport type { BranchConfig } from '../../../types';\nimport {\n  getDepWarningsOnboardingPR,\n  getErrors,\n  getWarnings,\n} from '../../errors-warnings';\nimport { getPlatformPrOptions } from '../../update/pr';\nimport { prepareLabels } from '../../update/pr/labels';\nimport { addParticipants } from '../../update/pr/participants';\nimport { isOnboardingBranchConflicted } from '../branch/onboarding-branch-cache';\nimport { OnboardingState, defaultConfigFile } from '../common';\nimport { getBaseBranchDesc } from './base-branch';\nimport { getConfigDesc } from './config-description';\nimport { getPrList } from './pr-list';\n\nexport async function ensureOnboardingPr(\n  config: RenovateConfig,\n  packageFiles: Record<string, PackageFile[]> | null,\n  branches: BranchConfig[]\n): Promise<void> {\n  if (\n    config.repoIsOnboarded ||\n    OnboardingState.onboardingCacheValid ||\n    (config.onboardingRebaseCheckbox && !OnboardingState.prUpdateRequested)\n  ) {\n    return;\n  }\n  logger.debug('ensureOnboardingPr()');\n  logger.trace({ config });\n  // TODO #7154\n  const existingPr = await platform.getBranchPr(config.onboardingBranch!);\n  if (existingPr) {\n    // skip pr-update if branch is conflicted\n    if (\n      await isOnboardingBranchConflicted(\n        config.defaultBranch!,\n        config.onboardingBranch!\n      )\n    ) {\n      await ensureComment({\n        number: existingPr.number,\n        topic: 'Branch Conflicted',\n        content: emojify(\n          `:warning: This PR has a merge conflict which Renovate is unable to automatically resolve, so updates to this PR description are now paused. Please resolve the merge conflict manually.\\n\\n`\n        ),\n      });\n      return;\n    }\n  }\n  const { rebaseCheckBox, renovateConfigHashComment } =\n    await getRebaseCheckboxComponents(config);\n  logger.debug('Filling in onboarding PR template');\n  let prTemplate = `Welcome to [Renovate](${\n    config.productLinks!.homepage\n  })! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.\\n\\n`;\n  prTemplate +=\n    config.requireConfig === 'required'\n      ? emojify(\n          `:vertical_traffic_light: To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.\\n\\n`\n        )\n      : emojify(\n          `:vertical_traffic_light: Renovate will begin keeping your dependencies up-to-date only once you merge or close this Pull Request.\\n\\n`\n        );\n  // TODO #7154\n  prTemplate += emojify(\n    `\n\n---\n{{PACKAGE FILES}}\n{{CONFIG}}\n{{BASEBRANCH}}\n{{PRLIST}}\n{{WARNINGS}}\n{{ERRORS}}\n\n---\n\n:question: Got questions? Check out Renovate's [Docs](${\n      config.productLinks!.documentation\n    }), particularly the Getting Started section.\nIf you need any further assistance then you can also [request help here](${\n      config.productLinks!.help\n    }).\n`\n  );\n  prTemplate += rebaseCheckBox;\n  let prBody = prTemplate;\n  if (packageFiles && Object.entries(packageFiles).length) {\n    let files: string[] = [];\n    for (const [manager, managerFiles] of Object.entries(packageFiles)) {\n      files = files.concat(\n        managerFiles.map((file) => ` * \\`${file.packageFile}\\` (${manager})`)\n      );\n    }\n    prBody =\n      prBody.replace(\n        '{{PACKAGE FILES}}',\n        '### Detected Package Files\\n\\n' + files.join('\\n')\n      ) + '\\n';\n  } else {\n    prBody = prBody.replace('{{PACKAGE FILES}}\\n', '');\n  }\n  let configDesc = '';\n  if (GlobalConfig.get('dryRun')) {\n    // TODO: types (#7154)\n    logger.info(`DRY-RUN: Would check branch ${config.onboardingBranch!}`);\n  } else {\n    configDesc = getConfigDesc(config, packageFiles!);\n  }\n  prBody = prBody.replace('{{CONFIG}}\\n', configDesc);\n  prBody = prBody.replace(\n    '{{WARNINGS}}\\n',\n    getWarnings(config) + getDepWarningsOnboardingPR(packageFiles!, config)\n  );\n  prBody = prBody.replace('{{ERRORS}}\\n', getErrors(config));\n  prBody = prBody.replace('{{BASEBRANCH}}\\n', getBaseBranchDesc(config));\n  prBody = prBody.replace('{{PRLIST}}\\n', getPrList(config, branches));\n  if (is.string(config.prHeader)) {\n    prBody = `${template.compile(config.prHeader, config)}\\n\\n${prBody}`;\n  }\n  if (is.string(config.prFooter)) {\n    prBody = `${prBody}\\n---\\n\\n${template.compile(config.prFooter, config)}\\n`;\n  }\n\n  prBody += renovateConfigHashComment;\n\n  logger.trace('prBody:\\n' + prBody);\n\n  prBody = platform.massageMarkdown(prBody);\n\n  if (existingPr) {\n    logger.debug('Found open onboarding PR');\n    // Check if existing PR needs updating\n    const prBodyHash = hashBody(prBody);\n    if (existingPr.bodyStruct?.hash === prBodyHash) {\n      logger.debug(`Pull Request #${existingPr.number} does not need updating`);\n      return;\n    }\n    // PR must need updating\n    if (GlobalConfig.get('dryRun')) {\n      logger.info('DRY-RUN: Would update onboarding PR');\n    } else {\n      await platform.updatePr({\n        number: existingPr.number,\n        prTitle: existingPr.title,\n        prBody,\n      });\n      logger.info({ pr: existingPr.number }, 'Onboarding PR updated');\n    }\n    return;\n  }\n  logger.debug('Creating onboarding PR');\n  const labels: string[] = prepareLabels(config);\n  try {\n    if (GlobalConfig.get('dryRun')) {\n      logger.info('DRY-RUN: Would create onboarding PR');\n    } else {\n      // TODO #7154\n      const pr = await platform.createPr({\n        sourceBranch: config.onboardingBranch!,\n        targetBranch: config.defaultBranch!,\n        prTitle: config.onboardingPrTitle!,\n        prBody,\n        labels,\n        platformOptions: getPlatformPrOptions({\n          ...config,\n          automerge: false,\n        }),\n      });\n      logger.info(\n        { pr: `Pull Request #${pr!.number}` },\n        'Onboarding PR created'\n      );\n      await addParticipants(config, pr!);\n    }\n  } catch (err) {\n    if (\n      err.response?.statusCode === 422 &&\n      err.response?.body?.errors?.[0]?.message?.startsWith(\n        'A pull request already exists'\n      )\n    ) {\n      logger.warn(\n        'Onboarding PR already exists but cannot find it. It was probably created by a different user.'\n      );\n      await scm.deleteBranch(config.onboardingBranch!);\n      return;\n    }\n    throw err;\n  }\n}\n\ninterface RebaseCheckboxComponents {\n  rebaseCheckBox: string;\n  renovateConfigHashComment: string;\n}\n\nasync function getRebaseCheckboxComponents(\n  config: RenovateConfig\n): Promise<RebaseCheckboxComponents> {\n  let rebaseCheckBox = '';\n  let renovateConfigHashComment = '';\n  if (!config.onboardingRebaseCheckbox) {\n    return { rebaseCheckBox, renovateConfigHashComment };\n  }\n\n  // Create markdown checkbox\n  rebaseCheckBox = `\\n\\n---\\n\\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, click this checkbox.\\n`;\n\n  // Create hashMeta\n  const configFile = defaultConfigFile(config);\n  const existingContents =\n    (await getFile(configFile, config.onboardingBranch)) ?? '';\n  const hash = toSha256(existingContents);\n  renovateConfigHashComment = `\\n<!--renovate-config-hash:${hash}-->\\n`;\n\n  return { rebaseCheckBox, renovateConfigHashComment };\n}\n"]}