{"version":3,"file":"codespaces.js","sourceRoot":"","sources":["../../../../../lib/workers/global/config/parse/codespaces.ts"],"names":[],"mappings":";;;;AAAA,0EAAqC;AAGrC,uBAAuB;AAChB,KAAK,UAAU,SAAS,CAAC,MAAiB;IAC/C,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,MAAM,EAAE;QACrC,OAAO,MAAM,CAAC;KACf;IAED,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;QAC7C,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;KACzC;IAED,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,EAAE;QAChC,MAAM,EAAE,GAAG,uBAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3C,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;SACvB,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QACxD,MAAM,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAnBD,8BAmBC","sourcesContent":["import readline from 'node:readline';\nimport type { AllConfig } from '../../../../config/types';\n\n// istanbul ignore next\nexport async function setConfig(config: AllConfig): Promise<AllConfig> {\n  if (process.env.CODESPACES !== 'true') {\n    return config;\n  }\n\n  if (!config.token && process.env.GITHUB_TOKEN) {\n    config.token = process.env.GITHUB_TOKEN;\n  }\n\n  if (!config.repositories?.length) {\n    const rl = readline.promises.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n    const repo = await rl.question('\\n\\nRepository name: ');\n    config.repositories = [repo];\n  }\n\n  return config;\n}\n"]}