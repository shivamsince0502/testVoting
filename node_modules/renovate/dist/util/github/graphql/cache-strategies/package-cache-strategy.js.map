{"version":3,"file":"package-cache-strategy.js","sourceRoot":"","sources":["../../../../../lib/util/github/graphql/cache-strategies/package-cache-strategy.ts"],"names":[],"mappings":";;;;AAAA,6EAAuD;AAEvD,uEAA+E;AAE/E;;GAEG;AACH,MAAa,iCAEX,SAAQ,4DAA8C;IACtD,IAAI;QACF,OAAO,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,OAAO,CACX,WAAiD;QAEjD,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS;iBAC1B,IAAI,CAAC;gBACJ,+EAA+E;gBAC/E,6FAA6F;gBAC7F,KAAK,EAAE,4DAAkC,CAAC,YAAY,GAAG,EAAE;aAC5D,CAAC;iBACD,KAAK,EAAE,CAAC;YACX,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YACpE,IAAI,UAAU,IAAI,UAAU,GAAG,CAAC,EAAE;gBAChC,MAAM,YAAY,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,WAAW,EACX,UAAU,CACX,CAAC;aACH;SACF;IACH,CAAC;CACF;AA7BD,8EA6BC","sourcesContent":["import * as packageCache from '../../../cache/package';\nimport type { GithubDatasourceItem, GithubGraphqlCacheRecord } from '../types';\nimport { AbstractGithubGraphqlCacheStrategy } from './abstract-cache-strategy';\n\n/**\n * Package cache strategy meant to be used for public packages.\n */\nexport class GithubGraphqlPackageCacheStrategy<\n  GithubItem extends GithubDatasourceItem\n> extends AbstractGithubGraphqlCacheStrategy<GithubItem> {\n  load(): Promise<GithubGraphqlCacheRecord<GithubItem> | undefined> {\n    return packageCache.get(this.cacheNs, this.cacheKey);\n  }\n\n  async persist(\n    cacheRecord: GithubGraphqlCacheRecord<GithubItem>\n  ): Promise<void> {\n    if (this.hasUpdatedItems) {\n      const expiry = this.createdAt\n        .plus({\n          // Not using 'days' as it does not handle adjustments for Daylight Saving time.\n          // The offset in the resulting DateTime object does not match that of the expiry or this.now.\n          hours: AbstractGithubGraphqlCacheStrategy.cacheTTLDays * 24,\n        })\n        .toUTC();\n      const ttlMinutes = expiry.diff(this.now, ['minutes']).as('minutes');\n      if (ttlMinutes && ttlMinutes > 0) {\n        await packageCache.set(\n          this.cacheNs,\n          this.cacheKey,\n          cacheRecord,\n          ttlMinutes\n        );\n      }\n    }\n  }\n}\n"]}