import { z } from 'zod';
import type { GithubGraphqlDatasourceAdapter, GithubTagItem } from '../types';
declare const GithubGraphqlTag: z.ZodObject<{
    version: z.ZodString;
    target: z.ZodUnion<[z.ZodObject<{
        type: z.ZodLiteral<"Commit">;
        oid: z.ZodString;
        releaseTimestamp: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "Commit";
        releaseTimestamp: string;
        oid: string;
    }, {
        type: "Commit";
        releaseTimestamp: string;
        oid: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"Tag">;
        target: z.ZodObject<{
            oid: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            oid: string;
        }, {
            oid: string;
        }>;
        tagger: z.ZodObject<{
            releaseTimestamp: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            releaseTimestamp: string;
        }, {
            releaseTimestamp: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "Tag";
        target: {
            oid: string;
        };
        tagger: {
            releaseTimestamp: string;
        };
    }, {
        type: "Tag";
        target: {
            oid: string;
        };
        tagger: {
            releaseTimestamp: string;
        };
    }>]>;
}, "strip", z.ZodTypeAny, {
    target: {
        type: "Commit";
        releaseTimestamp: string;
        oid: string;
    } | {
        type: "Tag";
        target: {
            oid: string;
        };
        tagger: {
            releaseTimestamp: string;
        };
    };
    version: string;
}, {
    target: {
        type: "Commit";
        releaseTimestamp: string;
        oid: string;
    } | {
        type: "Tag";
        target: {
            oid: string;
        };
        tagger: {
            releaseTimestamp: string;
        };
    };
    version: string;
}>;
export type GithubGraphqlTag = z.infer<typeof GithubGraphqlTag>;
export declare const adapter: GithubGraphqlDatasourceAdapter<GithubGraphqlTag, GithubTagItem>;
export {};
