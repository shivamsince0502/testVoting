{"version":3,"file":"s3.js","sourceRoot":"","sources":["../../lib/util/s3.ts"],"names":[],"mappings":";;;AAAA,+CAA+C;AAC/C,kDAA8C;AAC9C,+BAAiC;AAEjC,IAAI,UAAgC,CAAC;AACrC,SAAgB,WAAW;IACzB,IAAI,CAAC,UAAU,EAAE;QACf,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;QACpD,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QAC5D,UAAU,GAAG,IAAI,oBAAQ,CAAC;YACxB,GAAG,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC;YAC7B,GAAG,CAAC,cAAc,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;SAChD,CAAC,CAAC;KACJ;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AAVD,kCAUC;AAOD,SAAgB,UAAU,CAAC,MAAoB;IAC7C,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAA,cAAQ,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACzE,IAAI,SAAS,KAAK,IAAI,EAAE;QACtB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,SAAS,CAAC,QAAQ,KAAK,KAAK,EAAE;QAChC,OAAO,IAAI,CAAC;KACb;IACD,OAAO;QACL,MAAM,EAAE,SAAS,CAAC,IAAI;QACtB,GAAG,EAAE,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;KACrC,CAAC;AACJ,CAAC;AAZD,gCAYC","sourcesContent":["// Singleton S3 instance initialized on-demand.\nimport { S3Client } from '@aws-sdk/client-s3';\nimport { parseUrl } from './url';\n\nlet s3Instance: S3Client | undefined;\nexport function getS3Client(): S3Client {\n  if (!s3Instance) {\n    const endpoint = process.env.RENOVATE_X_S3_ENDPOINT;\n    const forcePathStyle = process.env.RENOVATE_X_S3_PATH_STYLE;\n    s3Instance = new S3Client({\n      ...(endpoint && { endpoint }),\n      ...(forcePathStyle && { forcePathStyle: true }),\n    });\n  }\n  return s3Instance;\n}\n\nexport interface S3UrlParts {\n  Bucket: string;\n  Key: string;\n}\n\nexport function parseS3Url(rawUrl: URL | string): S3UrlParts | null {\n  const parsedUrl = typeof rawUrl === 'string' ? parseUrl(rawUrl) : rawUrl;\n  if (parsedUrl === null) {\n    return null;\n  }\n  if (parsedUrl.protocol !== 's3:') {\n    return null;\n  }\n  return {\n    Bucket: parsedUrl.host,\n    Key: parsedUrl.pathname.substring(1),\n  };\n}\n"]}