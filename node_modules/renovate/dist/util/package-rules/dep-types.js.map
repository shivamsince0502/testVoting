{"version":3,"file":"dep-types.js","sourceRoot":"","sources":["../../../lib/util/package-rules/dep-types.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,iCAAiC;AAEjC,MAAa,eAAgB,SAAQ,cAAO;IACjC,OAAO,CACd,EAAE,QAAQ,EAAE,OAAO,EAA0B,EAC7C,EAAE,aAAa,EAAe;QAE9B,IAAI,YAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;QAED,MAAM,MAAM,GACV,CAAC,OAAO,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC5C,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACrD,OAAO,MAAM,IAAI,KAAK,CAAC;IACzB,CAAC;CACF;AAdD,0CAcC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { Matcher } from './base';\n\nexport class DepTypesMatcher extends Matcher {\n  override matches(\n    { depTypes, depType }: PackageRuleInputConfig,\n    { matchDepTypes }: PackageRule\n  ): boolean | null {\n    if (is.undefined(matchDepTypes)) {\n      return null;\n    }\n\n    const result =\n      (depType && matchDepTypes.includes(depType)) ||\n      depTypes?.some((dt) => matchDepTypes.includes(dt));\n    return result ?? false;\n  }\n}\n"]}