{"version":3,"file":"matchers.js","sourceRoot":"","sources":["../../../lib/util/package-rules/matchers.ts"],"names":[],"mappings":";;AAAA,mDAAsD;AACtD,6CAAiD;AACjD,mDAAsD;AACtD,uDAA0D;AAC1D,+CAAmD;AACnD,2CAA6C;AAC7C,iDAAoD;AACpD,2CAA8C;AAC9C,mCAA2C;AAC3C,yCAA6C;AAC7C,yDAA4D;AAC5D,mDAAqD;AACrD,yDAA4D;AAC5D,yDAA4D;AAC5D,6DAAgE;AAChE,6CAAiD;AAEjD,iDAAoD;AAEpD,MAAM,QAAQ,GAAmB,EAAE,CAAC;AACpC,kBAAe,QAAQ,CAAC;AAExB,6GAA6G;AAE7G,+FAA+F;AAC/F,8FAA8F;AAC9F,4GAA4G;AAC5G,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,yCAAsB,EAAE,CAAC,CAAC,CAAC;AAC9C,QAAQ,CAAC,IAAI,CAAC;IACZ,IAAI,0BAAc,EAAE;IACpB,IAAI,iCAAkB,EAAE;IACxB,IAAI,kCAAkB,EAAE;IACxB,IAAI,yCAAsB,EAAE;IAC5B,IAAI,yCAAsB,EAAE;CAC7B,CAAC,CAAC;AACH,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,wBAAgB,EAAE,CAAC,CAAC,CAAC;AACxC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,2BAAe,EAAE,CAAC,CAAC,CAAC;AACvC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,mCAAmB,EAAE,CAAC,CAAC,CAAC;AAC3C,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,0BAAe,EAAE,CAAC,CAAC,CAAC;AACvC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,gCAAkB,EAAE,CAAC,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,iCAAkB,EAAE,CAAC,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,8BAAiB,EAAE,EAAE,IAAI,6CAAwB,EAAE,CAAC,CAAC,CAAC;AACzE,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,mCAAmB,EAAE,CAAC,CAAC,CAAC;AAC3C,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,uCAAqB,EAAE,CAAC,CAAC,CAAC;AAC7C,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,8BAAiB,EAAE,CAAC,CAAC,CAAC","sourcesContent":["import { BaseBranchesMatcher } from './base-branches';\nimport { CategoriesMatcher } from './categories';\nimport { CurrentValueMatcher } from './current-value';\nimport { CurrentVersionMatcher } from './current-version';\nimport { DatasourcesMatcher } from './datasources';\nimport { DepNameMatcher } from './dep-names';\nimport { DepPatternsMatcher } from './dep-patterns';\nimport { DepTypesMatcher } from './dep-types';\nimport { FileNamesMatcher } from './files';\nimport { ManagersMatcher } from './managers';\nimport { MergeConfidenceMatcher } from './merge-confidence';\nimport { PackageNameMatcher } from './package-names';\nimport { PackagePatternsMatcher } from './package-patterns';\nimport { PackagePrefixesMatcher } from './package-prefixes';\nimport { SourceUrlPrefixesMatcher } from './sourceurl-prefixes';\nimport { SourceUrlsMatcher } from './sourceurls';\nimport type { MatcherApi } from './types';\nimport { UpdateTypesMatcher } from './update-types';\n\nconst matchers: MatcherApi[][] = [];\nexport default matchers;\n\n// Each matcher under the same index will use a logical OR, if multiple matchers are applied AND will be used\n\n// applyPackageRules evaluates matchers in the order of insertion and returns early on failure.\n// Therefore, when multiple matchers are set in a single packageRule, some may not be checked.\n// Since matchConfidence matcher can abort the run due to unauthenticated use, it should be evaluated first.\nmatchers.push([new MergeConfidenceMatcher()]);\nmatchers.push([\n  new DepNameMatcher(),\n  new DepPatternsMatcher(),\n  new PackageNameMatcher(),\n  new PackagePatternsMatcher(),\n  new PackagePrefixesMatcher(),\n]);\nmatchers.push([new FileNamesMatcher()]);\nmatchers.push([new DepTypesMatcher()]);\nmatchers.push([new BaseBranchesMatcher()]);\nmatchers.push([new ManagersMatcher()]);\nmatchers.push([new DatasourcesMatcher()]);\nmatchers.push([new UpdateTypesMatcher()]);\nmatchers.push([new SourceUrlsMatcher(), new SourceUrlPrefixesMatcher()]);\nmatchers.push([new CurrentValueMatcher()]);\nmatchers.push([new CurrentVersionMatcher()]);\nmatchers.push([new CategoriesMatcher()]);\n"]}