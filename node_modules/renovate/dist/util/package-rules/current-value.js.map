{"version":3,"file":"current-value.js","sourceRoot":"","sources":["../../../lib/util/package-rules/current-value.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,yCAAsC;AACtC,oCAAgD;AAChD,iCAAiC;AAEjC,MAAa,mBAAoB,SAAQ,cAAO;IACrC,OAAO,CACd,EAAE,YAAY,EAA0B,EACxC,EAAE,iBAAiB,EAAe;QAElC,IAAI,YAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE;YACnC,OAAO,IAAI,CAAC;SACb;QACD,MAAM,qBAAqB,GAAG,IAAA,4BAAoB,EAAC,iBAAiB,CAAC,CAAC;QAEtE,IAAI,CAAC,qBAAqB,EAAE;YAC1B,eAAM,CAAC,KAAK,CACV,EAAE,iBAAiB,EAAE,EACrB,mEAAmE,CACpE,CAAC;YACF,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,qBAAqB,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;CACF;AAxBD,kDAwBC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { logger } from '../../logger';\nimport { configRegexPredicate } from '../regex';\nimport { Matcher } from './base';\n\nexport class CurrentValueMatcher extends Matcher {\n  override matches(\n    { currentValue }: PackageRuleInputConfig,\n    { matchCurrentValue }: PackageRule\n  ): boolean | null {\n    if (is.undefined(matchCurrentValue)) {\n      return null;\n    }\n    const matchCurrentValuePred = configRegexPredicate(matchCurrentValue);\n\n    if (!matchCurrentValuePred) {\n      logger.debug(\n        { matchCurrentValue },\n        'matchCurrentValue should be a regex, starting and ending with `/`'\n      );\n      return false;\n    }\n\n    if (!currentValue) {\n      return false;\n    }\n\n    return matchCurrentValuePred(currentValue);\n  }\n}\n"]}