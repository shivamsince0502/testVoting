{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../lib/util/package-rules/base.ts"],"names":[],"mappings":";;;AAGA,MAAsB,OAAO;IAC3B;;;;;OAKG;IACH,QAAQ,CACN,WAAmC,EACnC,WAAwB;QAExB,OAAO,IAAI,CAAC;IACd,CAAC;CAYF;AAxBD,0BAwBC","sourcesContent":["import type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport type { MatcherApi } from './types';\n\nexport abstract class Matcher implements MatcherApi {\n  /**\n   * Test exclusion packageRule against inputConfig\n   * @return null if no rules are defined, true if exclusion should be applied and else false\n   * @param inputConfig\n   * @param packageRule\n   */\n  excludes(\n    inputConfig: PackageRuleInputConfig,\n    packageRule: PackageRule\n  ): boolean | null {\n    return null;\n  }\n\n  /**\n   * Test match packageRule against inputConfig\n   * @return null if no rules are defined, true if match should be applied and else false\n   * @param inputConfig\n   * @param packageRule\n   */\n  abstract matches(\n    inputConfig: PackageRuleInputConfig,\n    packageRule: PackageRule\n  ): boolean | null;\n}\n"]}