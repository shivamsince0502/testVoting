"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DepPatternsMatcher = void 0;
const tslib_1 = require("tslib");
const is_1 = tslib_1.__importDefault(require("@sindresorhus/is"));
const logger_1 = require("../../logger");
const regex_1 = require("../regex");
const base_1 = require("./base");
const utils_1 = require("./utils");
class DepPatternsMatcher extends base_1.Matcher {
    matches({ depName, updateType }, { matchDepPatterns }) {
        if (is_1.default.undefined(matchDepPatterns)) {
            return null;
        }
        if (is_1.default.undefined(depName)) {
            return false;
        }
        let isMatch = false;
        for (const packagePattern of matchDepPatterns) {
            const packageRegex = (0, regex_1.regEx)((0, utils_1.massagePattern)(packagePattern));
            if (packageRegex.test(depName)) {
                logger_1.logger.trace(`${depName} matches against ${String(packageRegex)}`);
                isMatch = true;
            }
        }
        return isMatch;
    }
    excludes({ depName, updateType }, { excludeDepPatterns }) {
        // ignore lockFileMaintenance for backwards compatibility
        if (is_1.default.undefined(excludeDepPatterns)) {
            return null;
        }
        if (is_1.default.undefined(depName)) {
            return false;
        }
        let isMatch = false;
        for (const pattern of excludeDepPatterns) {
            const packageRegex = (0, regex_1.regEx)((0, utils_1.massagePattern)(pattern));
            if (packageRegex.test(depName)) {
                logger_1.logger.trace(`${depName} matches against ${String(packageRegex)}`);
                isMatch = true;
            }
        }
        return isMatch;
    }
}
exports.DepPatternsMatcher = DepPatternsMatcher;
//# sourceMappingURL=dep-patterns.js.map