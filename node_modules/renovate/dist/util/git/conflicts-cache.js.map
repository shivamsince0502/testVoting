{"version":3,"file":"conflicts-cache.js","sourceRoot":"","sources":["../../../lib/util/git/conflicts-cache.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AACtC,oDAA+C;AAE/C,SAAgB,uBAAuB,CACrC,UAAkB,EAClB,SAAiB,EACjB,UAAkB,EAClB,aAAqB;IAErB,MAAM,KAAK,GAAG,IAAA,qBAAQ,GAAE,CAAC;IACzB,MAAM,MAAM,GAAG,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;IAC3E,IACE,MAAM;QACN,MAAM,CAAC,UAAU,KAAK,UAAU;QAChC,MAAM,CAAC,aAAa,KAAK,aAAa;QACtC,MAAM,CAAC,GAAG,KAAK,SAAS;QACxB,MAAM,CAAC,YAAY,KAAK,SAAS,EACjC;QACA,OAAO,MAAM,CAAC,YAAY,CAAC;KAC5B;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAnBD,0DAmBC;AAED,SAAgB,uBAAuB,CACrC,UAAkB,EAClB,YAAqB;IAErB,MAAM,KAAK,GAAG,IAAA,qBAAQ,GAAE,CAAC;IACzB,MAAM,MAAM,GAAG,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;IAE3E,IAAI,CAAC,MAAM,EAAE;QACX,eAAM,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;QACpE,OAAO;KACR;IAED,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;AACrC,CAAC;AAbD,0DAaC","sourcesContent":["import { logger } from '../../logger';\nimport { getCache } from '../cache/repository';\n\nexport function getCachedConflictResult(\n  branchName: string,\n  branchSha: string,\n  baseBranch: string,\n  baseBranchSha: string\n): boolean | null {\n  const cache = getCache();\n  const branch = cache?.branches?.find((br) => br.branchName === branchName);\n  if (\n    branch &&\n    branch.baseBranch === baseBranch &&\n    branch.baseBranchSha === baseBranchSha &&\n    branch.sha === branchSha &&\n    branch.isConflicted !== undefined\n  ) {\n    return branch.isConflicted;\n  }\n\n  return null;\n}\n\nexport function setCachedConflictResult(\n  branchName: string,\n  isConflicted: boolean\n): void {\n  const cache = getCache();\n  const branch = cache?.branches?.find((br) => br.branchName === branchName);\n\n  if (!branch) {\n    logger.debug(`setCachedConflictResult(): Branch cache not present`);\n    return;\n  }\n\n  branch.isConflicted = isConflicted;\n}\n"]}