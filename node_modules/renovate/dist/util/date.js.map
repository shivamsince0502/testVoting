{"version":3,"file":"date.js","sourceRoot":"","sources":["../../lib/util/date.ts"],"names":[],"mappings":";;;AAAA,iCAAiC;AAEjC,MAAM,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC;AAChC,MAAM,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,aAAa,CAAC;AAE3C,SAAgB,cAAc,CAAC,SAAiB;IAC9C,OAAO,IAAI,CAAC,KAAK,CACf,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,UAAU,CACpE,CAAC;AACJ,CAAC;AAJD,wCAIC;AAED,SAAgB,iBAAiB,CAAC,IAAU;IAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,aAAa,CAAC,CAAC;AAC7E,CAAC;AAFD,8CAEC;AAED,SAAgB,eAAe,CAAC,IAAmB;IACjD,MAAM,QAAQ,GACZ,OAAO,IAAI,KAAK,QAAQ;QACtB,CAAC,CAAC,gBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,gBAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAEhC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;QACrB,OAAO,CAAC,CAAC;KACV;IAED,MAAM,IAAI,GAAG,gBAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IACpD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AAZD,0CAYC;AAED,SAAgB,YAAY,CAAC,SAAiB;IAC5C,OAAO,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;AAC9D,CAAC;AAFD,oCAEC","sourcesContent":["import { DateTime } from 'luxon';\n\nconst ONE_MINUTE_MS = 60 * 1000;\nconst ONE_DAY_MS = 24 * 60 * ONE_MINUTE_MS;\n\nexport function getElapsedDays(timestamp: string): number {\n  return Math.floor(\n    (new Date().getTime() - new Date(timestamp).getTime()) / ONE_DAY_MS\n  );\n}\n\nexport function getElapsedMinutes(date: Date): number {\n  return Math.floor((new Date().getTime() - date.getTime()) / ONE_MINUTE_MS);\n}\n\nexport function getElapsedHours(date: Date | string): number {\n  const pastDate =\n    typeof date === 'string'\n      ? DateTime.fromISO(date)\n      : DateTime.fromJSDate(date);\n\n  if (!pastDate.isValid) {\n    return 0;\n  }\n\n  const diff = DateTime.now().diff(pastDate, 'hours');\n  return Math.floor(diff.hours);\n}\n\nexport function getElapsedMs(timestamp: string): number {\n  return new Date().getTime() - new Date(timestamp).getTime();\n}\n"]}