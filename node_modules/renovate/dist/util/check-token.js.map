{"version":3,"file":"check-token.js","sourceRoot":"","sources":["../../lib/util/check-token.ts"],"names":[],"mappings":";;;;AAAA,6CAAgD;AAChD,sCAAmC;AACnC,iGAAsG;AACtG,2EAAiF;AACjF,mEAAyE;AAEzE,uEAAiD;AACjD,gEAA0C;AAE1C,SAAgB,gBAAgB,CAC9B,eAAqD,EAAE;IAEvD,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC;QAC/B,QAAQ,EAAE,QAAQ;QAClB,GAAG,EAAE,wBAAwB;KAC9B,CAAC,CAAC;IAEH,IAAI,KAAK,EAAE;QACT,eAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACtC,OAAO;KACR;IAED,IAAI,CAAC,qBAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;QACxC,eAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACjD,OAAO;KACR;IAED,MAAM,UAAU,GAAa,EAAE,CAAC;IAChC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;SACrC,IAAI,EAAE;SACN,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;SACxB,IAAI,EAAE,CAAC;IACV,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,IACE,CAAC,GAAG,CAAC,UAAU;YACf,CAAC,GAAG,CAAC,UAAU,KAAK,kCAAoB,CAAC,EAAE;gBACzC,GAAG,CAAC,UAAU,KAAK,0CAAwB,CAAC,EAAE;gBAC9C,GAAG,CAAC,UAAU,KAAK,+DAAkC,CAAC,EAAE,CAAC,EAC3D;YACA,GAAG,CAAC,UAAU,GAAG,uBAAuB,CAAC;YACzC,IAAI,GAAG,CAAC,OAAO,EAAE;gBACf,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aAC9B;SACF;KACF;IAED,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAChC,sCAAsC,CACvC,CAAC;QACF,IAAI,CAAC,aAAa,EAAE;YAClB,eAAM,CAAC,IAAI,CACT,EAAE,UAAU,EAAE,EACd,gDAAgD,CACjD,CAAC;YACF,QAAQ,CAAC,GAAG,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC;SAC5D;KACF;AACH,CAAC;AAjDD,4CAiDC","sourcesContent":["import { GlobalConfig } from '../config/global';\nimport { logger } from '../logger';\nimport { GithubReleaseAttachmentsDatasource } from '../modules/datasource/github-release-attachments';\nimport { GithubReleasesDatasource } from '../modules/datasource/github-releases';\nimport { GithubTagsDatasource } from '../modules/datasource/github-tags';\nimport type { PackageFileContent } from '../modules/manager/types';\nimport * as memCache from '../util/cache/memory';\nimport * as hostRules from './host-rules';\n\nexport function checkGithubToken(\n  packageFiles: Record<string, PackageFileContent[]> = {}\n): void {\n  const { token } = hostRules.find({\n    hostType: 'github',\n    url: 'https://api.github.com',\n  });\n\n  if (token) {\n    logger.trace('GitHub token is found');\n    return;\n  }\n\n  if (!GlobalConfig.get('githubTokenWarn')) {\n    logger.trace('GitHub token warning is disabled');\n    return;\n  }\n\n  const githubDeps: string[] = [];\n  const deps = Object.values(packageFiles)\n    .flat()\n    .map((file) => file.deps)\n    .flat();\n  for (const dep of deps) {\n    if (\n      !dep.skipReason &&\n      (dep.datasource === GithubTagsDatasource.id ||\n        dep.datasource === GithubReleasesDatasource.id ||\n        dep.datasource === GithubReleaseAttachmentsDatasource.id)\n    ) {\n      dep.skipReason = 'github-token-required';\n      if (dep.depName) {\n        githubDeps.push(dep.depName);\n      }\n    }\n  }\n\n  if (githubDeps.length > 0) {\n    const warningLogged = memCache.get<boolean | undefined>(\n      'github-token-required-warning-logged'\n    );\n    if (!warningLogged) {\n      logger.warn(\n        { githubDeps },\n        `GitHub token is required for some dependencies`\n      );\n      memCache.set('github-token-required-warning-logged', true);\n    }\n  }\n}\n"]}