{"version":3,"file":"result.js","sourceRoot":"","sources":["../../lib/util/result.ts"],"names":[],"mappings":";;;AAYA,MAAa,MAAM;IAyCmB;IAxCpC,MAAM,CAAC,EAAE,CAAI,KAAQ;QACnB,OAAO,IAAI,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9C,CAAC;IAID,MAAM,CAAC,GAAG,CAAI,CAAK;QACjB,IAAI,OAAO,CAAC,KAAK,WAAW,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YACtD,OAAO,IAAI,MAAM,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SACpD;QAED,MAAM,KAAK,GAAG,CAAM,CAAC;QACrB,OAAO,IAAI,MAAM,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEO,MAAM,CAAC,YAAY,CAAI,QAAiB;QAC9C,IAAI;YACF,OAAO,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC9B;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1B;IACH,CAAC;IAEO,MAAM,CAAC,WAAW,CAAI,OAAmB;QAC/C,OAAO,OAAO,CAAC,IAAI,CACjB,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAC3B,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAC7B,CAAC;IACJ,CAAC;IAID,MAAM,CAAC,IAAI,CACT,KAA6B;QAE7B,OAAO,KAAK,YAAY,OAAO;YAC7B,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3B,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,YAAoC,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;IAAG,CAAC;IAEtD,SAAS,CAAI,EAAmB;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO;YACrB,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,KAAK,CAAI,QAAW;QAClB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IACvD,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IACvD,CAAC;CACF;AA5DD,wBA4DC","sourcesContent":["interface Ok<T> {\n  readonly success: true;\n  readonly value: T;\n}\n\ninterface Err<E> {\n  readonly success: false;\n  readonly error: E;\n}\n\ntype Res<T, E> = Ok<T> | Err<E>;\n\nexport class Result<T, E = Error> {\n  static ok<T>(value: T): Result<T, never> {\n    return new Result({ success: true, value });\n  }\n\n  static err(): Result<never, true>;\n  static err<E>(e: E): Result<never, E>;\n  static err<E>(e?: E): Result<never, E> | Result<never, true> {\n    if (typeof e === 'undefined' && arguments.length === 0) {\n      return new Result({ success: false, error: true });\n    }\n\n    const error = e as E;\n    return new Result({ success: false, error });\n  }\n\n  private static wrapCallback<T>(callback: () => T): Result<T> {\n    try {\n      return Result.ok(callback());\n    } catch (error) {\n      return Result.err(error);\n    }\n  }\n\n  private static wrapPromise<T>(promise: Promise<T>): Promise<Result<T>> {\n    return promise.then(\n      (value) => Result.ok(value),\n      (error) => Result.err(error)\n    );\n  }\n\n  static wrap<T>(callback: () => T): Result<T>;\n  static wrap<T>(promise: Promise<T>): Promise<Result<T>>;\n  static wrap<T>(\n    input: (() => T) | Promise<T>\n  ): Result<T> | Promise<Result<T>> {\n    return input instanceof Promise\n      ? Result.wrapPromise(input)\n      : Result.wrapCallback(input);\n  }\n\n  private constructor(public readonly res: Res<T, E>) {}\n\n  transform<U>(fn: (value: T) => U): Result<U, E> {\n    return this.res.success\n      ? Result.ok(fn(this.res.value))\n      : Result.err(this.res.error);\n  }\n\n  catch<U>(fallback: U): T | U {\n    return this.res.success ? this.res.value : fallback;\n  }\n\n  get value(): T | undefined {\n    return this.res.success ? this.res.value : undefined;\n  }\n\n  get error(): E | undefined {\n    return this.res.success ? undefined : this.res.error;\n  }\n}\n"]}