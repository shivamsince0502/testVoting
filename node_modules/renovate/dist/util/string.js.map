{"version":3,"file":"string.js","sourceRoot":"","sources":["../../lib/util/string.ts"],"names":[],"mappings":";;;AAAA,+DAA+D;AAC/D,SAAgB,OAAO,CACrB,OAAe,EACf,KAAa,EACb,KAAa;IAEb,OAAO,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC;AAClE,CAAC;AAND,0BAMC;AAED,gEAAgE;AAChE,SAAgB,SAAS,CACvB,OAAe,EACf,KAAa,EACb,SAAiB,EACjB,SAAiB;IAEjB,OAAO,CACL,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC;QAC3B,SAAS;QACT,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,CAC5C,CAAC;AACJ,CAAC;AAXD,8BAWC;AAED;;GAEG;AACH,SAAgB,QAAQ,CAAC,KAAa;IACpC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC/C,CAAC;AAFD,4BAEC;AAED;;GAEG;AACH,SAAgB,UAAU,CAAC,KAAa;IACtC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjD,CAAC;AAFD,gCAEC;AAED,SAAgB,aAAa,CAC3B,OAAe,EACf,KAAa,EACb,QAAkB;IAElB,OAAO,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC;AAC7C,CAAC;AAND,sCAMC;AAED,SAAgB,WAAW,CACzB,CAA4B,EAC5B,CAA4B;IAE5B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;QACb,OAAO,CAAC,KAAK,CAAC,CAAC;KAChB;IACD,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC;AACtE,CAAC;AARD,kCAQC;AAED,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,CAAC;AAFD,wCAEC;AAED,SAAgB,SAAS,CAAC,KAAa;IACrC,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;KACvE;IAED,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC;AATD,8BASC;AAED;;;;;;;GAOG;AACH,SAAgB,OAAO,CAAC,CAAS;IAC/B,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACzC,MAAM,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACxC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACrB,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9B,CAAC;AALD,0BAKC","sourcesContent":["// Return true if the match string is found at index in content\nexport function matchAt(\n  content: string,\n  index: number,\n  match: string\n): boolean {\n  return content.substring(index, index + match.length) === match;\n}\n\n// Replace oldString with newString at location index of content\nexport function replaceAt(\n  content: string,\n  index: number,\n  oldString: string,\n  newString: string\n): string {\n  return (\n    content.substring(0, index) +\n    newString +\n    content.substring(index + oldString.length)\n  );\n}\n\n/**\n * Converts from utf-8 string to base64-encoded string\n */\nexport function toBase64(input: string): string {\n  return Buffer.from(input).toString('base64');\n}\n\n/**\n * Converts from base64-encoded string to utf-8 string\n */\nexport function fromBase64(input: string): string {\n  return Buffer.from(input, 'base64').toString();\n}\n\nexport function uniqueStrings(\n  element: string,\n  index: number,\n  elements: string[]\n): boolean {\n  return elements.indexOf(element) === index;\n}\n\nexport function looseEquals(\n  a: string | null | undefined,\n  b: string | null | undefined\n): boolean {\n  if (!(a && b)) {\n    return a === b;\n  }\n  return a.localeCompare(b, undefined, { sensitivity: 'base' }) === 0;\n}\n\nexport function isDockerDigest(input: string): boolean {\n  return /^sha256:[a-f0-9]{64}$/i.test(input);\n}\n\nexport function titleCase(input: string): string {\n  const words = input.toLowerCase().split(' ');\n\n  for (let i = 0; i < words.length; i++) {\n    const word = words[i];\n    words[i] = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n  }\n\n  return words.join(' ');\n}\n\n/**\n * Sometimes we extract small strings from a multi-megabyte files.\n * If we then save them in the in-memory cache, V8 may not free\n * the initial buffer, which can lead to memory leaks:\n *\n *   https://bugs.chromium.org/p/v8/issues/detail?id=2869\n *\n */\nexport function copystr(x: string): string {\n  const len = Buffer.byteLength(x, 'utf8');\n  const buf = Buffer.allocUnsafeSlow(len);\n  buf.write(x, 'utf8');\n  return buf.toString('utf8');\n}\n"]}