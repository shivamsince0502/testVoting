{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/util/exec/docker/index.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { GlobalConfig } from '../../../config/global';\nimport { SYSTEM_INSUFFICIENT_MEMORY } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { getPkgReleases } from '../../../modules/datasource';\nimport * as versioning from '../../../modules/versioning';\nimport { newlineRegex, regEx } from '../../regex';\nimport { uniq } from '../../uniq';\nimport { rawExec } from '../common';\nimport type { DockerOptions, Opt, VolumeOption, VolumesPair } from '../types';\n\nconst prefetchedImages = new Map<string, string>();\n\nconst digestRegex = regEx('Digest: (.*?)\\n');\n\nexport const sideCarImage = 'sidecar';\n\nexport async function prefetchDockerImage(taggedImage: string): Promise<void> {\n  if (prefetchedImages.has(taggedImage)) {\n    logger.debug(\n      `Docker image is already prefetched: ${taggedImage}@${prefetchedImages.get(\n        taggedImage\n      )!}`\n    );\n  } else {\n    logger.debug(`Fetching Docker image: ${taggedImage}`);\n    const res = await rawExec(`docker pull ${taggedImage}`, {\n      encoding: 'utf-8',\n    });\n    const imageDigest = digestRegex.exec(res?.stdout)?.[1] ?? 'unknown';\n    logger.debug(\n      `Finished fetching Docker image ${taggedImage}@${imageDigest}`\n    );\n    prefetchedImages.set(taggedImage, imageDigest);\n  }\n}\n\nexport function resetPrefetchedImages(): void {\n  prefetchedImages.clear();\n}\n\nfunction expandVolumeOption(x: VolumeOption): VolumesPair | null {\n  if (is.nonEmptyString(x)) {\n    return [x, x];\n  }\n  if (Array.isArray(x) && x.length === 2) {\n    const [from, to] = x;\n    if (is.nonEmptyString(from) && is.nonEmptyString(to)) {\n      return [from, to];\n    }\n  }\n  return null;\n}\n\nfunction volumesEql(x: VolumesPair, y: VolumesPair): boolean {\n  const [xFrom, xTo] = x;\n  const [yFrom, yTo] = y;\n  return xFrom === yFrom && xTo === yTo;\n}\n\nfunction prepareVolumes(volumes: VolumeOption[]): string[] {\n  const expanded: (VolumesPair | null)[] = volumes.map(expandVolumeOption);\n  const filtered: VolumesPair[] = expanded.filter(\n    (vol): vol is VolumesPair => vol !== null\n  );\n  const unique: VolumesPair[] = uniq<VolumesPair>(filtered, volumesEql);\n  return unique.map(([from, to]) => `-v \"${from}\":\"${to}\"`);\n}\n\nfunction prepareCommands(commands: Opt<string>[]): string[] {\n  return commands.filter<string>((command): command is string =>\n    is.string(command)\n  );\n}\n\nexport async function getDockerTag(\n  packageName: string,\n  constraint: string,\n  scheme: string\n): Promise<string> {\n  const ver = versioning.get(scheme);\n\n  if (!ver.isValid(constraint)) {\n    logger.warn(\n      { scheme, constraint },\n      `Invalid Docker image version constraint`\n    );\n    return 'latest';\n  }\n\n  logger.debug(\n    { packageName, scheme, constraint },\n    `Found version constraint - checking for a compatible image to use`\n  );\n  const imageReleases = await getPkgReleases({\n    datasource: 'docker',\n    packageName,\n    versioning: scheme,\n  });\n  if (imageReleases?.releases) {\n    let versions = imageReleases.releases.map((release) => release.version);\n    versions = versions.filter(\n      (version) => ver.isVersion(version) && ver.matches(version, constraint)\n    );\n    // Prefer stable versions over unstable, even if the range satisfies both types\n    if (!versions.every((version) => ver.isStable(version))) {\n      logger.debug('Filtering out unstable versions');\n      versions = versions.filter((version) => ver.isStable(version));\n    }\n    const version = versions.sort(ver.sortVersions.bind(ver)).pop();\n    if (version) {\n      logger.debug(\n        { packageName, scheme, constraint, version },\n        `Found compatible image version`\n      );\n      return version;\n    }\n  } else {\n    logger.error({ packageName }, `Docker exec: no releases found`);\n    return 'latest';\n  }\n  logger.warn(\n    { packageName, constraint, scheme },\n    'Failed to find a tag satisfying constraint, using \"latest\" tag instead'\n  );\n  return 'latest';\n}\n\nfunction getContainerName(image: string, prefix?: string | undefined): string {\n  return `${prefix ?? 'renovate_'}${image}`.replace(regEx(/\\//g), '_');\n}\n\nfunction getContainerLabel(prefix: string | undefined): string {\n  return `${prefix ?? 'renovate_'}child`;\n}\n\nexport async function removeDockerContainer(\n  image: string,\n  prefix: string\n): Promise<void> {\n  const containerName = getContainerName(image, prefix);\n  let cmd = `docker ps --filter name=${containerName} -aq`;\n  try {\n    const res = await rawExec(cmd, {\n      encoding: 'utf-8',\n    });\n    const containerId = res?.stdout?.trim() || '';\n    if (containerId.length) {\n      logger.debug(`Removing container with ID: ${containerId}`);\n      cmd = `docker rm -f ${containerId}`;\n      await rawExec(cmd, {\n        encoding: 'utf-8',\n      });\n    } else {\n      logger.trace({ image, containerName }, 'No running containers to remove');\n    }\n  } catch (err) {\n    logger.warn(\n      { image, containerName, cmd, err },\n      'Could not remove Docker container'\n    );\n  }\n}\n\nexport async function removeDanglingContainers(): Promise<void> {\n  if (GlobalConfig.get('binarySource') !== 'docker') {\n    return;\n  }\n\n  try {\n    const containerLabel = getContainerLabel(\n      GlobalConfig.get('dockerChildPrefix')\n    );\n    const res = await rawExec(\n      `docker ps --filter label=${containerLabel} -aq`,\n      {\n        encoding: 'utf-8',\n      }\n    );\n    if (res?.stdout?.trim().length) {\n      const containerIds = res.stdout\n        .trim()\n        .split(newlineRegex)\n        .map((container) => container.trim())\n        .filter(Boolean);\n      logger.debug({ containerIds }, 'Removing dangling child containers');\n      await rawExec(`docker rm -f ${containerIds.join(' ')}`, {\n        encoding: 'utf-8',\n      });\n    } else {\n      logger.debug('No dangling containers to remove');\n    }\n  } catch (err) {\n    if (err.errno === 'ENOMEM') {\n      throw new Error(SYSTEM_INSUFFICIENT_MEMORY);\n    }\n    if (err.stderr?.includes('Cannot connect to the Docker daemon')) {\n      logger.info('No docker daemon found');\n    } else {\n      logger.warn({ err }, 'Error removing dangling containers');\n    }\n  }\n}\n\nexport async function generateDockerCommand(\n  commands: string[],\n  preCommands: string[],\n  options: DockerOptions\n): Promise<string> {\n  const { envVars, cwd } = options;\n  let image = sideCarImage;\n  const volumes = options.volumes ?? [];\n  const {\n    localDir,\n    cacheDir,\n    containerbaseDir,\n    dockerUser,\n    dockerChildPrefix,\n    dockerCliOptions,\n    dockerSidecarImage,\n  } = GlobalConfig.get();\n  const result = ['docker run --rm'];\n  const containerName = getContainerName(image, dockerChildPrefix);\n  const containerLabel = getContainerLabel(dockerChildPrefix);\n  result.push(`--name=${containerName}`);\n  result.push(`--label=${containerLabel}`);\n  if (dockerUser) {\n    result.push(`--user=${dockerUser}`);\n  }\n  if (dockerCliOptions) {\n    result.push(dockerCliOptions);\n  }\n\n  const volumeDirs: VolumeOption[] = [localDir, cacheDir];\n  if (containerbaseDir) {\n    if (cacheDir && containerbaseDir.startsWith(cacheDir)) {\n      logger.debug('containerbaseDir is inside cacheDir');\n    } else {\n      logger.debug('containerbaseDir is separate from cacheDir');\n      volumeDirs.push(containerbaseDir);\n    }\n  } else {\n    logger.debug('containerbaseDir is missing');\n  }\n  volumeDirs.push(...volumes);\n  result.push(...prepareVolumes(volumeDirs));\n\n  if (envVars) {\n    result.push(\n      ...uniq(envVars)\n        .filter(is.string)\n        .map((e) => `-e ${e}`)\n    );\n  }\n\n  if (cwd) {\n    result.push(`-w \"${cwd}\"`);\n  }\n\n  // TODO: #7154\n  image = dockerSidecarImage!;\n\n  // TODO: add constraint: const tag = getDockerTag(image, sideCarImageVersion, 'semver');\n  logger.debug(\n    { image /*, tagConstraint: sideCarImageVersion, tag */ },\n    'Resolved tag constraint'\n  );\n\n  const taggedImage = image; // TODO: tag ? `${image}:${tag}` : `${image}`;\n  await prefetchDockerImage(taggedImage);\n  result.push(taggedImage);\n\n  const bashCommand = [...prepareCommands(preCommands), ...commands].join(\n    ' && '\n  );\n  result.push(`bash -l -c \"${bashCommand.replace(regEx(/\"/g), '\\\\\"')}\"`); // lgtm [js/incomplete-sanitization]\n\n  return result.join(' ');\n}\n"]}