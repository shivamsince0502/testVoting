{"version":3,"file":"common.js","sourceRoot":"","sources":["../../lib/util/common.ts"],"names":[],"mappings":";;;;AAAA,4CAIsB;AACtB,gEAA0C;AAC1C,+BAAiC;AAEjC;;;;;GAKG;AACH,SAAgB,cAAc,CAC5B,GAAW;IAEX,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,cAAQ,EAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACzC,IAAI,QAAQ,KAAK,eAAe,IAAI,QAAQ,EAAE,QAAQ,CAAC,mBAAmB,CAAC,EAAE;QAC3E,OAAO,OAAO,CAAC;KAChB;IACD,IAAI,QAAQ,KAAK,eAAe,IAAI,QAAQ,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE;QACnE,OAAO,WAAW,CAAC;KACpB;IACD,IAAI,QAAQ,KAAK,YAAY,IAAI,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC7D,OAAO,QAAQ,CAAC;KACjB;IACD,IAAI,QAAQ,KAAK,YAAY,IAAI,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC7D,OAAO,QAAQ,CAAC;KACjB;IAED,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAE7C,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,IAAI,CAAC;KACb;IAED,IAAI,0CAA8B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACrD,OAAO,WAAW,CAAC;KACpB;IACD,IAAI,uCAA2B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAClD,OAAO,QAAQ,CAAC;KACjB;IACD,IAAI,uCAA2B,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAClD,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAlCD,wCAkCC","sourcesContent":["import {\n  BITBUCKET_API_USING_HOST_TYPES,\n  GITHUB_API_USING_HOST_TYPES,\n  GITLAB_API_USING_HOST_TYPES,\n} from '../constants';\nimport * as hostRules from './host-rules';\nimport { parseUrl } from './url';\n\n/**\n * Tries to detect the `platform` from a url.\n *\n * @param url the url to detect `platform` from\n * @returns matched `platform` if found, otherwise `null`\n */\nexport function detectPlatform(\n  url: string\n): 'azure' | 'bitbucket' | 'github' | 'gitlab' | null {\n  const { hostname } = parseUrl(url) ?? {};\n  if (hostname === 'dev.azure.com' || hostname?.endsWith('.visualstudio.com')) {\n    return 'azure';\n  }\n  if (hostname === 'bitbucket.org' || hostname?.includes('bitbucket')) {\n    return 'bitbucket';\n  }\n  if (hostname === 'github.com' || hostname?.includes('github')) {\n    return 'github';\n  }\n  if (hostname === 'gitlab.com' || hostname?.includes('gitlab')) {\n    return 'gitlab';\n  }\n\n  const hostType = hostRules.hostType({ url });\n\n  if (!hostType) {\n    return null;\n  }\n\n  if (BITBUCKET_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'bitbucket';\n  }\n  if (GITHUB_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'github';\n  }\n  if (GITLAB_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'gitlab';\n  }\n\n  return null;\n}\n"]}