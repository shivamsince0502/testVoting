{"version":3,"file":"bitbucket.js","sourceRoot":"","sources":["../../../lib/util/http/bitbucket.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../logger';\nimport type { PagedResult } from '../../modules/platform/bitbucket/types';\nimport { parseUrl, resolveBaseUrl } from '../url';\nimport type { HttpOptions, HttpRequestOptions, HttpResponse } from './types';\nimport { Http } from '.';\n\nconst MAX_PAGES = 100;\nconst MAX_PAGELEN = 100;\n\nlet baseUrl = 'https://api.bitbucket.org/';\n\nexport const setBaseUrl = (url: string): void => {\n  baseUrl = url;\n};\n\nexport interface BitbucketHttpOptions extends HttpOptions {\n  paginate?: boolean;\n  pagelen?: number;\n}\n\nexport class BitbucketHttp extends Http<BitbucketHttpOptions> {\n  constructor(type = 'bitbucket', options?: BitbucketHttpOptions) {\n    super(type, options);\n  }\n\n  protected override async request<T>(\n    path: string,\n    options?: BitbucketHttpOptions & HttpRequestOptions<T>\n  ): Promise<HttpResponse<T>> {\n    const opts = { baseUrl, ...options };\n\n    const resolvedURL = parseUrl(resolveBaseUrl(baseUrl, path));\n\n    // istanbul ignore if: this should never happen\n    if (is.nullOrUndefined(resolvedURL)) {\n      logger.error({ path }, 'Bitbucket: cannot parse path');\n      throw new Error(`Bitbucket: cannot parse path ${path}`);\n    }\n\n    if (opts.paginate && !hasPagelen(resolvedURL)) {\n      const pagelen = opts.pagelen ?? MAX_PAGELEN;\n      resolvedURL.searchParams.set('pagelen', pagelen.toString());\n    }\n\n    const result = await super.request<T>(resolvedURL.toString(), opts);\n\n    if (opts.paginate && isPagedResult(result.body)) {\n      const resultBody = result.body as PagedResult<T>;\n      let page = 1;\n      let nextURL = resultBody.next;\n\n      while (is.nonEmptyString(nextURL) && page <= MAX_PAGES) {\n        const nextResult = await super.request<PagedResult<T>>(\n          nextURL,\n          options as BitbucketHttpOptions\n        );\n\n        resultBody.values.push(...nextResult.body.values);\n\n        nextURL = nextResult.body?.next;\n        page += 1;\n      }\n\n      // Override other page-related attributes\n      resultBody.pagelen = resultBody.values.length;\n      resultBody.size =\n        page <= MAX_PAGES\n          ? resultBody.values.length\n          : /* istanbul ignore next */ undefined;\n      resultBody.next =\n        page <= MAX_PAGES ? nextURL : /* istanbul ignore next */ undefined;\n    }\n\n    return result;\n  }\n}\n\nfunction hasPagelen(url: URL): boolean {\n  return !is.nullOrUndefined(url.searchParams.get('pagelen'));\n}\n\nfunction isPagedResult(obj: any): obj is PagedResult {\n  return is.nonEmptyObject(obj) && Array.isArray(obj.values);\n}\n"]}