import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CodeCommitClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CodeCommitClient";
import { AssociateApprovalRuleTemplateWithRepositoryInput } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface AssociateApprovalRuleTemplateWithRepositoryCommandInput
  extends AssociateApprovalRuleTemplateWithRepositoryInput {}
export interface AssociateApprovalRuleTemplateWithRepositoryCommandOutput
  extends __MetadataBearer {}
export declare class AssociateApprovalRuleTemplateWithRepositoryCommand extends $Command<
  AssociateApprovalRuleTemplateWithRepositoryCommandInput,
  AssociateApprovalRuleTemplateWithRepositoryCommandOutput,
  CodeCommitClientResolvedConfig
> {
  readonly input: AssociateApprovalRuleTemplateWithRepositoryCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: AssociateApprovalRuleTemplateWithRepositoryCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CodeCommitClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    AssociateApprovalRuleTemplateWithRepositoryCommandInput,
    AssociateApprovalRuleTemplateWithRepositoryCommandOutput
  >;
  private serialize;
  private deserialize;
}
