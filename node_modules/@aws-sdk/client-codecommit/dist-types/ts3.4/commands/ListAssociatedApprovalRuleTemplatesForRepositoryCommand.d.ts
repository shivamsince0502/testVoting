import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CodeCommitClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CodeCommitClient";
import {
  ListAssociatedApprovalRuleTemplatesForRepositoryInput,
  ListAssociatedApprovalRuleTemplatesForRepositoryOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface ListAssociatedApprovalRuleTemplatesForRepositoryCommandInput
  extends ListAssociatedApprovalRuleTemplatesForRepositoryInput {}
export interface ListAssociatedApprovalRuleTemplatesForRepositoryCommandOutput
  extends ListAssociatedApprovalRuleTemplatesForRepositoryOutput,
    __MetadataBearer {}
export declare class ListAssociatedApprovalRuleTemplatesForRepositoryCommand extends $Command<
  ListAssociatedApprovalRuleTemplatesForRepositoryCommandInput,
  ListAssociatedApprovalRuleTemplatesForRepositoryCommandOutput,
  CodeCommitClientResolvedConfig
> {
  readonly input: ListAssociatedApprovalRuleTemplatesForRepositoryCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(
    input: ListAssociatedApprovalRuleTemplatesForRepositoryCommandInput
  );
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CodeCommitClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ListAssociatedApprovalRuleTemplatesForRepositoryCommandInput,
    ListAssociatedApprovalRuleTemplatesForRepositoryCommandOutput
  >;
  private serialize;
  private deserialize;
}
