buildscript {
    repositories {
        // Use 'gradle install' to install the latest
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:+'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.ben-manes.versions' version '0.47.0'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
    // other repositories
}


configurations {
    bom
    upToDate
    exceedLatest
    platform
    upgradesFound
    upgradesFound2
    unresolvable
    unresolvable2
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    checkForGradleUpdate = true

    // Example 1: reject all non-stable versions
    rejectVersionIf {
        isNonStable(candidate.version)
    }

    // Example 2: disallow release candidates as upgradable versions from stable versions
    rejectVersionIf {
        isNonStable(candidate.version) && !isNonStable(currentVersion)
    }

    // Example 3: using the full syntax
    resolutionStrategy {
        componentSelection {
            configureEach {
                if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:3.1.2'
    implementation 'ch.qos.logback:logback-classic:1.4.8'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'com.alibaba:druid:0.1.19'
    implementation 'ru.yandex.clickhouse:clickhouse-jdbc:0.3.2'
    implementation 'org.apache.lucene:lucene-core:8.6.0'


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.2'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation 'junit:junit:4.13.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation group: 'org.mockito', name: 'mockito-core', version: '5.4.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.2'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
    implementation 'xmlpull:xmlpull:1.1.2.1'
    implementation 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'
    compileOnly 'org.apache.spark:spark-sql_2.12:2.4.8'
    implementation 'org.webjars.npm:lodash:2.2.1'
    implementation 'org.eclipse.jetty:jetty-xml:12.0.0.beta4'
    implementation group: 'com.wavemaker.studio', name: 'wavemaker-workspace-sync-utils', version: '11.3.6'
    implementation 'com.wavemaker.commons:wavemaker-commons-util:11.2.3'




    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'
    testImplementation "org.mockito:mockito-core:3.+"


}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'voting'
sourceCompatibility = '17'
targetCompatibility = '17'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
